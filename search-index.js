var searchIndex = {};
searchIndex["arrayvec"] = {"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:  array-backed vector and string types, which store their contents inline.","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[11,"default","","Return an empty `ArrayString`",0,{"o":{"n":"arraystring"}}],[11,"new","","Create a new empty `ArrayString`.",0,{"o":{"n":"arraystring"}}],[11,"from","","Create a new `ArrayString` from a `str`.",0,{"i":[{"n":"str"}],"o":{"g":["capacityerror"],"n":"result"}}],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,{"i":[{"n":"a"}],"o":{"g":["utf8error"],"n":"result"}}],[11,"capacity","","Return the capacity of the `ArrayString`.",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Adds the given char to the end of the string.",0,{"i":[{"n":"self"},{"n":"char"}]}],[11,"try_push","","Adds the given char to the end of the string.",0,{"i":[{"n":"self"},{"n":"char"}],"o":{"g":["capacityerror"],"n":"result"}}],[11,"push_str","","Adds the given string slice to the end of the string.",0,{"i":[{"n":"self"},{"n":"str"}]}],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["capacityerror"],"n":"result"}}],[11,"pop","","Removes the last character from the string and returns it.",0,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"remove","","Removes a `char` from this `ArrayString` at a byte position and returns it.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"char"}}],[11,"clear","","Make the string empty.",0,{"i":[{"n":"self"}]}],[11,"set_len","","Set the strings’s length.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"hash","","",0,{"i":[{"n":"self"},{"n":"h"}]}],[11,"borrow","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"as_ref","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write_char","","",0,{"i":[{"n":"self"},{"n":"char"}],"o":{"n":"result"}}],[11,"write_str","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"arraystring"}}],[11,"clone_from","","",0,{"i":[{"n":"self"},{"n":"self"}]}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"capacityerror"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"ordering"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"capacityerror"}],"o":{"n":"bool"}}],[11,"new","","Create a new `CapacityError` from `element`.",1,{"i":[{"n":"t"}],"o":{"n":"capacityerror"}}],[11,"element","","Extract the overflowing element",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",1,{"i":[{"n":"self"}],"o":{"n":"capacityerror"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array’s element type",2,null],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",null,null],[11,"start","","Start index (inclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"end","","End index (exclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"new","","Create a new empty `ArrayVec`.",4,{"o":{"n":"arrayvec"}}],[11,"len","","Return the number of elements in the `ArrayVec`.",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push `element` to the end of the vector.",4,null],[11,"try_push","","Push `element` to the end of the vector.",4,null],[11,"push_unchecked","","Push `element` to the end of the vector without checking the capacity.",4,null],[11,"insert","","Insert `element` at position `index`.",4,null],[11,"try_insert","","Insert `element` at position `index`.",4,null],[11,"pop","","Remove the last element in the vector and return it.",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",4,null],[11,"swap_pop","","Remove the element at `index` and swap the last element into its place.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"remove","","Remove the element at `index` and shift down the following elements.",4,null],[11,"pop_at","","Remove the element at `index` and shift down the following elements.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"truncate","","Shortens the vector, keeping the first `len` elements and dropping the rest.",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clear","","Remove all elements in the vector.",4,{"i":[{"n":"self"}]}],[11,"retain","","Retains only the elements specified by the predicate.",4,{"i":[{"n":"self"},{"n":"f"}]}],[11,"set_len","","Set the vector’s length without dropping or moving out elements",4,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"drain","","Create a draining iterator that removes the specified range in the vector and yields the removed items from start to end. The element range is removed even if the iterator is not consumed until the end.",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"drain"}}],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",4,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",4,{"i":[{"n":"self"}]}],[11,"as_slice","","Return a slice containing all elements of the vector.",4,null],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"from","","",4,{"i":[{"n":"a"}],"o":{"n":"self"}}],[11,"into_iter","","",4,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"next","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"extend","","",4,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",4,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone_from","","",4,{"i":[{"n":"self"},{"n":"self"}]}],[11,"hash","","",4,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"eq","","",4,null],[11,"borrow","","",4,null],[11,"borrow_mut","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","Return an empty array",4,{"o":{"n":"arrayvec"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"arrayvec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"arrayvec"}],"o":{"n":"ordering"}}],[11,"start","","Start index (inclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"end","","End index (exclusive)",3,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",null,{"i":[{"n":"f"}]}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",null,null],[11,"ip","","Returns the current instruction pointer of this frame.",0,null],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"name","","Returns the name of this function.",1,{"i":[{"n":"self"}],"o":{"g":["symbolname"],"n":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,null],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"backtrace"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"backtraceframe"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"backtracesymbol"}}],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,{"o":{"n":"backtrace"}}],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,{"o":{"n":"backtrace"}}],[11,"frames","","Returns the frames from when this backtrace was captured.",3,null],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,{"i":[{"n":"self"}]}],[11,"from","","",3,{"i":[{"g":["backtraceframe"],"n":"vec"}],"o":{"n":"self"}}],[11,"into","","",3,{"i":[{"n":"self"}],"o":{"g":["backtraceframe"],"n":"vec"}}],[11,"ip","","Same as `Frame::ip`",4,null],[11,"symbol_address","","Same as `Frame::symbol_address`",4,null],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,null],[11,"name","","Same as `Symbol::name`",5,{"i":[{"n":"self"}],"o":{"g":["symbolname"],"n":"option"}}],[11,"addr","","Same as `Symbol::addr`",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"filename","","Same as `Symbol::filename`",5,{"i":[{"n":"self"}],"o":{"g":["path"],"n":"option"}}],[11,"lineno","","Same as `Symbol::lineno`",5,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",3,{"o":{"n":"backtrace"}}]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"] = {"doc":"","items":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bigendian"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"ordering"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",3,{"o":{"n":"bigendian"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"littleendian"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"ordering"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",4,{"o":{"n":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","`ByteOrder` describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,null],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",0,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,null],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",0,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,null],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",0,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,null],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",0,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",0,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",0,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",0,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",0,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",0,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",0,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",0,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",0,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",null,null],[3,"Iter","","Iterator over the bytes contained by the buffer.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner value.",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an underlying buffer.",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the inner value.",null,null],[11,"from_buf","bytes","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from_buf","","",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","bytes::buf","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `Chain` sequencing the provided values.",3,{"i":[{"n":"t"},{"n":"u"}],"o":{"n":"chain"}}],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"u"}}],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"u"}}],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",3,null],[11,"remaining","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bytes","","",3,null],[11,"advance","","",3,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"bytes_vec","","",3,null],[11,"remaining_mut","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bytes_mut","","",3,null],[11,"advance_mut","","",3,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"bytes_vec_mut","","",3,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"size_hint","","",4,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",5,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",5,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",5,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"read","","",5,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"limit","","Returns the maximum number of bytes that can be read.",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"set_limit","","Sets the maximum number of bytes that can be read.",6,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"remaining","","",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bytes","","",6,null],[11,"advance","","",6,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",7,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",7,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",7,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","","Advance the internal cursor of the Buf",8,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"i8"}}],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"i":[{"n":"self"}],"o":{"n":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[8,"BufMut","","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"i":[{"n":"self"},{"n":"t"}]}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_f32_be","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f64_be","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"i":[{"n":"self"}],"o":{"n":"writer"}}],[8,"FromBuf","","Conversion from a [`Buf`]",null,null],[10,"from_buf","","Creates a value from a buffer.",10,{"i":[{"n":"t"}],"o":{"n":"self"}}],[8,"IntoBuf","","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"with_capacity","bytes","Creates a new `Bytes` with the specified capacity.",1,{"i":[{"n":"usize"}],"o":{"n":"bytes"}}],[11,"new","","Creates a new empty `Bytes`.",1,{"o":{"n":"bytes"}}],[11,"from_static","","Creates a new `Bytes` from a static slice.",1,null],[11,"len","","Returns the number of bytes contained in this `Bytes`.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"slice_from","","Returns a slice of self for the index range `[begin..self.len())`.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"split_to","","Splits the bytes into two at the given index.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",1,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and keeping the rest.",1,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clear","","Clears the buffer, removing all data.",1,{"i":[{"n":"self"}]}],[11,"try_mut","","Attempts to convert into a `BytesMut` handle.",1,{"i":[{"n":"self"}],"o":{"g":["bytesmut","bytes"],"n":"result"}}],[11,"extend_from_slice","","Appends given bytes to this object.",1,null],[11,"into_buf","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"as_ref","","",1,null],[11,"deref","","",1,null],[11,"from","","",1,{"i":[{"n":"bytesmut"}],"o":{"n":"bytes"}}],[11,"from","","",1,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"bytes"}}],[11,"from","","",1,{"i":[{"n":"string"}],"o":{"n":"bytes"}}],[11,"from","","",1,null],[11,"from","","",1,{"i":[{"n":"str"}],"o":{"n":"bytes"}}],[11,"from_iter","","",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from_iter","","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"ordering"}}],[11,"default","","",1,{"o":{"n":"bytes"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,{"i":[{"n":"self"},{"n":"h"}]}],[11,"borrow","","",1,null],[11,"into_iter","","",1,null],[11,"extend","","",1,{"i":[{"n":"self"},{"n":"t"}]}],[11,"extend","","",1,{"i":[{"n":"self"},{"n":"t"}]}],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",2,{"i":[{"n":"usize"}],"o":{"n":"bytesmut"}}],[11,"new","","Creates a new `BytesMut` with default capacity.",2,{"o":{"n":"bytesmut"}}],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold without reallocating.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"freeze","","Converts `self` into an immutable `Bytes`.",2,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytesmut"}}],[11,"take","","Removes the bytes from the current view, returning them in a new `BytesMut` handle.",2,{"i":[{"n":"self"}],"o":{"n":"bytesmut"}}],[11,"split_to","","Splits the buffer into two at the given index.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytesmut"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and keeping the rest.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clear","","Clears the buffer, removing all data.",2,{"i":[{"n":"self"}]}],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",2,{"i":[{"n":"self"},{"n":"usize"},{"n":"u8"}]}],[11,"set_len","","Sets the length of the buffer.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted into the given `BytesMut`.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"extend_from_slice","","Appends given bytes to this object.",2,null],[11,"unsplit","","Combine splitted BytesMut objects back as contiguous.",2,{"i":[{"n":"self"},{"n":"bytesmut"}]}],[11,"remaining_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"advance_mut","","",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"bytes_mut","","",2,null],[11,"put_slice","","",2,null],[11,"put_u8","","",2,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","",2,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"into_buf","","",2,null],[11,"as_ref","","",2,null],[11,"deref","","",2,null],[11,"as_mut","","",2,null],[11,"deref_mut","","",2,null],[11,"from","","",2,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"bytesmut"}}],[11,"from","","",2,{"i":[{"n":"string"}],"o":{"n":"bytesmut"}}],[11,"from","","",2,null],[11,"from","","",2,{"i":[{"n":"str"}],"o":{"n":"bytesmut"}}],[11,"from","","",2,{"i":[{"n":"bytes"}],"o":{"n":"bytesmut"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"n":"ordering"}}],[11,"default","","",2,{"o":{"n":"bytesmut"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",2,{"i":[{"n":"self"},{"n":"h"}]}],[11,"borrow","","",2,null],[11,"borrow_mut","","",2,null],[11,"write_str","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"write_fmt","","",2,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"bytesmut"}}],[11,"into_iter","","",2,null],[11,"extend","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"extend","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"vec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"vec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","bytes","Advance the internal cursor of the Buf",8,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"i8"}}],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"i":[{"n":"self"}],"o":{"n":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[8,"BufMut","bytes","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"i":[{"n":"self"},{"n":"t"}]}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_f32_be","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f64_be","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"i":[{"n":"self"}],"o":{"n":"writer"}}],[8,"IntoBuf","bytes","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"bool"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"bool"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"littleendian"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"bigendian"}}],[11,"read_u16","","",12,null],[11,"read_u32","","",12,null],[11,"read_u64","","",12,null],[11,"read_uint","","",12,null],[11,"write_u16","","",12,null],[11,"write_u32","","",12,null],[11,"write_u64","","",12,null],[11,"write_uint","","",12,null],[11,"read_u16_into","","",12,null],[11,"read_u32_into","","",12,null],[11,"read_u64_into","","",12,null],[11,"write_u16_into","","",12,null],[11,"write_u32_into","","",12,null],[11,"write_u64_into","","",12,null],[11,"from_slice_u16","","",12,null],[11,"from_slice_u32","","",12,null],[11,"from_slice_u64","","",12,null],[11,"from_slice_f32","","",12,null],[11,"from_slice_f64","","",12,null],[11,"read_u16","","",13,null],[11,"read_u32","","",13,null],[11,"read_u64","","",13,null],[11,"read_uint","","",13,null],[11,"write_u16","","",13,null],[11,"write_u32","","",13,null],[11,"write_u64","","",13,null],[11,"write_uint","","",13,null],[11,"read_u16_into","","",13,null],[11,"read_u32_into","","",13,null],[11,"read_u64_into","","",13,null],[11,"write_u16_into","","",13,null],[11,"write_u32_into","","",13,null],[11,"write_u64_into","","",13,null],[11,"from_slice_u16","","",13,null],[11,"from_slice_u32","","",13,null],[11,"from_slice_u64","","",13,null],[11,"from_slice_f32","","",13,null],[11,"from_slice_f64","","",13,null],[11,"partial_cmp","","",12,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",13,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",12,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"ordering"}}],[11,"cmp","","",13,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"ordering"}}],[11,"default","","",12,{"o":{"n":"bigendian"}}],[11,"default","","",13,{"o":{"n":"littleendian"}}],[11,"hash","","",13,null],[11,"hash","","",12,null],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"i8"}}],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"i":[{"n":"self"}],"o":{"n":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"i":[{"n":"self"},{"n":"t"}]}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_f32_be","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f64_be","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"i":[{"n":"self"}],"o":{"n":"writer"}}]],"paths":[[8,"ByteOrder"],[3,"Bytes"],[3,"BytesMut"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["chrono"] = {"doc":"Chrono 0.4.0","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with `FromStr`.",null,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be extended in the future, so exhaustive matching in external code is not recommended.",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor subseconds.",0,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to Fixed::Nanosecond3.",0,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to Fixed::Nanosecond6.",0,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to Fixed::Nanosecond9.",0,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to display all available non-zero sub-second digits.  This corresponds to Fixed::Nanosecond.",0,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",1,null],[13,"Tue","","Tuesday.",1,null],[13,"Wed","","Wednesday.",1,null],[13,"Thu","","Thursday.",1,null],[13,"Fri","","Friday.",1,null],[13,"Sat","","Saturday.",1,null],[13,"Sun","","Sunday.",1,null],[0,"prelude","","A convenience module appropriate for glob imports (`use chrono::prelude::*;`).",null,null],[0,"offset","","The time zone, which calculates offsets from the local time to UTC.",null,null],[3,"Utc","chrono::offset","The UTC time zone. This is the most efficient time zone when you don't need the local time. It is also used as an offset (which is also a dummy type).",null,null],[3,"FixedOffset","","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[3,"Local","","The local timescale. This is implemented via the standard `time` crate.",null,null],[4,"LocalResult","","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid. This can occur when, for example, the positive timezone transition.",2,null],[13,"Single","","Given local time representation has a single unique result.",2,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous. This can occur when, for example, the negative timezone transition.",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"utc"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"utc"}],"o":{"n":"bool"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",3,{"o":{"g":["utc"],"n":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",3,{"o":{"g":["utc"],"n":"datetime"}}],[11,"from_offset","","",3,{"i":[{"n":"utc"}],"o":{"n":"utc"}}],[11,"offset_from_local_date","","",3,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["utc"],"n":"localresult"}}],[11,"offset_from_local_datetime","","",3,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["utc"],"n":"localresult"}}],[11,"offset_from_utc_date","","",3,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"utc"}}],[11,"offset_from_utc_datetime","","",3,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"utc"}}],[11,"fix","","",3,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"bool"}}],[11,"hash","","",4,null],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"n":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference. The negative `secs` means the Western Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"g":["fixedoffset"],"n":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"n":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference. The negative `secs` means the Eastern Hemisphere.",4,{"i":[{"n":"i32"}],"o":{"g":["fixedoffset"],"n":"option"}}],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC to the local time.",4,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the local time to UTC.",4,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"from_offset","","",4,{"i":[{"n":"fixedoffset"}],"o":{"n":"fixedoffset"}}],[11,"offset_from_local_date","","",4,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_local_datetime","","",4,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_utc_date","","",4,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",4,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"fixedoffset"}}],[11,"fix","","",4,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"add","chrono","",5,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"datetime"}}],[11,"sub","","",5,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"datetime"}}],[11,"clone","chrono::offset","",6,{"i":[{"n":"self"}],"o":{"n":"local"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",6,{"o":{"g":["local"],"n":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",6,{"o":{"g":["local"],"n":"datetime"}}],[11,"from_offset","","",6,{"i":[{"n":"fixedoffset"}],"o":{"n":"local"}}],[11,"offset_from_local_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_local_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["fixedoffset"],"n":"localresult"}}],[11,"offset_from_utc_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"fixedoffset"}}],[11,"from_local_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["date"],"n":"localresult"}}],[11,"from_local_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"from_utc_date","","",6,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["local"],"n":"date"}}],[11,"from_utc_datetime","","",6,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["local"],"n":"datetime"}}],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",7,{"i":[{"n":"self"}],"o":{"n":"fixedoffset"}}],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the actual offset in date and time types. The original `TimeZone` value can be recovered via `TimeZone::from_offset`.",8,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"date"}}],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["date"],"n":"localresult"}}],[11,"yo","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"}],"o":{"n":"date"}}],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"}],"o":{"g":["date"],"n":"localresult"}}],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"n":"date"}}],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and the current time zone. This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE. The resulting `Date` may have a different year from the input year.",8,{"i":[{"n":"self"},{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"g":["date"],"n":"localresult"}}],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",8,{"i":[{"n":"self"},{"n":"i64"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",8,{"i":[{"n":"self"},{"n":"i64"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap milliseconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").",8,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"datetime"}}],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap milliseconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").",8,{"i":[{"n":"self"},{"n":"i64"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"datetime_from_str","","Parses a string with the specified format string and returns a `DateTime` with the current offset. See the `format::strftime` module on the supported escape sequences.",8,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[10,"from_offset","","Reconstructs the time zone from the offset.",8,null],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",8,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"localresult"}}],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",8,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"localresult"}}],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",8,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["date"],"n":"localresult"}}],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",8,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["datetime"],"n":"localresult"}}],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",8,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",8,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",8,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"date"}}],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The UTC is continuous and thus this cannot fail (but can give the duplicate local time).",8,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"datetime"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"localresult"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"localresult"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"localresult"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given function.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"localresult"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"localresult"}}],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every proleptic Gregorian date from Jan 1, 262145 BCE to Dec 31, 262143 CE. Also supports the conversion from ISO 8601 ordinal and week date.",null,null],[3,"IsoWeek","","ISO 8601 week.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond precision and optional leap second representation.",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"le","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"gt","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"ge","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"bool"}}],[11,"cmp","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"ordering"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year, month and day).",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year, month and day).",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",9,{"i":[{"n":"i32"},{"n":"u32"}],"o":{"n":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and day of the year).",9,{"i":[{"n":"i32"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"n":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week number and day of the week). The resulting `NaiveDate` may have a different year from the input year.",9,{"i":[{"n":"i32"},{"n":"u32"},{"n":"weekday"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",9,{"i":[{"n":"i32"}],"o":{"n":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",9,{"i":[{"n":"i32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`. See the `format::strftime` module on the supported escape sequences.",9,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["naivedate"],"n":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",9,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"naivedatetime"}}],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",9,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",9,{"i":[{"n":"self"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",9,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",9,{"i":[{"n":"self"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current date.",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the current date.",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date. Returns a `Duration` of integral numbers.",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"oldduration"}}],[11,"format_with_items","","Formats the date with the specified formatting items. Otherwise it is same to the ordinary `format` method.",9,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","Returns the year number in the calendar date.",9,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","Returns the month number starting from 1.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","Returns the month number starting from 0.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","Returns the day of month starting from 1.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","Returns the day of month starting from 0.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","Returns the day of year starting from 1.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","Returns the day of year starting from 0.",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","Returns the day of week.",9,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",9,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",9,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedate"],"n":"option"}}],[11,"add","","",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedate"}}],[11,"add_assign","","",9,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",9,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedate"}}],[11,"sub_assign","","",9,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",9,{"i":[{"n":"self"},{"n":"naivedate"}],"o":{"n":"oldduration"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",9,{"i":[{"n":"str"}],"o":{"g":["naivedate"],"n":"parseresult"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"le","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"gt","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"ge","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"bool"}}],[11,"cmp","","",10,{"i":[{"n":"self"},{"n":"isoweek"}],"o":{"n":"ordering"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"year","","Returns the year number for this ISO week.",10,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"week","","Returns the ISO week number starting from 1.",10,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"week0","","Returns the ISO week number starting from 0.",10,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"le","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"gt","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"ge","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"bool"}}],[11,"cmp","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"ordering"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"naivetime"}}],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"}],"o":{"n":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",11,{"i":[{"n":"u32"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`. See the `format::strftime` module on the supported escape sequences.",11,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["naivetime"],"n":"parseresult"}}],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also returns the number of seconds in the integral number of days ignored from the addition. (We cannot return `Duration` because it is subject to overflow or underflow.)",11,null],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also returns the number of seconds in the integral number of days ignored from the subtraction. (We cannot return `Duration` because it is subject to overflow or underflow.)",11,null],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time. Returns a `Duration` within +/- 1 day. This does not overflow or underflow at all.",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"oldduration"}}],[11,"format_with_items","","Formats the time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",11,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the time with the specified format string. See the `format::strftime` module on the supported escape sequences.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"hour","","Returns the hour number from 0 to 23.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"minute","","Returns the minute number from 0 to 59.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"second","","Returns the second number from 0 to 59.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivetime"],"n":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",11,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"hash","","",11,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",11,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivetime"}}],[11,"add_assign","","",11,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",11,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivetime"}}],[11,"sub_assign","","",11,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",11,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"n":"oldduration"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",11,{"i":[{"n":"str"}],"o":{"g":["naivetime"],"n":"parseresult"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"le","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"gt","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"ge","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"bool"}}],[11,"cmp","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"ordering"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"new","","Makes a new `NaiveDateTime` from date and time components. Equivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",12,{"i":[{"n":"naivedate"},{"n":"naivetime"}],"o":{"n":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date and time, from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",12,{"i":[{"n":"i64"},{"n":"u32"}],"o":{"n":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date and time, from the number of non-leap seconds since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\") and the number of nanoseconds since the last whole non-leap second.",12,{"i":[{"n":"i64"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`. See the `format::strftime` module on the supported escape sequences.",12,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["naivedatetime"],"n":"parseresult"}}],[11,"date","","Retrieves a date component.",12,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"time","","Retrieves a time component.",12,{"i":[{"n":"self"}],"o":{"n":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",12,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight on January 1, 1970.",12,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight on January 1, 1970.",12,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date and time. This does not overflow or underflow at all.",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"oldduration"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items. Otherwise it is same to the ordinary `format` method.",12,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",12,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","Returns the year number in the calendar date.",12,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","Returns the month number starting from 1.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","Returns the month number starting from 0.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","Returns the day of month starting from 1.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","Returns the day of month starting from 0.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","Returns the day of year starting from 1.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","Returns the day of year starting from 0.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","Returns the day of week.",12,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",12,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",12,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"hour","","Returns the hour number from 0 to 23.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"minute","","Returns the minute number from 0 to 59.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"second","","Returns the second number from 0 to 59.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["naivedatetime"],"n":"option"}}],[11,"hash","","",12,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedatetime"}}],[11,"add_assign","","",12,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",12,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"naivedatetime"}}],[11,"sub_assign","","",12,{"i":[{"n":"self"},{"n":"oldduration"}]}],[11,"sub","","",12,{"i":[{"n":"self"},{"n":"naivedatetime"}],"o":{"n":"oldduration"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",12,{"i":[{"n":"str"}],"o":{"g":["naivedatetime"],"n":"parseresult"}}],[17,"MIN_DATE","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"clone","chrono","",13,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"from_utc","","Makes a new `Date` with given UTC date and offset. The local date should be constructed via the `TimeZone` trait.",13,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"naivetime"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond. The millisecond part can exceed 1,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond. The microsecond part can exceed 1,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"datetime"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond. The nanosecond part can exceed 1,000,000,000 in order to represent the leap second. The offset in the current date is preserved.",13,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"succ","","Makes a new `Date` for the next date.",13,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"succ_opt","","Makes a new `Date` for the next date.",13,{"i":[{"n":"self"}],"o":{"g":["date"],"n":"option"}}],[11,"pred","","Makes a new `Date` for the prior date.",13,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"pred_opt","","Makes a new `Date` for the prior date.",13,{"i":[{"n":"self"}],"o":{"g":["date"],"n":"option"}}],[11,"offset","","Retrieves an associated offset from UTC.",13,null],[11,"timezone","","Retrieves an associated time zone.",13,{"i":[{"n":"self"}],"o":{"n":"tz"}}],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `Date` (but will change the string representation).",13,{"i":[{"n":"self"},{"n":"tz2"}],"o":{"n":"date"}}],[11,"checked_add_signed","","Adds given `Duration` to the current date.",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["date"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["date"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a `Duration` of integral numbers.",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"oldduration"}}],[11,"naive_utc","","Returns a view to the naive UTC date.",13,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"naive_local","","Returns a view to the naive local date.",13,{"i":[{"n":"self"}],"o":{"n":"naivedate"}}],[11,"format_with_items","","Formats the date with the specified formatting items.",13,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the date with the specified format string. See the `format::strftime` module on the supported escape sequences.",13,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","",13,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","",13,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","",13,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",13,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","",13,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_month","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_month0","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_day","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_day0","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_ordinal","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"with_ordinal0","","",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["date"],"n":"option"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"ordering"}}],[11,"hash","","",13,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"date"}}],[11,"sub","","",13,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"date"}}],[11,"sub","","",13,{"i":[{"n":"self"},{"n":"date"}],"o":{"n":"oldduration"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"secondsformat"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"secondsformat"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"datetime"}}],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset. The local datetime should be constructed via the `TimeZone` trait.",5,null],[11,"date","","Retrieves a date component.",5,{"i":[{"n":"self"}],"o":{"n":"date"}}],[11,"time","","Retrieves a time component. Unlike `date`, this is not associated to the time zone.",5,{"i":[{"n":"self"}],"o":{"n":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").",5,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January 1, 1970 UTC",5,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January 1, 1970 UTC",5,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"offset","","Retrieves an associated offset from UTC.",5,null],[11,"timezone","","Retrieves an associated time zone.",5,{"i":[{"n":"self"}],"o":{"n":"tz"}}],[11,"with_timezone","","Changes the associated time zone. This does not change the actual `DateTime` (but will change the string representation).",5,{"i":[{"n":"self"},{"n":"tz2"}],"o":{"n":"datetime"}}],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["datetime"],"n":"option"}}],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"g":["datetime"],"n":"option"}}],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and time. This does not overflow or underflow at all.",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"oldduration"}}],[11,"naive_utc","","Returns a view to the naive UTC datetime.",5,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"naive_local","","Returns a view to the naive local datetime.",5,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`, then returns a new `DateTime` with a parsed `FixedOffset`.",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`, then returns a new `DateTime` with a parsed `FixedOffset`.",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `DateTime` with a parsed `FixedOffset`. See the `format::strftime` module on the supported escape sequences.",5,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",5,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",5,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with subseconds formatted as per a `SecondsFormat`. If passed `use_z` true and the timezone is UTC (offset 0), use 'Z', as per Fixed::TimezoneOffsetColonZ. If passed `use_z` false, use Fixed::TimezoneOffsetColon.",5,{"i":[{"n":"self"},{"n":"secondsformat"},{"n":"bool"}],"o":{"n":"string"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",5,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string. See the `format::strftime` module on the supported escape sequences.",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["strftimeitems"],"n":"delayedformat"}}],[11,"year","","",5,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"month","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"month0","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"day0","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"ordinal0","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"weekday","","",5,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"iso_week","","",5,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[11,"with_year","","",5,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_month","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_month0","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_day","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_day0","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_ordinal","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_ordinal0","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"hour","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"minute","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"second","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"nanosecond","","",5,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"with_hour","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_minute","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_second","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"with_nanosecond","","",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["datetime"],"n":"option"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"ordering"}}],[11,"hash","","",5,{"i":[{"n":"self"},{"n":"h"}]}],[11,"add","","",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"datetime"}}],[11,"sub","","",5,{"i":[{"n":"self"},{"n":"oldduration"}],"o":{"n":"datetime"}}],[11,"sub","","",5,{"i":[{"n":"self"},{"n":"datetime"}],"o":{"n":"oldduration"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"from_str","","",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"from_str","","",5,{"i":[{"n":"str"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"from","","",5,{"i":[{"n":"systemtime"}],"o":{"g":["utc"],"n":"datetime"}}],[11,"from","","",5,{"i":[{"n":"systemtime"}],"o":{"g":["local"],"n":"datetime"}}],[0,"format","","Formatting (and parsing) utilities for date and time.",null,null],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",14,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear","","Year in the ISO week date.",14,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"month","","Month (1--12).",14,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January (0--53, 1--53 or 1--52 depending on the year).",14,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January (0--53, 1--53 or 1--52 depending on the year).",14,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,null],[12,"weekday","","Day of the week.",14,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",14,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",14,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,null],[12,"minute","","Minute number (0--59).",14,null],[12,"second","","Second number (0--60, accounting for leap seconds).",14,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",14,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",14,null],[12,"offset","","Offset from the local time to UTC, in seconds.",14,null],[3,"InternalNumeric","","An opaque type representing numeric item types for internal uses only.",null,null],[3,"InternalFixed","","An opaque type representing fixed-format item types for internal uses only.",null,null],[3,"ParseError","","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A temporary object which can be used as an argument to `format!` or others. This is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",15,null],[13,"Zero","","Zero (`0`) padding.",15,null],[13,"Space","","Space padding.",15,null],[4,"Numeric","","Numeric item types. They have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",16,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",16,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years before 1 BCE or after 9999 CE, given an initial sign.",16,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",16,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"Month","","Month (FW=PW=2).",16,null],[13,"Day","","Day of the month (FW=PW=2).",16,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",16,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",16,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",16,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,null],[13,"Ordinal","","Day of the year (FW=PW=3).",16,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9). Note that this is not left-aligned; see also `Fixed::Nanosecond`.",16,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞). For formatting, it assumes UTC upon the absence of time zone offset.",16,null],[13,"Internal","","Internal uses only.",16,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",17,null],[13,"LongMonthName","","Full month names.",17,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,null],[13,"LongWeekdayName","","Full day of the week names.",17,null],[13,"LowerAmPm","","AM/PM.",17,null],[13,"UpperAmPm","","AM/PM.",17,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds. May print nothing, 3, 6 or 9 digits according to the available accuracy. See also `Numeric::Nanosecond`.",17,null],[13,"Nanosecond3","","Same to `Nanosecond` but the accuracy is fixed to 3.",17,null],[13,"Nanosecond6","","Same to `Nanosecond` but the accuracy is fixed to 6.",17,null],[13,"Nanosecond9","","Same to `Nanosecond` but the accuracy is fixed to 9.",17,null],[13,"TimezoneName","","Timezone name.",17,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",17,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",17,null],[13,"TimezoneOffset","","Same to `TimezoneOffsetColon` but prints no colon. Parsing allows an optional colon.",17,null],[13,"TimezoneOffsetZ","","Same to `TimezoneOffsetColonZ` but prints no colon. Parsing allows an optional colon.",17,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",17,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,null],[13,"Internal","","Internal uses only.",17,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",18,null],[13,"OwnedLiteral","","Same to `Literal` but with the string owned by the item.",18,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",18,null],[13,"OwnedSpace","","Same to `Space` but with the string owned by the item.",18,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting; the parser simply ignores any padded whitespace and zeroes.",18,null],[13,"Fixed","","Fixed-format item.",18,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",18,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items. Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used). There should be no trailing string after parsing; use a stray `Item::Space` to trim whitespaces.",null,{"i":[{"n":"parsed"},{"n":"str"},{"n":"i"}],"o":{"n":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items. Internally used by `DelayedFormat`.",null,{"i":[{"n":"formatter"},{"g":["naivedate"],"n":"option"},{"g":["naivetime"],"n":"option"},{"n":"option"},{"n":"i"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"parsed"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"parsed"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"parsed"}],"o":{"n":"bool"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",14,{"o":{"n":"parsed"}}],[11,"new","","Returns the initial value of parsed parts.",14,{"o":{"n":"parsed"}}],[11,"set_year","","Tries to set the `year` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_month","","Tries to set the `month` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,{"i":[{"n":"self"},{"n":"weekday"}],"o":{"n":"parseresult"}}],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_day","","Tries to set the `day` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value. (`false` for AM, `true` for PM)",14,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"parseresult"}}],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour number in 12-hour clocks.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_minute","","Tries to set the `minute` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_second","","Tries to set the `second` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"set_offset","","Tries to set the `offset` field from given value.",14,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"parseresult"}}],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["naivedate"],"n":"parseresult"}}],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["naivetime"],"n":"parseresult"}}],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields, except for the `offset` field (assumed to have a given value). This is required for parsing a local time or other known-timezone inputs.",14,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["naivedatetime"],"n":"parseresult"}}],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["fixedoffset"],"n":"parseresult"}}],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",14,{"i":[{"n":"self"}],"o":{"g":["datetime"],"n":"parseresult"}}],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields, with an additional `TimeZone` used to interpret and validate the local date.",14,{"i":[{"n":"self"},{"n":"tz"}],"o":{"g":["datetime"],"n":"parseresult"}}],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"strftimeitems"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",19,{"i":[{"n":"str"}],"o":{"n":"strftimeitems"}}],[11,"next","","",19,{"i":[{"n":"self"}],"o":{"g":["item"],"n":"option"}}],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",null,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"pad"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"pad"}],"o":{"n":"bool"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"numeric"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"numeric"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"numeric"}],"o":{"n":"bool"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"internalnumeric"}],"o":{"n":"bool"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"fixed"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"fixed"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"fixed"}],"o":{"n":"bool"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"internalfixed"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"internalfixed"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"internalfixed"}],"o":{"n":"bool"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"item"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"item"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"item"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",22,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",23,{"i":[{"g":["naivedate"],"n":"option"},{"g":["naivetime"],"n":"option"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",23,{"i":[{"g":["naivedate"],"n":"option"},{"g":["naivetime"],"n":"option"},{"n":"off"},{"n":"i"}],"o":{"n":"delayedformat"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","chrono","",1,{"i":[{"n":"str"}],"o":{"n":"result"}}],[17,"MIN_DATE","","The minimum possible `Date`.",null,null],[17,"MAX_DATE","","The maximum possible `Date`.",null,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a maximum number of digits. Rounding can be used to decrease the error variance when serializing/persisting to lower precision. Truncation is the default behavior in Chrono display formatting.  Either can be used to guarantee equality (e.g. for testing) when round-tripping through a lower precision format.",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond digits. With 9 or more digits, self is returned unmodified. Halfway values are rounded up (away from zero).",24,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"self"}}],[10,"trunc_subsecs","","Return a copy truncated to the specified number of subsecond digits. With 9 or more digits, self is returned unmodified.",24,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"self"}}],[8,"Datelike","","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",25,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag, which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",25,null],[10,"month","","Returns the month number starting from 1.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"month0","","Returns the month number starting from 0.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"day","","Returns the day of month starting from 1.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"day0","","Returns the day of month starting from 0.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"ordinal","","Returns the day of year starting from 1.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"ordinal0","","Returns the day of year starting from 0.",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"weekday","","Returns the day of week.",25,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[10,"iso_week","","Returns the ISO week.",25,{"i":[{"n":"self"}],"o":{"n":"isoweek"}}],[10,"with_year","","Makes a new value with the year number changed.",25,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"option"}}],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[11,"num_days_from_ce","","Returns the number of days since January 1, Year 1 (aka Day 1) in the proleptic Gregorian calendar.",25,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag, which is false for AM and true for PM.",26,null],[10,"minute","","Returns the minute number from 0 to 59.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"second","","Returns the second number from 0 to 59.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second. The range from 1,000,000,000 to 1,999,999,999 represents the leap second.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"with_hour","","Makes a new value with the hour number changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_minute","","Makes a new value with the minute number changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_second","","Makes a new value with the second number changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"weekday"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"succ","","The next day in the week.",1,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"pred","","The previous day in the week.",1,{"i":[{"n":"self"}],"o":{"n":"weekday"}}],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_i64","","",1,{"i":[{"n":"i64"}],"o":{"g":["weekday"],"n":"option"}}],[11,"from_u64","","",1,{"i":[{"n":"u64"}],"o":{"g":["weekday"],"n":"option"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"parseweekdayerror"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"parseweekdayerror"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"parseweekdayerror"}],"o":{"n":"bool"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",28,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",28,{"i":[{"n":"f"}],"o":{"n":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",28,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 263 microseconds in either direction).",28,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 263 nanoseconds in either direction).",28,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",28,{"o":{"n":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",28,{"o":{"n":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",28,{"o":{"n":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",28,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",28,{"i":[{"n":"duration"}],"o":{"g":["duration","outofrangeerror"],"n":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",28,{"i":[{"n":"self"}],"o":{"g":["duration","outofrangeerror"],"n":"result"}}],[11,"neg","","",28,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"div","","",28,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"add","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"partial_cmp","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"le","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"gt","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ge","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"sub","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"cmp","","",28,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"ordering"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"mul","","",28,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"add","chrono::naive","",11,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivetime"}}],[11,"sub","","",11,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivetime"}}],[11,"add","","",12,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivedatetime"}}],[11,"sub","","",12,{"i":[{"n":"self"},{"n":"fixedoffset"}],"o":{"n":"naivedatetime"}}]],"paths":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"Utc"],[3,"FixedOffset"],[3,"DateTime"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"ParseWeekdayError"],[3,"Duration"]]};
searchIndex["crossbeam_deque"] = {"doc":"A concurrent work-stealing deque.","items":[[3,"Deque","crossbeam_deque","A concurrent work-stealing deque.",null,null],[3,"Stealer","","A stealer that steals elements from the top of a deque.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The deque was empty at the time of stealing.",0,null],[13,"Data","","Some data has been successfully stolen.",0,null],[13,"Retry","","Lost the race for stealing data to another concurrent operation. Try again.",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"steal"}],"o":{"n":"ordering"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"steal"}}],[11,"new","","Returns a new deque.",1,{"o":{"n":"deque"}}],[11,"with_min_capacity","","Returns a new deque with the specified minimum capacity.",1,{"i":[{"n":"usize"}],"o":{"n":"deque"}}],[11,"is_empty","","Returns `true` if the deque is empty.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of elements in the deque.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"min_capacity","","Returns the minimum capacity of the deque.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capacity","","Returns the number of elements the deque can hold without reallocating.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"shrink_to_fit","","Shrinks the capacity of the deque as much as possible.",1,{"i":[{"n":"self"}]}],[11,"push","","Pushes an element into the bottom of the deque.",1,{"i":[{"n":"self"},{"n":"t"}]}],[11,"pop","","Pops an element from the bottom of the deque.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"steal","","Steals an element from the top of the deque.",1,{"i":[{"n":"self"}],"o":{"n":"steal"}}],[11,"stealer","","Creates a stealer that can be shared with other threads.",1,{"i":[{"n":"self"}],"o":{"n":"stealer"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"deque"}}],[11,"is_empty","","Returns `true` if the deque is empty.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of elements in the deque.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"steal","","Steals an element from the top of the deque.",2,{"i":[{"n":"self"}],"o":{"n":"steal"}}],[11,"clone","","Creates another stealer.",2,{"i":[{"n":"self"}],"o":{"n":"stealer"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[4,"Steal"],[3,"Deque"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed operation.",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"Handle","","A handle to a garbage collector.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.",null,{"o":{"n":"guard"}}],[5,"default_collector","","Returns the default handle associated with the current thread.",null,{"o":{"n":"collector"}}],[5,"default_handle","","Returns the default handle associated with the current thread.",null,{"o":{"n":"handle"}}],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,{"o":{"n":"bool"}}],[5,"pin","","Pins the current thread.",null,{"o":{"n":"guard"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"null","","Returns a new null atomic pointer.",1,{"o":{"n":"atomic"}}],[11,"new","","Allocates `value` on the heap and returns a new atomic pointer pointing to it.",1,{"i":[{"n":"t"}],"o":{"n":"atomic"}}],[11,"load","","Loads a `Shared` from the atomic pointer.",1,{"i":[{"n":"self"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.",1,{"i":[{"n":"self"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic pointer.",1,{"i":[{"n":"self"},{"n":"p"},{"n":"ordering"}]}],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous `Shared`.",1,{"i":[{"n":"self"},{"n":"p"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,{"i":[{"n":"self"},{"n":"shared"},{"n":"p"},{"n":"o"},{"n":"guard"}],"o":{"g":["shared","compareandseterror"],"n":"result"}}],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,{"i":[{"n":"self"},{"n":"shared"},{"n":"p"},{"n":"o"},{"n":"guard"}],"o":{"g":["shared","compareandseterror"],"n":"result"}}],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"ordering"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","Returns a copy of the atomic value.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"default","","",1,{"o":{"n":"self"}}],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,{"i":[{"n":"owned"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"box"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,{"i":[{"n":"shared"}],"o":{"n":"self"}}],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,null],[11,"into_usize","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"new","","Allocates `value` on the heap and returns a new owned pointer pointing to it.",2,{"i":[{"n":"t"}],"o":{"n":"owned"}}],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,null],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,{"i":[{"n":"self"},{"n":"guard"}],"o":{"n":"shared"}}],[11,"into_box","","Converts the owned pointer into a `Box`.",2,{"i":[{"n":"self"}],"o":{"n":"box"}}],[11,"tag","","Returns the tag stored within the pointer.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"owned"}}],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"from","","",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from","","Returns a new owned pointer pointing to `b`.",2,{"i":[{"n":"box"}],"o":{"n":"self"}}],[11,"borrow","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"borrow_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"into_usize","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"from_usize","","",3,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"null","","Returns a new null pointer.",3,{"o":{"n":"shared"}}],[11,"is_null","","Returns `true` if the pointer is null.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,null],[11,"deref","","Dereferences the pointer.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","Converts the pointer to a reference.",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_owned","","Takes ownership of the pointee.",3,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"tag","","Returns the tag stored within the pointer.",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",3,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"shared"}}],[11,"from","","Returns a new pointer pointing to `raw`.",3,null],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",3,{"o":{"n":"self"}}],[11,"new","","Creates a new collector.",4,{"o":{"n":"self"}}],[11,"register","","Registers a new handle for the collector.",4,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"clone","","Creates another reference to the same garbage collector.",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","Checks if both handles point to the same collector.",4,{"i":[{"n":"self"},{"n":"collector"}],"o":{"n":"bool"}}],[11,"pin","","Pins the handle.",5,{"i":[{"n":"self"}],"o":{"n":"guard"}}],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"collector","","Returns the `Collector` associated with this handle.",5,{"i":[{"n":"self"}],"o":{"n":"collector"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"defer","","Stores a function so that it can be executed at some point after all currently pinned threads get unpinned.",6,{"i":[{"n":"self"},{"n":"f"}]}],[11,"flush","","Clears up the thread-local cache of deferred functions by executing them or moving into the global cache.",6,{"i":[{"n":"self"}]}],[11,"repin","","Unpins and then immediately re-pins the thread.",6,{"i":[{"n":"self"}]}],[11,"repin_after","","Temporarily unpins the thread, executes the given function and then re-pins the thread.",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"collector","","Returns the `Collector` associated with this guard.",6,{"i":[{"n":"self"}],"o":{"g":["collector"],"n":"option"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"guard"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,{"i":[{"n":"self"}],"o":{"n":"ordering"}}],[10,"failure","","The ordering of the operation when it fails.",7,{"i":[{"n":"self"}],"o":{"n":"ordering"}}],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,{"i":[{"n":"usize"}],"o":{"n":"self"}}]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"Handle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_utils"] = {"doc":"","items":[[0,"cache_padded","crossbeam_utils","",null,null],[3,"CachePadded","crossbeam_utils::cache_padded","Pads `T` to the length of a cache line.",null,null],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"new","","Pads a value to the length of a cache line.",0,{"i":[{"n":"t"}],"o":{"n":"cachepadded"}}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"default","","",0,{"o":{"n":"self"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"self"}}],[0,"scoped","crossbeam_utils","",null,null],[3,"Scope","crossbeam_utils::scoped","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[3,"ScopedThreadBuilder","","Scoped thread configuration. Provides detailed control over the properties and behavior of new scoped threads.",null,null],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"i":[{"n":"f"}],"o":{"n":"joinhandle"}}],[5,"builder_spawn_unsafe","","Like `std::thread::Builder::spawn`, but without the closure bounds.",null,{"i":[{"n":"builder"},{"n":"f"}],"o":{"g":["joinhandle"],"n":"result"}}],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"i":[{"n":"f"}],"o":{"n":"r"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"defer","","Schedule code to be executed when exiting the scope.",1,{"i":[{"n":"self"},{"n":"f"}]}],[11,"spawn","","Create a scoped thread.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"scopedjoinhandle"}}],[11,"builder","","Generates the base configuration for spawning a scoped thread, from which configuration methods can be chained.",1,{"i":[{"n":"self"}],"o":{"n":"scopedthreadbuilder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification only in panic messages.",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"scopedthreadbuilder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",3,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"scopedthreadbuilder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["scopedjoinhandle"],"n":"result"}}],[11,"join","","Join the scoped thread, returning the result it produced.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"thread","","Get the underlying thread handle.",2,{"i":[{"n":"self"}],"o":{"n":"thread"}}],[11,"drop","","",1,{"i":[{"n":"self"}]}],[0,"consume","crossbeam_utils","",null,null],[8,"AtomicConsume","crossbeam_utils::consume","Trait which allows reading from an atomic type with \"consume\" ordering.",null,null],[16,"Val","","Type returned by `load_consume`.",4,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory ordering.",4,null]],"paths":[[3,"CachePadded"],[3,"Scope"],[3,"ScopedJoinHandle"],[3,"ScopedThreadBuilder"],[8,"AtomicConsume"]]};
searchIndex["failure"] = {"doc":"An experimental new error-handling library. Guide-style introduction is available here.","items":[[3,"Backtrace","failure","A `Backtrace`.",null,null],[3,"Compat","","A compatibility wrapper around an error type from this crate.",null,null],[3,"Context","","An error with context around it.",null,null],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",null,null],[3,"Error","","The `Error` type, which can contain any failure.",null,null],[3,"Causes","","A iterator over the causes of a `Fail`",null,null],[5,"err_msg","","Constructs a `Fail` type from a string.",null,{"i":[{"n":"d"}],"o":{"n":"error"}}],[11,"new","","Constructs a new backtrace. This will only create a real backtrace if the crate is compiled in std mode and the `RUST_BACKTRACE` environmental variable is activated.",0,{"o":{"n":"backtrace"}}],[11,"default","","",0,{"o":{"n":"backtrace"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"compat"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"compat"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"compat"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"default","","",1,{"o":{"n":"compat"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Unwraps this into the inner error.",1,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"get_ref","","Gets a reference to the inner error.",1,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"new","","Creates a new context without an underlying error message.",2,{"i":[{"n":"d"}],"o":{"n":"context"}}],[11,"get_context","","Returns a reference to the context provided with this error.",2,{"i":[{"n":"self"}],"o":{"n":"d"}}],[11,"cause","","",2,{"i":[{"n":"self"}],"o":{"g":["fail"],"n":"option"}}],[11,"backtrace","","",2,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",2,{"i":[{"n":"d"}],"o":{"n":"context"}}],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement `Fail`.",3,{"i":[{"n":"e"}],"o":{"n":"self"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",4,{"i":[{"n":"f"}],"o":{"n":"error"}}],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,{"i":[{"g":["stderror"],"n":"box"}],"o":{"n":"error"}}],[11,"as_fail","","Return a reference to the underlying failure that this `Error` contains.",4,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[11,"cause","","Returns a reference to the underlying cause of this `Error`. Unlike the method on `Fail`, this does not return an `Option`. The `Error` type always has an underlying failure.",4,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,{"i":[{"n":"self"}],"o":{"n":"backtrace"}}],[11,"context","","Provides context for this `Error`.",4,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"context"}}],[11,"compat","","Wraps `Error` in a compatibility type.",4,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"compat"}}],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail` type.",4,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in the cause chain which does not return an underlying `cause`.",4,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[11,"iter_causes","","Returns a iterator over the causes of this error with the cause of the fail as the first item and the `root_cause` as the final item.",4,{"i":[{"n":"self"}],"o":{"n":"causes"}}],[11,"iter_chain","","Returns a iterator over all fails up the chain from the current as the first item up to the `root_cause` as the final item.",4,{"i":[{"n":"self"}],"o":{"n":"causes"}}],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail` type by reference.",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail` type by mutable reference.",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[11,"causes","","Deprecated alias to `iter_causes`.",4,{"i":[{"n":"self"}],"o":{"n":"causes"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_ref","","",4,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[6,"Fallible","","A common result with an `Error`.",null,null],[8,"ResultExt","","Extension methods for `Result`.",null,null],[10,"compat","","Wraps the error in `Compat` to make it compatible with older error handling APIs that expect `std::error::Error`.",5,{"i":[{"n":"self"}],"o":{"g":["compat"],"n":"result"}}],[10,"context","","Wraps the error type in a context type.",5,{"i":[{"n":"self"},{"n":"d"}],"o":{"g":["context"],"n":"result"}}],[10,"with_context","","Wraps the error type in a context type generated by looking at the error value.",5,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["context"],"n":"result"}}],[8,"Fail","","The `Fail` trait.",null,null],[11,"cause","","Returns a reference to the underlying cause of this failure, if it is an error that wraps other errors.",6,{"i":[{"n":"self"}],"o":{"g":["fail"],"n":"option"}}],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this failure, if it carries one.",6,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"context","","Provides context for this failure.",6,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"context"}}],[11,"compat","","Wraps this failure in a compatibility wrapper that implements `std::error::Error`.",6,{"i":[{"n":"self"}],"o":{"n":"compat"}}],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by reference.",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by mutable reference.",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value in the cause chain which does not return an underlying `cause`.",6,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the cause of this fail as the first item and the `root_cause` as the final item.",6,{"i":[{"n":"self"}],"o":{"n":"causes"}}],[11,"iter_chain","","Returns a iterator over all fails up the chain from the current as the first item up to the `root_cause` as the final item.",6,{"i":[{"n":"self"}],"o":{"n":"causes"}}],[11,"root_cause","","Deprecated alias to `find_root_cause`.",6,{"i":[{"n":"self"}],"o":{"n":"fail"}}],[11,"causes","","Deprecated alias to `iter_causes`.",6,{"i":[{"n":"self"}],"o":{"n":"causes"}}],[11,"next","","",7,{"i":[{"n":"self"}],"o":{"g":["fail"],"n":"option"}}],[14,"bail","","Exits a function early with an `Error`.",null,null],[14,"ensure","","Exits a function early with an `Error` if the condition is not satisfied.",null,null],[14,"format_err","","Constructs an `Error` using the standard string interpolation syntax.",null,null]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"] = {"doc":"","items":[[5,"Fail","failure_derive","",null,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}]],"paths":[]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",1,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"async"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"async"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"asyncsink"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"asyncsink"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"asyncsink"}],"o":{"n":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Select2","","Future for the `select2` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",2,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",2,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",3,null],[13,"B","","Second branch of the type",3,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",4,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",4,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"o":{"n":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"i":[{"n":"f"}],"o":{"n":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"i":[{"n":"f"}],"o":{"n":"pollfn"}}],[5,"result","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"i":[{"n":"result"}],"o":{"n":"futureresult"}}],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"i":[{"n":"t"}],"o":{"n":"futureresult"}}],[5,"err","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"i":[{"n":"e"}],"o":{"n":"futureresult"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"i":[{"n":"s"},{"n":"f"}],"o":{"n":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"i":[{"n":"i"}],"o":{"n":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"i":[{"n":"i"}],"o":{"n":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"i":[{"n":"i"}],"o":{"n":"selectok"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",5,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",6,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",7,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"futureresult"}}],[11,"poll","","",8,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"from","","",8,{"i":[{"n":"result"}],"o":{"n":"self"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",9,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",10,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",11,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",12,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_done","","Returns whether the underlying future has finished or not.",13,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"poll","","",13,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",14,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",15,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",16,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",17,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",18,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",19,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",20,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",21,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",22,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",23,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",24,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",25,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",26,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,null],[11,"poll","","",3,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",27,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",28,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",29,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",30,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",31,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"poll","","",32,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"drop","","",32,{"i":[{"n":"self"}]}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"shareditem"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",33,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"sharederror"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",34,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",34,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",34,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",35,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",35,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",35,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"wait","","Block the current thread until this future is resolved.",35,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",35,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",35,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",35,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"i":[{"n":"self"},{"n":"b"},{"n":"c"}],"o":{"n":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"}],"o":{"n":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"},{"n":"e"}],"o":{"n":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"i":[{"n":"self"}],"o":{"n":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"i":[{"n":"self"}],"o":{"n":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"i":[{"n":"self"}],"o":{"n":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",36,null],[16,"Item","","The item that the future may resolve with.",36,null],[16,"Error","","The error that the future may resolve with.",36,null],[10,"into_future","","Consumes this object and produces a future.",36,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",37,null],[16,"Error","","Possible errors during conversion.",37,null],[10,"future_from","","Consume the given value, beginning the conversion.",37,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",38,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["executeerror"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"executeerrorkind"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"executeerrorkind"}],"o":{"n":"bool"}}],[11,"new","","Create a new `ExecuteError`",39,{"i":[{"n":"executeerrorkind"},{"n":"f"}],"o":{"n":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",39,{"i":[{"n":"self"}],"o":{"n":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",39,{"i":[{"n":"self"}],"o":{"n":"f"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterStream","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",null,null],[12,"0","","",40,null],[12,"1","","",40,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",41,null],[13,"Second","","An item from the second stream",41,null],[13,"Both","","Items from both streams",41,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"j"}],"o":{"n":"iter"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"i"}],"o":{"n":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"j"}],"o":{"n":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"i":[{"n":"t"}],"o":{"n":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"o":{"n":"empty"}}],[5,"once","","Creates a stream of single element",null,{"i":[{"n":"result"}],"o":{"n":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"i":[{"n":"f"}],"o":{"n":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"i":[{"n":"t"},{"n":"f"}],"o":{"n":"unfold"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"i":[{"n":"i"}],"o":{"n":"futuresordered"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"i":[{"n":"i"}],"o":{"n":"futuresunordered"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",42,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",43,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",44,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",45,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",46,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",46,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",46,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",46,null],[11,"poll_complete","","",46,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",46,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",46,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",47,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"fmtresult"}}],[11,"poll","","",48,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"fmtresult"}}],[11,"poll","","",49,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",50,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",51,null],[11,"poll_complete","","",51,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",51,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",51,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",52,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",52,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",52,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",52,null],[11,"poll_complete","","",52,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",52,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",52,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",53,null],[11,"poll_complete","","",53,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",53,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",53,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",54,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",55,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",56,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",56,null],[11,"poll_complete","","",56,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",56,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",57,null],[11,"poll_complete","","",57,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",57,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",57,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",57,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",57,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",57,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",57,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"poll","","",58,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",59,null],[11,"poll_complete","","",59,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",59,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",59,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",60,null],[11,"poll_complete","","",60,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",60,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",60,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",61,null],[11,"poll_complete","","",61,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",61,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",61,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",62,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",62,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",62,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",62,null],[11,"poll_complete","","",62,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",62,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",62,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",63,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",64,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",65,null],[11,"poll_complete","","",65,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",65,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",65,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",66,null],[11,"poll_complete","","",66,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",66,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",66,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",66,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",67,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",68,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",69,null],[11,"poll_complete","","",69,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",69,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",69,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",70,null],[11,"poll_complete","","",70,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",70,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",70,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",71,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",71,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",71,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",71,null],[11,"poll_complete","","",71,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",71,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",71,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",72,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",72,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",72,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",72,null],[11,"poll_complete","","",72,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",72,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",72,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",73,null],[11,"poll_complete","","",73,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",73,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",73,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",74,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",75,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",76,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"poll","","",76,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",77,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",77,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",77,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",77,null],[11,"poll_complete","","",77,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",77,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",77,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",78,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",78,null],[11,"poll_complete","","",78,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",78,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",79,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"start_send","","",80,null],[11,"poll_complete","","",80,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",80,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",80,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",80,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",80,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",80,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",81,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"poll"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",82,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",82,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",82,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"next","","",82,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",83,{"i":[{"n":"self"},{"n":"splitsink"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"poll","","",83,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",84,{"i":[{"n":"self"},{"n":"splitstream"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"start_send","","",84,null],[11,"poll_complete","","",84,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",84,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",40,{"i":[{"n":"self"}],"o":{"n":"str"}}],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[11,"new","","Constructs a new, empty `FuturesUnordered`",85,{"o":{"n":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",85,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",85,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push a future into the set.",85,{"i":[{"n":"self"},{"n":"t"}]}],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",85,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"poll","","",85,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",85,{"i":[{"n":"self"}]}],[11,"from_iter","","",85,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",86,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",86,null],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",87,{"o":{"n":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",87,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push a future into the queue.",87,{"i":[{"n":"self"},{"n":"t"}]}],[11,"poll","","",87,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_iter","","",87,{"i":[{"n":"t"}],"o":{"n":"self"}}],[8,"Stream","","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",88,null],[16,"Error","","The type of error this stream may generate.",88,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",88,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",88,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",88,{"i":[{"n":"self"}],"o":{"n":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",88,{"i":[{"n":"self"}],"o":{"n":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,{"i":[{"n":"self"}],"o":{"n":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",88,{"i":[{"n":"self"}],"o":{"n":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",88,{"i":[{"n":"self"},{"n":"t"},{"n":"f"}],"o":{"n":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",88,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",88,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",88,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",88,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",88,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",88,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",88,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",88,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",88,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",88,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",88,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"zip"}}],[11,"chain","","Adapter for chaining two stream.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",88,{"i":[{"n":"self"}],"o":{"n":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",88,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",88,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",88,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspecterr"}}],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Wait","","A sink combinator which converts an asynchronous sink to a blocking sink.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",null,null],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"with"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",89,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",89,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",89,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",89,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",89,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",90,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",90,null],[11,"poll_complete","","",90,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",90,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consume the `Flush` and return the inner sink.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",91,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"sinkfromerr"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",92,null],[11,"poll_complete","","",92,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",92,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",92,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",93,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",93,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",93,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",94,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"sinkmaperr"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"start_send","","",95,null],[11,"poll_complete","","",95,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",95,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"poll","","",95,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",96,null],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"fmtresult"}}],[11,"start_send","","",96,null],[11,"poll_complete","","",96,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",96,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"poll","","",97,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",97,null],[11,"poll_complete","","",97,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",97,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"send","","Sends a value to this sink, blocking the current thread until it's able to do so.",98,null],[11,"flush","","Flushes any buffered data in this sink, blocking the current thread until it's entirely flushed.",98,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"close","","Close this sink, blocking the current thread until it's entirely closed.",98,{"i":[{"n":"self"}],"o":{"n":"result"}}],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",99,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",99,null],[10,"start_send","","Begin the process of sending a value to the sink.",99,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",99,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",99,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",99,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"with","","Composes a function in front of the sink.",99,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",99,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",99,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",99,{"i":[{"n":"self"}],"o":{"n":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",99,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",99,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"fanout"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",99,{"i":[{"n":"self"}],"o":{"n":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",99,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",99,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"sendall"}}],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"o":{"n":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"i":[{"n":"unparkevent"},{"n":"f"}],"o":{"n":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",100,{"i":[{"n":"self"},{"n":"usize"}]}],[0,"executor","futures","Executors",null,null],[3,"Run","futures::executor","Units of work submitted to an `Executor`, currently only created internally.",null,null],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which notifications are routed in the `futures` crate.",null,null],[5,"spawn","","Spawns a future or stream, returning it and the new task responsible for running it to completion.",null,{"i":[{"n":"t"}],"o":{"n":"spawn"}}],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the duration of the provided closure.",null,{"i":[{"n":"t"},{"n":"usize"},{"n":"f"}],"o":{"n":"r"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",101,{"i":[{"n":"self"}]}],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",102,{"i":[{"n":"self"},{"n":"run"}]}],[8,"Notify","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"notify","","Indicates that an associated future and/or task are ready to make progress.",103,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",103,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",103,{"i":[{"n":"self"},{"n":"usize"}]}],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory management behind a `Task`.",null,null],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.",104,{"i":[{"n":"self"}],"o":{"n":"notifyhandle"}}],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating resources associated with it.",104,{"i":[{"n":"self"}]}],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>` is dropped.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Execute` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"send","","Completes this oneshot with a successful result.",106,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",106,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",106,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"drop","","",106,{"i":[{"n":"self"}]}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"canceled"}}],[11,"eq","","",107,{"i":[{"n":"self"},{"n":"canceled"}],"o":{"n":"bool"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",107,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",105,{"i":[{"n":"self"}]}],[11,"poll","","",105,{"i":[{"n":"self"}],"o":{"g":["canceled"],"n":"poll"}}],[11,"drop","","",105,{"i":[{"n":"self"}]}],[11,"forget","","Drop this future without canceling the underlying future.",108,{"i":[{"n":"self"}]}],[11,"poll","","",108,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",108,{"i":[{"n":"self"}]}],[11,"poll","","",109,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",109,{"i":[{"n":"self"}]}],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"TrySendError","","Error type returned from `try_send`",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with bounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with unbounded capacity.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"i":[{"n":"s"},{"n":"e"},{"n":"usize"}],"o":{"n":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"i":[{"n":"s"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"senderror"}}],[11,"eq","","",114,{"i":[{"n":"self"},{"n":"senderror"}],"o":{"n":"bool"}}],[11,"ne","","",114,{"i":[{"n":"self"},{"n":"senderror"}],"o":{"n":"bool"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"trysenderror"}}],[11,"eq","","",115,{"i":[{"n":"self"},{"n":"trysenderror"}],"o":{"n":"bool"}}],[11,"ne","","",115,{"i":[{"n":"self"},{"n":"trysenderror"}],"o":{"n":"bool"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",114,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",114,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",115,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full",115,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped",115,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",115,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"try_send","","Attempts to send a message on this `Sender<T>` without blocking.",110,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["trysenderror"],"n":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to be capacity to send at least one item without waiting.",110,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"start_send","","",110,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",110,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",110,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",111,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"result"}}],[11,"start_send","","",111,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",111,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",111,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"unboundedsender"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"drop","","",110,{"i":[{"n":"self"}]}],[11,"close","","Closes the receiving half",112,{"i":[{"n":"self"}]}],[11,"poll","","",112,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"drop","","",112,{"i":[{"n":"self"}]}],[11,"close","","Closes the receiving half",113,{"i":[{"n":"self"}]}],[11,"poll","","",113,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"poll","","",116,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",117,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","futures::sync","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",118,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can't be acquired.",118,{"i":[{"n":"self"}],"o":{"g":["bilockguard"],"n":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",118,{"i":[{"n":"self"}],"o":{"n":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",118,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",119,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",119,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",119,{"i":[{"n":"self"}]}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",120,{"i":[{"n":"self"}],"o":{"g":["bilockacquired"],"n":"poll"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",121,{"i":[{"n":"self"}],"o":{"n":"bilock"}}],[11,"deref","","",121,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",121,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",121,{"i":[{"n":"self"}]}],[0,"unsync","futures","Future-aware single-threaded synchronization",null,null],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure, for use communicating between tasks on the same thread.",null,null],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of a channel is dropped",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Executor` instances must be able to execute for `spawn`.",null,null],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",null,null],[5,"unbounded","","Creates an unbounded in-memory channel with buffered storage.",null,null],[5,"spawn","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream.",null,{"i":[{"n":"s"},{"n":"e"},{"n":"usize"}],"o":{"n":"spawnhandle"}}],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor` provided, `executor`, returning a handle representing the remote stream, with unbounded buffering.",null,{"i":[{"n":"s"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"start_send","","",122,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",122,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",122,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"drop","","",122,{"i":[{"n":"self"}]}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"close","","Closes the receiving half",123,{"i":[{"n":"self"}]}],[11,"poll","","",123,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"drop","","",123,{"i":[{"n":"self"}]}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"start_send","","",124,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"startsend"}}],[11,"poll_complete","","",124,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"close","","",124,{"i":[{"n":"self"}],"o":{"g":["senderror"],"n":"poll"}}],[11,"unbounded_send","","Sends the provided message along this channel.",124,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["senderror"],"n":"result"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"close","","Closes the receiving half",125,{"i":[{"n":"self"}]}],[11,"poll","","",125,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",126,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",126,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"poll","","",127,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",128,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",null,null],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which the result of a computation is signaled.",null,null],[3,"Receiver","","A future representing the completion of a computation happening elsewhere in memory.",null,null],[3,"SpawnHandle","","Handle returned from the `spawn` function.",null,null],[3,"Execute","","Type of future which `Spawn` instances below must be able to spawn.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[5,"spawn","","Spawns a `future` onto the instance of `Executor` provided, `executor`, returning a handle representing the completion of the future.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided `s`.",null,{"i":[{"n":"f"},{"n":"e"}],"o":{"n":"spawnhandle"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"send","","Completes this oneshot with a successful result.",129,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has paired with has gone away.",129,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has gone away.",129,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"drop","","",129,{"i":[{"n":"self"}]}],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",130,{"i":[{"n":"self"}]}],[11,"poll","","",130,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"drop","","",130,{"i":[{"n":"self"}]}],[11,"forget","","Drop this future without canceling the underlying future.",131,{"i":[{"n":"self"}]}],[11,"poll","","",131,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",132,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a send attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",133,{"o":{"n":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",133,{"i":[{"n":"self"}]}],[11,"register_task","","Registers the provided task to be notified on calls to `notify`.",133,{"i":[{"n":"self"},{"n":"task"}]}],[11,"notify","","Notifies the task that last called `register`.",133,{"i":[{"n":"self"}]}],[11,"default","","",133,{"o":{"n":"self"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",134,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"poll_future","futures::executor","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",135,{"i":[{"n":"self"},{"g":["unpark"],"n":"arc"}],"o":{"n":"poll"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",135,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",135,{"i":[{"n":"self"},{"g":["executor"],"n":"arc"}]}],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",135,{"i":[{"n":"self"},{"g":["unpark"],"n":"arc"}],"o":{"g":["option"],"n":"poll"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",135,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",135,{"i":[{"n":"self"},{"n":"arc"}],"o":{"n":"poll"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",135,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",135,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",135,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",136,{"i":[{"n":"self"}]}],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","futures::task","",137,{"i":[{"n":"self"}],"o":{"n":"unparkevent"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",137,{"i":[{"g":["eventset"],"n":"arc"},{"n":"usize"}],"o":{"n":"unparkevent"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","futures::executor","",138,{"i":[{"n":"arc"}],"o":{"n":"notifyhandle"}}],[11,"clone_id","","This function is called whenever a new copy of `id` is needed.",103,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"usize"}}],[11,"drop_id","","All instances of `Task` store an `id` that they're going to internally notify with, and this function is called when the `Task` is dropped.",103,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clone","futures::task","",139,{"i":[{"n":"self"}],"o":{"n":"task"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",139,{"i":[{"n":"self"}]}],[11,"is_current","","Returns `true` when called from within the context of the task.",139,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",139,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",135,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",135,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",135,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"n":"poll"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",135,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"n":"poll"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",135,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"n":"poll"}}],[11,"fmt","","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Constructs a new `NotifyHandle` directly.",138,null],[11,"notify","","Invokes the underlying instance of `Notify` with the provided `id`.",138,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",138,{"i":[{"n":"self"}]}],[11,"from","","",138,{"i":[{"n":"t"}],"o":{"n":"notifyhandle"}}]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat2"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SendAll"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Execute"],[3,"AtomicTask"],[3,"LocalKey"],[3,"Spawn"],[3,"Run"],[3,"UnparkEvent"],[3,"NotifyHandle"],[3,"Task"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,null],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",null,null],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"from_bytes","","",0,null],[11,"from_bytes_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"IoVec"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"i":[{"n":"t"}]}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled `Cell`, but with frozen contents.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with frozen contents.",null,null],[3,"AtomicLazyCell","","A lazily filled `Cell`, with frozen contents.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",0,{"o":{"n":"lazycell"}}],[11,"new","","Creates a new, empty, `LazyCell`.",0,{"o":{"n":"lazycell"}}],[11,"fill","","Put a value into this cell.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the duration of the cell itself.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing function to fail.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get","","Returns a copy of the contents of the lazy cell.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"atomiclazycell"}}],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,{"o":{"n":"atomiclazycell"}}],[11,"fill","","Put a value into this cell.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get","","Returns a copy of the contents of the lazy cell.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",35,null],[12,"ipi_spec_dst","","",35,null],[12,"ipi_addr","","",35,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",36,null],[12,"ifa_name","","",36,null],[12,"ifa_flags","","",36,null],[12,"ifa_addr","","",36,null],[12,"ifa_netmask","","",36,null],[12,"ifa_ifu","","",36,null],[12,"ifa_data","","",36,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",37,null],[12,"arp_ha","","",37,null],[12,"arp_flags","","",37,null],[12,"arp_netmask","","",37,null],[12,"arp_dev","","",37,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",38,null],[12,"arp_ha","","",38,null],[12,"arp_flags","","",38,null],[12,"arp_netmask","","",38,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",39,null],[12,"ar_pro","","",39,null],[12,"ar_hln","","",39,null],[12,"ar_pln","","",39,null],[12,"ar_op","","",39,null],[3,"dirent","","",null,null],[12,"d_ino","","",40,null],[12,"d_off","","",40,null],[12,"d_reclen","","",40,null],[12,"d_type","","",40,null],[12,"d_name","","",40,null],[3,"dirent64","","",null,null],[12,"d_ino","","",41,null],[12,"d_off","","",41,null],[12,"d_reclen","","",41,null],[12,"d_type","","",41,null],[12,"d_name","","",41,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",42,null],[12,"rlim_max","","",42,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",43,null],[12,"gl_pathv","","",43,null],[12,"gl_offs","","",43,null],[12,"gl_flags","","",43,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",44,null],[12,"pw_passwd","","",44,null],[12,"pw_uid","","",44,null],[12,"pw_gid","","",44,null],[12,"pw_gecos","","",44,null],[12,"pw_dir","","",44,null],[12,"pw_shell","","",44,null],[3,"spwd","","",null,null],[12,"sp_namp","","",45,null],[12,"sp_pwdp","","",45,null],[12,"sp_lstchg","","",45,null],[12,"sp_min","","",45,null],[12,"sp_max","","",45,null],[12,"sp_warn","","",45,null],[12,"sp_inact","","",45,null],[12,"sp_expire","","",45,null],[12,"sp_flag","","",45,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",46,null],[12,"dqb_bsoftlimit","","",46,null],[12,"dqb_curspace","","",46,null],[12,"dqb_ihardlimit","","",46,null],[12,"dqb_isoftlimit","","",46,null],[12,"dqb_curinodes","","",46,null],[12,"dqb_btime","","",46,null],[12,"dqb_itime","","",46,null],[12,"dqb_valid","","",46,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",47,null],[12,"ssi_errno","","",47,null],[12,"ssi_code","","",47,null],[12,"ssi_pid","","",47,null],[12,"ssi_uid","","",47,null],[12,"ssi_fd","","",47,null],[12,"ssi_tid","","",47,null],[12,"ssi_band","","",47,null],[12,"ssi_overrun","","",47,null],[12,"ssi_trapno","","",47,null],[12,"ssi_status","","",47,null],[12,"ssi_int","","",47,null],[12,"ssi_ptr","","",47,null],[12,"ssi_utime","","",47,null],[12,"ssi_stime","","",47,null],[12,"ssi_addr","","",47,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",48,null],[12,"it_value","","",48,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",49,null],[12,"mq_maxmsg","","",49,null],[12,"mq_msgsize","","",49,null],[12,"mq_curmsgs","","",49,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",50,null],[12,"mr_type","","",50,null],[12,"mr_alen","","",50,null],[12,"mr_address","","",50,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",51,null],[12,"if_name","","",51,null],[3,"msginfo","","",null,null],[12,"msgpool","","",52,null],[12,"msgmap","","",52,null],[12,"msgmax","","",52,null],[12,"msgmnb","","",52,null],[12,"msgmni","","",52,null],[12,"msgssz","","",52,null],[12,"msgtql","","",52,null],[12,"msgseg","","",52,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",53,null],[12,"msg_len","","",53,null],[3,"sembuf","","",null,null],[12,"sem_num","","",54,null],[12,"sem_op","","",54,null],[12,"sem_flg","","",54,null],[3,"input_event","","",null,null],[12,"time","","",55,null],[12,"type_","","",55,null],[12,"code","","",55,null],[12,"value","","",55,null],[3,"input_id","","",null,null],[12,"bustype","","",56,null],[12,"vendor","","",56,null],[12,"product","","",56,null],[12,"version","","",56,null],[3,"input_absinfo","","",null,null],[12,"value","","",57,null],[12,"minimum","","",57,null],[12,"maximum","","",57,null],[12,"fuzz","","",57,null],[12,"flat","","",57,null],[12,"resolution","","",57,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",58,null],[12,"len","","",58,null],[12,"index","","",58,null],[12,"keycode","","",58,null],[12,"scancode","","",58,null],[3,"input_mask","","",null,null],[12,"type_","","",59,null],[12,"codes_size","","",59,null],[12,"codes_ptr","","",59,null],[3,"ff_replay","","",null,null],[12,"length","","",60,null],[12,"delay","","",60,null],[3,"ff_trigger","","",null,null],[12,"button","","",61,null],[12,"interval","","",61,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",62,null],[12,"attack_level","","",62,null],[12,"fade_length","","",62,null],[12,"fade_level","","",62,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",63,null],[12,"envelope","","",63,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",64,null],[12,"end_level","","",64,null],[12,"envelope","","",64,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",65,null],[12,"left_saturation","","",65,null],[12,"right_coeff","","",65,null],[12,"left_coeff","","",65,null],[12,"deadband","","",65,null],[12,"center","","",65,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",66,null],[12,"period","","",66,null],[12,"magnitude","","",66,null],[12,"offset","","",66,null],[12,"phase","","",66,null],[12,"envelope","","",66,null],[12,"custom_len","","",66,null],[12,"custom_data","","",66,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",67,null],[12,"weak_magnitude","","",67,null],[3,"ff_effect","","",null,null],[12,"type_","","",68,null],[12,"id","","",68,null],[12,"direction","","",68,null],[12,"trigger","","",68,null],[12,"replay","","",68,null],[12,"u","","",68,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",69,null],[12,"dlpi_name","","",69,null],[12,"dlpi_phdr","","",69,null],[12,"dlpi_phnum","","",69,null],[12,"dlpi_adds","","",69,null],[12,"dlpi_subs","","",69,null],[12,"dlpi_tls_modid","","",69,null],[12,"dlpi_tls_data","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"ucred","","",null,null],[12,"pid","","",72,null],[12,"uid","","",72,null],[12,"gid","","",72,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",73,null],[12,"mnt_dir","","",73,null],[12,"mnt_type","","",73,null],[12,"mnt_opts","","",73,null],[12,"mnt_freq","","",73,null],[12,"mnt_passno","","",73,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",74,null],[12,"version","","",74,null],[12,"reserved","","",74,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",75,null],[12,"ipi6_ifindex","","",75,null],[3,"arpd_request","","",null,null],[12,"req","","",76,null],[12,"ip","","",76,null],[12,"dev","","",76,null],[12,"stamp","","",76,null],[12,"updated","","",76,null],[12,"ha","","",76,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",77,null],[12,"aio_lio_opcode","","",77,null],[12,"aio_reqprio","","",77,null],[12,"aio_buf","","",77,null],[12,"aio_nbytes","","",77,null],[12,"aio_sigevent","","",77,null],[12,"aio_offset","","",77,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",78,null],[12,"e_exit","","",78,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",79,null],[12,"tv_usec","","",79,null],[3,"utmpx","","",null,null],[12,"ut_type","","",80,null],[12,"ut_pid","","",80,null],[12,"ut_line","","",80,null],[12,"ut_id","","",80,null],[12,"ut_user","","",80,null],[12,"ut_host","","",80,null],[12,"ut_exit","","",80,null],[12,"ut_session","","",80,null],[12,"ut_tv","","",80,null],[12,"ut_addr_v6","","",80,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",81,null],[12,"sa_mask","","",81,null],[12,"sa_flags","","",81,null],[12,"sa_restorer","","",81,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",82,null],[12,"ss_flags","","",82,null],[12,"ss_size","","",82,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",83,null],[12,"si_errno","","",83,null],[12,"si_code","","",83,null],[12,"_pad","","",83,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",84,null],[12,"gl_pathv","","",84,null],[12,"gl_offs","","",84,null],[12,"gl_flags","","",84,null],[3,"statfs","","",null,null],[12,"f_type","","",85,null],[12,"f_bsize","","",85,null],[12,"f_blocks","","",85,null],[12,"f_bfree","","",85,null],[12,"f_bavail","","",85,null],[12,"f_files","","",85,null],[12,"f_ffree","","",85,null],[12,"f_fsid","","",85,null],[12,"f_namelen","","",85,null],[12,"f_frsize","","",85,null],[3,"msghdr","","",null,null],[12,"msg_name","","",86,null],[12,"msg_namelen","","",86,null],[12,"msg_iov","","",86,null],[12,"msg_iovlen","","",86,null],[12,"msg_control","","",86,null],[12,"msg_controllen","","",86,null],[12,"msg_flags","","",86,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",87,null],[12,"cmsg_level","","",87,null],[12,"cmsg_type","","",87,null],[3,"termios","","",null,null],[12,"c_iflag","","",88,null],[12,"c_oflag","","",88,null],[12,"c_cflag","","",88,null],[12,"c_lflag","","",88,null],[12,"c_line","","",88,null],[12,"c_cc","","",88,null],[12,"c_ispeed","","",88,null],[12,"c_ospeed","","",88,null],[3,"flock","","",null,null],[12,"l_type","","",89,null],[12,"l_whence","","",89,null],[12,"l_start","","",89,null],[12,"l_len","","",89,null],[12,"l_pid","","",89,null],[3,"sem_t","","",null,null],[3,"mallinfo","","",null,null],[12,"arena","","",90,null],[12,"ordblks","","",90,null],[12,"smblks","","",90,null],[12,"hblks","","",90,null],[12,"hblkhd","","",90,null],[12,"usmblks","","",90,null],[12,"fsmblks","","",90,null],[12,"uordblks","","",90,null],[12,"fordblks","","",90,null],[12,"keepcost","","",90,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",91,null],[12,"nlmsg_type","","",91,null],[12,"nlmsg_flags","","",91,null],[12,"nlmsg_seq","","",91,null],[12,"nlmsg_pid","","",91,null],[3,"nlmsgerr","","",null,null],[12,"error","","",92,null],[12,"msg","","",92,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",93,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",94,null],[12,"nm_block_nr","","",94,null],[12,"nm_frame_size","","",94,null],[12,"nm_frame_nr","","",94,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",95,null],[12,"nm_len","","",95,null],[12,"nm_group","","",95,null],[12,"nm_pid","","",95,null],[12,"nm_uid","","",95,null],[12,"nm_gid","","",95,null],[3,"nlattr","","",null,null],[12,"nla_len","","",96,null],[12,"nla_type","","",96,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",97,null],[12,"rt_dst","","",97,null],[12,"rt_gateway","","",97,null],[12,"rt_genmask","","",97,null],[12,"rt_flags","","",97,null],[12,"rt_pad2","","",97,null],[12,"rt_pad3","","",97,null],[12,"rt_tos","","",97,null],[12,"rt_class","","",97,null],[12,"rt_pad4","","",97,null],[12,"rt_metric","","",97,null],[12,"rt_dev","","",97,null],[12,"rt_mtu","","",97,null],[12,"rt_window","","",97,null],[12,"rt_irtt","","",97,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",98,null],[12,"loads","","",98,null],[12,"totalram","","",98,null],[12,"freeram","","",98,null],[12,"sharedram","","",98,null],[12,"bufferram","","",98,null],[12,"totalswap","","",98,null],[12,"freeswap","","",98,null],[12,"procs","","",98,null],[12,"pad","","",98,null],[12,"totalhigh","","",98,null],[12,"freehigh","","",98,null],[12,"mem_unit","","",98,null],[12,"_f","","",98,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",99,null],[12,"msg_stime","","",99,null],[12,"msg_rtime","","",99,null],[12,"msg_ctime","","",99,null],[12,"msg_qnum","","",99,null],[12,"msg_qbytes","","",99,null],[12,"msg_lspid","","",99,null],[12,"msg_lrpid","","",99,null],[3,"stat","","",null,null],[12,"st_dev","","",100,null],[12,"st_ino","","",100,null],[12,"st_nlink","","",100,null],[12,"st_mode","","",100,null],[12,"st_uid","","",100,null],[12,"st_gid","","",100,null],[12,"st_rdev","","",100,null],[12,"st_size","","",100,null],[12,"st_blksize","","",100,null],[12,"st_blocks","","",100,null],[12,"st_atime","","",100,null],[12,"st_atime_nsec","","",100,null],[12,"st_mtime","","",100,null],[12,"st_mtime_nsec","","",100,null],[12,"st_ctime","","",100,null],[12,"st_ctime_nsec","","",100,null],[3,"stat64","","",null,null],[12,"st_dev","","",101,null],[12,"st_ino","","",101,null],[12,"st_nlink","","",101,null],[12,"st_mode","","",101,null],[12,"st_uid","","",101,null],[12,"st_gid","","",101,null],[12,"st_rdev","","",101,null],[12,"st_size","","",101,null],[12,"st_blksize","","",101,null],[12,"st_blocks","","",101,null],[12,"st_atime","","",101,null],[12,"st_atime_nsec","","",101,null],[12,"st_mtime","","",101,null],[12,"st_mtime_nsec","","",101,null],[12,"st_ctime","","",101,null],[12,"st_ctime_nsec","","",101,null],[3,"statfs64","","",null,null],[12,"f_type","","",102,null],[12,"f_bsize","","",102,null],[12,"f_blocks","","",102,null],[12,"f_bfree","","",102,null],[12,"f_bavail","","",102,null],[12,"f_files","","",102,null],[12,"f_ffree","","",102,null],[12,"f_fsid","","",102,null],[12,"f_namelen","","",102,null],[12,"f_frsize","","",102,null],[12,"f_flags","","",102,null],[12,"f_spare","","",102,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",103,null],[12,"f_frsize","","",103,null],[12,"f_blocks","","",103,null],[12,"f_bfree","","",103,null],[12,"f_bavail","","",103,null],[12,"f_files","","",103,null],[12,"f_ffree","","",103,null],[12,"f_favail","","",103,null],[12,"f_fsid","","",103,null],[12,"f_flag","","",103,null],[12,"f_namemax","","",103,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",104,null],[12,"exponent","","",104,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",105,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",106,null],[12,"swd","","",106,null],[12,"ftw","","",106,null],[12,"fop","","",106,null],[12,"rip","","",106,null],[12,"rdp","","",106,null],[12,"mxcsr","","",106,null],[12,"mxcr_mask","","",106,null],[12,"_st","","",106,null],[12,"_xmm","","",106,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",107,null],[12,"swd","","",107,null],[12,"ftw","","",107,null],[12,"fop","","",107,null],[12,"rip","","",107,null],[12,"rdp","","",107,null],[12,"mxcsr","","",107,null],[12,"mxcr_mask","","",107,null],[12,"st_space","","",107,null],[12,"xmm_space","","",107,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",108,null],[12,"r14","","",108,null],[12,"r13","","",108,null],[12,"r12","","",108,null],[12,"rbp","","",108,null],[12,"rbx","","",108,null],[12,"r11","","",108,null],[12,"r10","","",108,null],[12,"r9","","",108,null],[12,"r8","","",108,null],[12,"rax","","",108,null],[12,"rcx","","",108,null],[12,"rdx","","",108,null],[12,"rsi","","",108,null],[12,"rdi","","",108,null],[12,"orig_rax","","",108,null],[12,"rip","","",108,null],[12,"cs","","",108,null],[12,"eflags","","",108,null],[12,"rsp","","",108,null],[12,"ss","","",108,null],[12,"fs_base","","",108,null],[12,"gs_base","","",108,null],[12,"ds","","",108,null],[12,"es","","",108,null],[12,"fs","","",108,null],[12,"gs","","",108,null],[3,"user","","",null,null],[12,"regs","","",109,null],[12,"u_fpvalid","","",109,null],[12,"i387","","",109,null],[12,"u_tsize","","",109,null],[12,"u_dsize","","",109,null],[12,"u_ssize","","",109,null],[12,"start_code","","",109,null],[12,"start_stack","","",109,null],[12,"signal","","",109,null],[12,"u_ar0","","",109,null],[12,"u_fpstate","","",109,null],[12,"magic","","",109,null],[12,"u_comm","","",109,null],[12,"u_debugreg","","",109,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",110,null],[12,"fpregs","","",110,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",111,null],[12,"uc_link","","",111,null],[12,"uc_stack","","",111,null],[12,"uc_mcontext","","",111,null],[12,"uc_sigmask","","",111,null],[3,"ipc_perm","","",null,null],[12,"__key","","",112,null],[12,"uid","","",112,null],[12,"gid","","",112,null],[12,"cuid","","",112,null],[12,"cgid","","",112,null],[12,"mode","","",112,null],[12,"__seq","","",112,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",113,null],[12,"shm_segsz","","",113,null],[12,"shm_atime","","",113,null],[12,"shm_dtime","","",113,null],[12,"shm_ctime","","",113,null],[12,"shm_cpid","","",113,null],[12,"shm_lpid","","",113,null],[12,"shm_nattch","","",113,null],[3,"termios2","","",null,null],[12,"c_iflag","","",114,null],[12,"c_oflag","","",114,null],[12,"c_cflag","","",114,null],[12,"c_lflag","","",114,null],[12,"c_line","","",114,null],[12,"c_cc","","",114,null],[12,"c_ispeed","","",114,null],[12,"c_ospeed","","",114,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",115,null],[12,"f_frsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_favail","","",115,null],[12,"f_fsid","","",115,null],[12,"f_flag","","",115,null],[12,"f_namemax","","",115,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WSTOPSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFCONTINUED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WIFSIGNALED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WTERMSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFEXITED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WEXITSTATUS","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WCOREDUMP","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"QCMD","","",null,{"i":[{"n":"c_int"},{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"IPOPT_COPIED","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"IPOPT_CLASS","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"IPOPT_NUMBER","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"i":[{"n":"usize"},{"n":"cpu_set_t"}],"o":{"n":"bool"}}],[5,"CPU_EQUAL","","",null,{"i":[{"n":"cpu_set_t"},{"n":"cpu_set_t"}],"o":{"n":"bool"}}],[5,"major","","",null,{"i":[{"n":"dev_t"}],"o":{"n":"c_uint"}}],[5,"minor","","",null,{"i":[{"n":"dev_t"}],"o":{"n":"c_uint"}}],[5,"makedev","","",null,{"i":[{"n":"c_uint"},{"n":"c_uint"}],"o":{"n":"dev_t"}}],[5,"IPTOS_TOS","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"IPTOS_PREC","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"RT_TOS","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"RT_ADDRCLASS","","",null,{"i":[{"n":"u32"}],"o":{"n":"u32"}}],[5,"RT_LOCALADDR","","",null,{"i":[{"n":"u32"}],"o":{"n":"bool"}}],[5,"NLA_ALIGN","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"stat"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"stat64"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"statfs64"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"statvfs64"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"pthread_attr_t"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"_libc_fpxreg"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"_libc_xmmreg"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"_libc_fpstate"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"user_fpregs_struct"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"user_regs_struct"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"user"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"mcontext_t"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"ucontext_t"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"ipc_perm"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"shmid_ds"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"termios2"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"statvfs"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"sigset_t"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"sysinfo"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"msqid_ds"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"aiocb"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"__exit_status"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"__timeval"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"utmpx"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"sigaction"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"stack_t"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"siginfo_t"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"glob64_t"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"statfs"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"msghdr"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"cmsghdr"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"termios"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"flock"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"sem_t"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"mallinfo"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"nlmsghdr"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"nlmsgerr"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"nl_pktinfo"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"nl_mmap_req"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"nl_mmap_hdr"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"nlattr"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"rtentry"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"dirent"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"dirent64"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"rlimit64"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"glob_t"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"pthread_mutex_t"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlock_t"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"pthread_mutexattr_t"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlockattr_t"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"pthread_cond_t"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"pthread_condattr_t"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"passwd"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"spwd"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"dqblk"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"signalfd_siginfo"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"itimerspec"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"fsid_t"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"mq_attr"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"packet_mreq"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"cpu_set_t"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"if_nameindex"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"msginfo"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"mmsghdr"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"sembuf"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"input_event"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"input_id"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"input_absinfo"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"input_keymap_entry"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"input_mask"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"ff_replay"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"ff_trigger"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"ff_envelope"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"ff_constant_effect"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"ff_ramp_effect"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"ff_condition_effect"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"ff_periodic_effect"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"ff_rumble_effect"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"ff_effect"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"dl_phdr_info"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"elf32_phdr"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"elf64_phdr"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"ucred"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"mntent"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"posix_spawn_file_actions_t"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"posix_spawnattr_t"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"genlmsghdr"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"in6_pktinfo"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"arpd_request"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"sockaddr"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in6"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"sockaddr_un"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"sockaddr_storage"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"addrinfo"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"sockaddr_nl"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"sockaddr_ll"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"fd_set"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"sched_param"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"dl_info"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"epoll_event"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"utsname"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"lconv"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"sigevent"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"in_pktinfo"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"ifaddrs"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"in6_rtmsg"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"arpreq"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"arpreq_old"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"arphdr"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"utimbuf"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"timeval"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"rlimit"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"rusage"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"in_addr"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"in6_addr"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"ip_mreq"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"ipv6_mreq"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"hostent"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"iovec"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"pollfd"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"winsize"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"linger"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"sigval"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"itimerval"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"tms"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"servent"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"fd_set"],[3,"in6_rtmsg"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has already been called.",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't match any of the log levels.",null,null],[4,"Level","","An enum representing the available verbosity levels of the logger.",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters of the logger.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,{"i":[{"n":"levelfilter"}]}],[5,"max_level","","Returns the current maximum log level.",null,{"o":{"n":"levelfilter"}}],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,{"i":[{"g":["log"],"n":"box"}],"o":{"g":["setloggererror"],"n":"result"}}],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,{"i":[{"n":"log"}],"o":{"g":["setloggererror"],"n":"result"}}],[5,"logger","","Returns a reference to the logger.",null,{"o":{"n":"log"}}],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[10,"log","","Logs the `Record`.",2,{"i":[{"n":"self"},{"n":"record"}]}],[10,"flush","","Flushes any buffered records.",2,{"i":[{"n":"self"}]}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"ordering"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["level"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"o":{"n":"level"}}],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"ordering"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["levelfilter"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"o":{"n":"levelfilter"}}],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,{"i":[{"n":"self"}],"o":{"g":["level"],"n":"option"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"record"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"builder","","Returns a new builder.",3,{"o":{"n":"recordbuilder"}}],[11,"args","","The message body.",3,{"i":[{"n":"self"}],"o":{"n":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"i":[{"n":"self"}],"o":{"n":"metadata"}}],[11,"level","","The verbosity level of the message.",3,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"target","","The name of the target of the directive.",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"module_path","","The module path of the message.",3,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"file","","The source file containing the message.",3,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"line","","The line containing the message.",3,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct new `RecordBuilder`.",4,{"o":{"n":"recordbuilder"}}],[11,"args","","Set `args`.",4,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"n":"recordbuilder"}}],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with `MetadataBuilder`.",4,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"recordbuilder"}}],[11,"level","","Set `Metadata::level`.",4,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"recordbuilder"}}],[11,"target","","Set `Metadata::target`",4,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"recordbuilder"}}],[11,"module_path","","Set `module_path`",4,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"recordbuilder"}}],[11,"file","","Set `file`",4,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"recordbuilder"}}],[11,"line","","Set `line`",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"recordbuilder"}}],[11,"build","","Invoke the builder and return a `Record`",4,{"i":[{"n":"self"}],"o":{"n":"record"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"metadata"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"le","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"gt","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"ge","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"builder","","Returns a new builder.",5,{"o":{"n":"metadatabuilder"}}],[11,"level","","The verbosity level of the message.",5,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"target","","The name of the target of the directive.",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"cmp","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"le","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"gt","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"ge","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `MetadataBuilder`.",6,{"o":{"n":"metadatabuilder"}}],[11,"level","","Setter for `level`.",6,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"metadatabuilder"}}],[11,"target","","Setter for `target`.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"metadatabuilder"}}],[11,"build","","Returns a `Metadata` object.",6,{"i":[{"n":"self"}],"o":{"n":"metadata"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",7,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"parselevelerror"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"parselevelerror"}],"o":{"n":"bool"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and their spans.","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the start of the struct. This macro supports arbitrary amount of subscripts and recursive member-accesses.",null,null],[14,"span_of","","Produces a range instance representing the sub-slice containing the specified member.",null,null]],"paths":[]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on non-blocking APIs, event notification, and other useful utilities for building high performance IO apps.","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space `Poll` registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated `Registration`.",null,null],[3,"PollOpt","","Options supplied when registering an `Evented` handle with `Poll`",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",0,null],[3,"Events","","A collection of readiness events.",null,null],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"ordering"}}],[11,"empty","","Return a `PollOpt` representing no set options.",1,{"o":{"n":"pollopt"}}],[11,"edge","","Return a `PollOpt` representing edge-triggered notifications.",1,{"o":{"n":"pollopt"}}],[11,"level","","Return a `PollOpt` representing level-triggered notifications.",1,{"o":{"n":"pollopt"}}],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,{"o":{"n":"pollopt"}}],[11,"is_edge","","Returns true if the options include edge-triggered notifications.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_level","","Returns true if the options include level-triggered notifications.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"contains","","Returns true if `self` is a superset of `other`.",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"insert","","Adds all options represented by `other` into `self`.",1,{"i":[{"n":"self"},{"n":"pollopt"}]}],[11,"remove","","Removes all options represented by `other` from `self`.",1,{"i":[{"n":"self"},{"n":"pollopt"}]}],[11,"bitor","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"bitxor","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"bitand","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"sub","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"ordering"}}],[11,"empty","","Returns the empty `Ready` set.",2,{"o":{"n":"ready"}}],[11,"readable","","Returns a `Ready` representing readable readiness.",2,{"o":{"n":"ready"}}],[11,"writable","","Returns a `Ready` representing writable readiness.",2,{"o":{"n":"ready"}}],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,{"o":{"n":"ready"}}],[11,"is_empty","","Returns true if `Ready` is the empty set",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_readable","","Returns true if the value includes readable readiness",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_writable","","Returns true if the value includes writable readiness",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"remove","","Removes all options represented by `other` from `self`.",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"contains","","Returns true if `self` is a superset of `other`.",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"from_usize","","Create a `Ready` instance using the given `usize` representation.",2,{"i":[{"n":"usize"}],"o":{"n":"ready"}}],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bitor","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"bitor_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"bitxor","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"bitxor_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"bitand","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"bitand_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"sub","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"sub_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"setreadiness"}}],[11,"new","","Return a new `Poll` handle.",4,{"o":{"g":["poll"],"n":"result"}}],[11,"register","","Register an `Evented` handle with the `Poll` instance.",4,{"i":[{"n":"self"},{"n":"e"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",4,{"i":[{"n":"self"},{"n":"e"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",4,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"result"}}],[11,"poll","","Wait for readiness events",4,{"i":[{"n":"self"},{"n":"events"},{"g":["duration"],"n":"option"}],"o":{"g":["usize"],"n":"result"}}],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",4,{"i":[{"n":"self"},{"n":"events"},{"g":["duration"],"n":"option"}],"o":{"g":["usize"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_raw_fd","","",4,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity` events.",5,{"i":[{"n":"usize"}],"o":{"n":"events"}}],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",5,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Returns an iterator over the `Event` values.",5,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"clear","","Clearing all `Event` values from container explicitly.",5,{"i":[{"n":"self"}]}],[11,"into_iter","","",5,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new2","","Create and return a new `Registration` and the associated `SetReadiness`.",6,null],[11,"register","","",6,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",6,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",6,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"readiness","","Returns the registration's current readiness.",3,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"set_readiness","","Set the registration's readiness",3,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",2,{"i":[{"n":"unixready"}],"o":{"n":"ready"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"ordering"}}],[11,"hash","","",0,null],[11,"from","","",0,{"i":[{"n":"usize"}],"o":{"n":"token"}}],[0,"net","","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a remote socket.",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the specified address.",7,{"i":[{"n":"socketaddr"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpBuilder`, connecting it to the address specified.",7,{"i":[{"n":"tcpstream"},{"n":"socketaddr"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,{"i":[{"n":"tcpstream"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",7,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",7,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",7,{"i":[{"n":"self"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",7,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",7,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",7,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",7,null],[11,"read_bufs","","Read in a list of buffers all at once.",7,null],[11,"write_bufs","","Write a list of buffers all at once.",7,null],[11,"read","","",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"register","","",7,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",7,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",7,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"bind","","Convenience method to bind a new TCP listener to the specified address to receive new connections.",8,{"i":[{"n":"socketaddr"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"from_std","","Creates a new `TcpListener` from an instance of a `std::net::TcpListener` type.",8,{"i":[{"n":"tcplistener"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"accept","","Accepts a new `TcpStream`.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",8,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",8,{"i":[{"n":"self"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"register","","",8,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",8,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",8,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_raw_fd","","",7,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"as_raw_fd","","",7,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",7,{"i":[{"n":"rawfd"}],"o":{"n":"tcpstream"}}],[11,"into_raw_fd","","",8,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"as_raw_fd","","",8,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",8,{"i":[{"n":"rawfd"}],"o":{"n":"tcplistener"}}],[11,"bind","","Creates a UDP socket from the given address.",9,{"i":[{"n":"socketaddr"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std socket.",9,{"i":[{"n":"udpsocket"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"local_addr","","Returns the socket address that this socket was created from.",9,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",9,{"i":[{"n":"self"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",9,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"send","","Sends data on the socket to the address previously bound via connect(). On success, returns the number of bytes written.",9,null],[11,"recv","","Receives data from the socket previously bound with connect(). On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"connect","","Connects the UDP socket setting the default destination for `send()` and limiting packets that are read via `recv` from the address specified in `addr`.",9,{"i":[{"n":"self"},{"n":"socketaddr"}],"o":{"n":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"register","","",9,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",9,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",9,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_raw_fd","","",9,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"as_raw_fd","","",9,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",9,{"i":[{"n":"rawfd"}],"o":{"n":"udpsocket"}}],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","[`Events`] iterator.",null,null],[3,"Event","","An readiness event returned by [`Poll::poll`].",null,null],[8,"Evented","","A value that may be registered with `Poll`",null,null],[10,"register","","Register `self` with the given `Poll` instance.",10,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",null,null],[12,"0","","",11,null],[3,"UnixReady","","Unix specific extensions to `Ready`",null,null],[11,"clone","mio::event","",12,{"i":[{"n":"self"}],"o":{"n":"event"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"event"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"event"}],"o":{"n":"bool"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `Event` containing `readiness` and `token`",12,{"i":[{"n":"ready"},{"n":"token"}],"o":{"n":"event"}}],[11,"readiness","","Returns the event's readiness.",12,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"token","","Returns the event's token.",12,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"g":["event"],"n":"option"}}],[11,"fmt","mio::unix","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"register","","",11,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",11,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",11,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"unixready"}}],[11,"partial_cmp","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"le","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"gt","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"ge","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"cmp","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"ordering"}}],[11,"error","","Returns a `Ready` representing error readiness.",14,{"o":{"n":"unixready"}}],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,{"o":{"n":"unixready"}}],[11,"is_error","","Returns true if the value includes error readiness",14,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_hup","","Returns true if the value includes HUP readiness",14,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",14,{"i":[{"n":"ready"}],"o":{"n":"unixready"}}],[11,"deref","","",14,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"deref_mut","","",14,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"bitor","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"bitxor","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"bitand","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"sub","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"SetReadiness"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"o":{"g":["tcpbuilder"],"n":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"o":{"g":["tcpbuilder"],"n":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["tcpbuilder"],"n":"result"}}],[11,"listen","","Mark a socket as ready to accept incoming connection requests using accept()",0,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"connect","","Initiate a connection on this socket to the specified address.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,{"i":[{"n":"self"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,{"i":[{"n":"self"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"o":{"g":["udpbuilder"],"n":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"o":{"g":["udpbuilder"],"n":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"from_raw_fd","","",0,{"i":[{"n":"c_int"}],"o":{"n":"tcpbuilder"}}],[11,"as_raw_fd","","",0,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"from_raw_fd","","",1,{"i":[{"n":"c_int"}],"o":{"n":"udpbuilder"}}],[11,"as_raw_fd","","",1,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"reuse_port","net2","",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_port","","",0,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"reuse_port","","",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_port","","",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so the amount of milliseconds between them.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection to the host specified by `addr`.",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for this socket",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for this socket",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["ipv4addr"],"n":"result"}}],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and `recv` syscalls to be used to send data and also applies filters to only receive data from the specified address.",6,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,null],[10,"recv","","Receives data on the socket from the remote address to which it is connected.",6,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["nodrop"] = {"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,{"i":[{"n":"t"}],"o":{"n":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}]],"paths":[[3,"NoDrop"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,{"o":{"n":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current system.",null,{"o":{"n":"usize"}}]],"paths":[]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",null,null],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",null,{"i":[{"n":"t"},{"n":"u32"}],"o":{"n":"t"}}],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"binomial","","Calculate the binomial coefficient.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"multinomial","","Calculate the multinomial coefficient.",null,null],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",0,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",1,null],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",2,{"i":[{"n":"t"}],"o":{"n":"iterbinomial"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,{"i":[{"n":"self"}],"o":{"n":"self"}}]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"o":{"n":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"o":{"n":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"o":{"n":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"o":{"n":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't be represented.",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't be represented, like signed `MIN` values that can't be positive, or non-zero unsigned values that can't be negative.",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",14,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",15,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",16,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.",null,null],[16,"Output","","The result after applying the operator.",17,null],[10,"inv","","Returns the multiplicative inverse of `self`.",17,null],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",18,null],[10,"mul_add","","Performs the fused multiply-add operation.",18,null],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",19,{"i":[{"n":"self"},{"n":"a"},{"n":"b"}]}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"o":{"n":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"o":{"n":"self"}}],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with `no_std`.",null,null],[10,"infinity","","Returns positive infinity.",21,{"o":{"n":"self"}}],[10,"neg_infinity","","Returns negative infinity.",21,{"o":{"n":"self"}}],[10,"nan","","Returns NaN.",21,{"o":{"n":"self"}}],[10,"neg_zero","","Returns `-0.0`.",21,{"o":{"n":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",21,{"o":{"n":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",21,{"o":{"n":"self"}}],[10,"epsilon","","Returns epsilon, a small positive value.",21,{"o":{"n":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",21,{"o":{"n":"self"}}],[11,"is_nan","","Returns `true` if the number is NaN.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_infinite","","Returns `true` if the number is infinite.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_normal","","Returns `true` if the number is neither zero, infinite, subnormal or NaN.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",21,{"i":[{"n":"self"}],"o":{"n":"fpcategory"}}],[11,"floor","","Returns the largest integer less than or equal to a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"ceil","","Returns the smallest integer greater than or equal to a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"trunc","","Return the integer part of a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fract","","Returns the fractional part of a number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"abs","","Computes the absolute value of `self`. Returns `FloatCore::nan()` if the number is `FloatCore::nan()`.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"signum","","Returns a number that represents the sign of `self`.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `FloatCore::infinity()`, and since Rust 1.20 also `FloatCore::nan()`.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `FloatCore::neg_infinity()`, and since Rust 1.20 also `-FloatCore::nan()`.",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"min","","Returns the minimum of the two numbers.",21,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"max","","Returns the maximum of the two numbers.",21,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the number.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"powi","","Raise a number to an integer power.",21,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",21,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",21,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",22,{"o":{"n":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",22,{"o":{"n":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",22,{"o":{"n":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",22,{"o":{"n":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",22,{"o":{"n":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",22,{"o":{"n":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",22,{"o":{"n":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",22,{"o":{"n":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",22,{"o":{"n":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",22,{"o":{"n":"self"}}],[10,"PI","","Return Archimedes’ constant.",22,{"o":{"n":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",22,{"o":{"n":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"i":[{"n":"t"}],"o":{"n":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",23,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",23,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",23,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",23,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",23,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",23,{"i":[{"n":"self"}],"o":{"g":["i128"],"n":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",23,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",23,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",23,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",23,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",23,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",23,{"i":[{"n":"self"}],"o":{"g":["u128"],"n":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",23,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",23,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"isize"}],"o":{"n":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"i8"}],"o":{"n":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"i16"}],"o":{"n":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"i32"}],"o":{"n":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"i64"}],"o":{"n":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"i128"}],"o":{"n":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"usize"}],"o":{"n":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"u8"}],"o":{"n":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"u16"}],"o":{"n":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"u32"}],"o":{"n":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"u64"}],"o":{"n":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"u128"}],"o":{"n":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"f32"}],"o":{"n":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",24,{"i":[{"n":"f64"}],"o":{"n":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",25,{"i":[{"n":"t"}],"o":{"n":"option"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",26,{"i":[{"n":"self"}],"o":{"n":"t"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",27,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"option"}}],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",28,null],[10,"pow","","Returns `self` to the power `rhs`.",28,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",29,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",29,{"i":[{"n":"str"},{"n":"u32"}],"o":{"n":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Bounded"],[8,"FloatCore"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"PrimInt"],[8,"Pow"],[8,"Num"]]};
searchIndex["proc_macro2"] = {"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a sequence of token trees.",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion information.",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`, `-` or `#`.",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`), byte character (`b'a'`), an integer or floating point number with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another `Punct` or followed by another token or whitespace.",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type, such as iterators.",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"g":["tokentree"],"n":"option"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_iter","proc_macro2","",4,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"new","","Returns an empty `TokenStream` containing no token trees.",4,{"o":{"n":"tokenstream"}}],[11,"empty","","",4,{"o":{"n":"tokenstream"}}],[11,"is_empty","","Checks if this `TokenStream` is empty.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"default","","",4,{"o":{"n":"self"}}],[11,"from_str","","",4,{"i":[{"n":"str"}],"o":{"g":["tokenstream","lexerror"],"n":"result"}}],[11,"from","","",4,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[11,"extend","","",4,{"i":[{"n":"self"},{"n":"i"}]}],[11,"extend","","",4,{"i":[{"n":"self"},{"n":"i"}]}],[11,"from_iter","","",4,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"call_site","","The span of the invocation of the current procedural macro.",6,{"o":{"n":"span"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"tokentree"}}],[11,"span","","Returns the span of this tree, delegating to the `span` method of the contained token or a delimited stream.",0,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","Configures the span for only this token.",0,{"i":[{"n":"self"},{"n":"span"}]}],[11,"from","","",0,{"i":[{"n":"group"}],"o":{"n":"tokentree"}}],[11,"from","","",0,{"i":[{"n":"ident"}],"o":{"n":"tokentree"}}],[11,"from","","",0,{"i":[{"n":"punct"}],"o":{"n":"tokentree"}}],[11,"from","","",0,{"i":[{"n":"literal"}],"o":{"n":"tokentree"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"delimiter"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"delimiter"}],"o":{"n":"bool"}}],[11,"new","","Creates a new `Group` with the given delimiter and token stream.",7,{"i":[{"n":"delimiter"},{"n":"tokenstream"}],"o":{"n":"group"}}],[11,"delimiter","","Returns the delimiter of this `Group`",7,{"i":[{"n":"self"}],"o":{"n":"delimiter"}}],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in this `Group`.",7,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"span","","Returns the span for the delimiters of this token stream, spanning the entire `Group`.",7,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not its internal tokens.",7,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"punct"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"spacing"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"spacing"}],"o":{"n":"bool"}}],[11,"new","","Creates a new `Punct` from the given character and spacing.",8,{"i":[{"n":"char"},{"n":"spacing"}],"o":{"n":"punct"}}],[11,"as_char","","Returns the value of this punctuation character as `char`.",8,{"i":[{"n":"self"}],"o":{"n":"char"}}],[11,"spacing","","Returns the spacing of this punctuation character, indicating whether it's immediately followed by another `Punct` in the token stream, so they can potentially be combined into a multicharacter operator (`Joint`), or it's followed by some other token or whitespace (`Alone`) so the operator has certainly ended.",8,{"i":[{"n":"self"}],"o":{"n":"spacing"}}],[11,"span","","Returns the span for this punctuation character.",8,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","Configure the span for this punctuation character.",8,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",9,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"ident"}}],[11,"span","","Returns the span of this `Ident`.",9,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",9,{"i":[{"n":"self"},{"n":"span"}]}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"bool"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"ident"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",9,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"ordering"}}],[11,"hash","","",9,{"i":[{"n":"self"},{"n":"h"}]}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"literal"}}],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"u8"}],"o":{"n":"literal"}}],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"u16"}],"o":{"n":"literal"}}],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"u32"}],"o":{"n":"literal"}}],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"u64"}],"o":{"n":"literal"}}],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"usize"}],"o":{"n":"literal"}}],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"i8"}],"o":{"n":"literal"}}],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"i16"}],"o":{"n":"literal"}}],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"i32"}],"o":{"n":"literal"}}],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"i64"}],"o":{"n":"literal"}}],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,{"i":[{"n":"isize"}],"o":{"n":"literal"}}],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"u8"}],"o":{"n":"literal"}}],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"u16"}],"o":{"n":"literal"}}],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"u32"}],"o":{"n":"literal"}}],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"u64"}],"o":{"n":"literal"}}],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"usize"}],"o":{"n":"literal"}}],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"i8"}],"o":{"n":"literal"}}],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"i16"}],"o":{"n":"literal"}}],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"i32"}],"o":{"n":"literal"}}],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"i64"}],"o":{"n":"literal"}}],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,{"i":[{"n":"isize"}],"o":{"n":"literal"}}],[11,"f64_unsuffixed","","",10,{"i":[{"n":"f64"}],"o":{"n":"literal"}}],[11,"f64_suffixed","","",10,{"i":[{"n":"f64"}],"o":{"n":"literal"}}],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,{"i":[{"n":"f32"}],"o":{"n":"literal"}}],[11,"f32_suffixed","","",10,{"i":[{"n":"f32"}],"o":{"n":"literal"}}],[11,"string","","",10,{"i":[{"n":"str"}],"o":{"n":"literal"}}],[11,"character","","",10,{"i":[{"n":"char"}],"o":{"n":"literal"}}],[11,"byte_string","","",10,null],[11,"span","","",10,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",10,{"i":[{"n":"self"},{"n":"span"}]}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"IntoIter"],[3,"TokenStream"],[3,"LexError"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending tokens.",null,null],[10,"append","","",0,{"i":[{"n":"self"},{"n":"u"}]}],[10,"append_all","","",0,{"i":[{"n":"self"},{"n":"i"}]}],[10,"append_separated","","",0,{"i":[{"n":"self"},{"n":"i"},{"n":"u"}]}],[10,"append_terminated","","",0,{"i":[{"n":"self"},{"n":"i"},{"n":"u"}]}],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",null,null],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"IsaacRng","rand","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[3,"ChaChaRng","","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"o":{"n":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"o":{"n":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"o":{"n":"t"}}],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"n":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"i":[{"n":"range"},{"n":"r"}],"o":{"n":"self"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"i":[{"n":"x"},{"n":"x"}],"o":{"n":"range"}}],[11,"sample","","",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","","",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"gamma"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"gamma"}}],[11,"sample","","",5,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",5,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"chisquared"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"i":[{"n":"f64"}],"o":{"n":"chisquared"}}],[11,"sample","","",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"fisherf"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"fisherf"}}],[11,"sample","","",7,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",7,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"studentt"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"i":[{"n":"f64"}],"o":{"n":"studentt"}}],[11,"sample","","",8,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",8,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"standardnormal"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",9,{"i":[{"n":"r"}],"o":{"n":"standardnormal"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"normal"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"normal"}}],[11,"sample","","",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"lognormal"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"lognormal"}}],[11,"sample","","",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"exp1"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",12,{"i":[{"n":"r"}],"o":{"n":"exp1"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"exp"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"i":[{"n":"f64"}],"o":{"n":"exp"}}],[11,"sample","","",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"sample","","",16,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","","",16,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"new","","",16,{"o":{"n":"randsample"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"weighted"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[11,"ind_sample","","",17,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[0,"jitter","rand","Non-physical true random number generator based on timing jitter.",null,null],[3,"JitterRng","rand::jitter","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",null,null],[4,"TimerError","","An error that can occur when `test_timer` fails.",null,null],[13,"NoTimer","","No timer available.",18,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",18,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",18,null],[13,"TinyVariantions","","Variations of deltas of time too small.",18,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",18,null],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"timererror"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"timererror"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",18,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a timer.",19,{"o":{"g":["jitterrng","timererror"],"n":"result"}}],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",19,null],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",19,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",19,{"i":[{"n":"self"}],"o":{"g":["u32","timererror"],"n":"result"}}],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterEntropy` entropy collector.",19,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"i64"}}],[11,"next_u32","","",19,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",19,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",19,null],[0,"os","rand","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",20,{"o":{"g":["osrng"],"n":"result"}}],[11,"next_u32","","",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",20,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",20,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ReadRng` from a `Read`.",21,{"i":[{"n":"r"}],"o":{"n":"readrng"}}],[11,"next_u32","","",21,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",21,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",21,null],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",22,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",23,{"i":[{"n":"self"},{"n":"r"}]}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",22,{"i":[{"n":"r"},{"n":"u64"},{"n":"rsdr"}],"o":{"n":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",22,{"i":[{"n":"self"}]}],[11,"next_u32","","",22,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",22,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",22,null],[11,"reseed","","",22,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",22,null],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"reseedwithdefault"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reseed","","",24,{"i":[{"n":"self"},{"n":"r"}]}],[11,"default","","",24,{"o":{"n":"reseedwithdefault"}}],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",null,null],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"g":["vec","vec"],"n":"result"}}],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",null,null],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",null,null],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",null,{"i":[{"n":"r"},{"n":"usize"},{"n":"usize"}],"o":{"g":["usize"],"n":"vec"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"rand","rand","",0,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"open01"}}],[11,"rand","","",1,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"closed01"}}],[11,"rand","","",0,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"open01"}}],[11,"rand","","",1,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"closed01"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"chacharng"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",25,{"o":{"n":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",25,{"i":[{"n":"self"},{"n":"u64"},{"n":"u64"}]}],[11,"next_u32","","",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","",25,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",25,null],[11,"rand","","",25,{"i":[{"n":"r"}],"o":{"n":"chacharng"}}],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",26,{"o":{"n":"isaacrng"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"isaacrng"}}],[11,"next_u32","","",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","",26,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",26,null],[11,"rand","","",26,{"i":[{"n":"r"}],"o":{"n":"isaacrng"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",27,{"o":{"n":"isaac64rng"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"isaac64rng"}}],[11,"next_u32","","",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",27,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"reseed","","",27,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",27,null],[11,"rand","","",27,{"i":[{"n":"r"}],"o":{"n":"isaac64rng"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"xorshiftrng"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",28,{"o":{"n":"xorshiftrng"}}],[11,"next_u32","","",28,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",28,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",28,null],[11,"rand","","",28,{"i":[{"n":"r"}],"o":{"n":"xorshiftrng"}}],[8,"Rand","","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",29,{"i":[{"n":"r"}],"o":{"n":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",30,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","Return the next random u64.",30,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",30,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",30,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",30,null],[11,"gen","","Return a random value of a `Rand` type.",30,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",30,{"i":[{"n":"self"}],"o":{"n":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",30,{"i":[{"n":"self"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",30,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",30,{"i":[{"n":"self"}],"o":{"n":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",30,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",30,null],[11,"shuffle","","Shuffle a mutable slice in place.",30,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",31,{"i":[{"n":"self"},{"n":"seed"}]}],[10,"from_seed","","Create a new RNG with the given seed.",31,{"i":[{"n":"seed"}],"o":{"n":"self"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",32,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",33,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"stdrng"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"o":{"g":["stdrng"],"n":"result"}}],[11,"next_u32","","",34,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",34,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"threadrng"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next_u32","","",35,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",35,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[4,"TimerError"],[3,"JitterRng"],[3,"OsRng"],[3,"ReadRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"XorShiftRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"i":[{"n":"str"}],"o":{"n":"demangle"}}],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",null,{"i":[{"n":"str"}],"o":{"g":["demangle","trydemangleerror"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"trydemangleerror"}}],[11,"as_str","","Returns the underlying string that's being demangled.",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"TryDemangleError"],[3,"Demangle"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of scope, even if the code between panics. (as long as panic doesn't abort)","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected value.",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.",null,{"i":[{"n":"t"},{"n":"f"}],"o":{"g":["always"],"n":"scopeguard"}}],[8,"Strategy","","",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run (in the context where this method is called).",0,{"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"should_run","","",1,{"o":{"n":"bool"}}],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through deref) and calls `dropfn` when its destructor runs.",2,{"i":[{"n":"t"},{"n":"f"}],"o":{"n":"scopeguard"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from panic).",null,null]],"paths":[[8,"Strategy"],[4,"Always"],[3,"ScopeGuard"]]};
searchIndex["slab"] = {"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"slab"}}],[11,"default","","",0,{"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new, empty `Slab`.",0,{"o":{"n":"slab"}}],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,{"i":[{"n":"usize"}],"o":{"n":"slab"}}],[11,"capacity","","Return the number of values the slab can store without reallocating.",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"reserve","","Reserve capacity for at least `additional` more values to be stored without allocating.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly `additional` more values.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,{"i":[{"n":"self"}]}],[11,"clear","","Clear the slab of all values.",0,{"i":[{"n":"self"}]}],[11,"len","","Return the number of stored values.",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Return an iterator over the slab.",0,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"get","","Return a reference to the value associated with the given key.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"get_mut","","Return a mutable reference to the value associated with the given key.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"get_unchecked","","Return a reference to the value associated with the given key without performing bounds checking.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"t"}}],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with the given key without performing bounds checking.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"t"}}],[11,"insert","","Insert a value in the slab, returning key assigned to the value.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"usize"}}],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further manipulation.",0,{"i":[{"n":"self"}],"o":{"n":"vacantentry"}}],[11,"remove","","Remove and return the value associated with the given key.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"t"}}],[11,"contains","","Return `true` if a value is associated with the given key.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"retain","","Retain only the elements specified by the predicate.",0,{"i":[{"n":"self"},{"n":"f"}]}],[11,"index","","",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"t"}}],[11,"index_mut","","",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"t"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"insert","","Insert a value in the entry, returning a mutable reference to the value.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"t"}}],[11,"key","","Return the key associated with this entry.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal variable name.",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tts","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",null,null],[12,"ident","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",null,null],[12,"ident","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",10,null],[12,"left","","",10,null],[12,"op","","",10,null],[12,"right","","",10,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",11,null],[12,"func","","",11,null],[12,"paren_token","","",11,null],[12,"args","","",11,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",12,null],[12,"expr","","",12,null],[12,"as_token","","",12,null],[12,"ty","","",12,null],[3,"ExprCatch","","A catch expression: `do catch { ... }`.",null,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",null,null],[12,"attrs","","",13,null],[12,"base","","",13,null],[12,"dot_token","","",13,null],[12,"member","","",13,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",null,null],[3,"ExprIfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",null,null],[3,"ExprInPlace","","A placement expression: `place <- value`.",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",14,null],[12,"expr","","",14,null],[12,"bracket_token","","",14,null],[12,"index","","",14,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",15,null],[12,"lit","","",15,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",16,null],[12,"paren_token","","",16,null],[12,"expr","","",16,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",null,null],[12,"attrs","","",17,null],[12,"qself","","",17,null],[12,"path","","",17,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",18,null],[12,"op","","",18,null],[12,"expr","","",18,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",null,null],[12,"tts","","",19,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprWhileLet","","A while-let loop: `while let pat = expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",20,null],[12,"span","","",20,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",21,null],[12,"lt_token","","",21,null],[12,"lifetimes","","",21,null],[12,"gt_token","","",21,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",22,null],[12,"const_token","","",22,null],[12,"ident","","",22,null],[12,"colon_token","","",22,null],[12,"ty","","",22,null],[12,"eq_token","","",22,null],[12,"default","","",22,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lt_token","","",23,null],[12,"params","","",23,null],[12,"gt_token","","",23,null],[12,"where_clause","","",23,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",24,null],[12,"lifetime","","",24,null],[12,"colon_token","","",24,null],[12,"bounds","","",24,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",25,null],[12,"eq_token","","",25,null],[12,"rhs_ty","","",25,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",26,null],[12,"colon_token","","",26,null],[12,"bounds","","",26,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",27,null],[12,"bounded_ty","","The type being bounded",27,null],[12,"colon_token","","",27,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",28,null],[12,"modifier","","",28,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",29,null],[12,"ident","","",29,null],[12,"colon_token","","",29,null],[12,"bounds","","",29,null],[12,"eq_token","","",29,null],[12,"default","","",29,null],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",null,null],[12,"where_token","","",30,null],[12,"predicates","","",30,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",31,null],[12,"ident","","",31,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",32,null],[12,"span","","",32,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",null,null],[12,"token","","",33,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",34,null],[12,"bang_token","","",34,null],[12,"delimiter","","",34,null],[12,"tts","","",34,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",35,null],[12,"brace_token","","",35,null],[12,"variants","","",35,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",36,null],[12,"fields","","",36,null],[12,"semi_token","","",36,null],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",37,null],[12,"fields","","",37,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,null],[12,"vis","","Visibility of the struct or enum.",38,null],[12,"ident","","Name of the struct or enum.",38,null],[12,"generics","","Generics required to complete the definition.",38,null],[12,"data","","Data within the struct or enum.",38,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",39,null],[12,"name","","",39,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",null,null],[12,"name","","",40,null],[12,"ty","","",40,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",41,null],[12,"elem","","",41,null],[12,"semi_token","","",41,null],[12,"len","","",41,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"unsafety","","",42,null],[12,"abi","","",42,null],[12,"fn_token","","",42,null],[12,"lifetimes","","",42,null],[12,"paren_token","","",42,null],[12,"inputs","","",42,null],[12,"variadic","","",42,null],[12,"output","","",42,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",43,null],[12,"elem","","",43,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",null,null],[12,"impl_token","","",44,null],[12,"bounds","","",44,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",null,null],[12,"underscore_token","","",45,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",46,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",47,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",48,null],[12,"elem","","",48,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",null,null],[12,"qself","","",49,null],[12,"path","","",49,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",50,null],[12,"const_token","","",50,null],[12,"mutability","","",50,null],[12,"elem","","",50,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",51,null],[12,"lifetime","","",51,null],[12,"mutability","","",51,null],[12,"elem","","",51,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",52,null],[12,"elem","","",52,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",null,null],[12,"dyn_token","","",53,null],[12,"bounds","","",53,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",54,null],[12,"elems","","",54,null],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",null,null],[12,"tts","","",55,null],[3,"PathTokens","","A helper for printing a self-type qualified path as tokens.",null,null],[12,"0","","",56,null],[12,"1","","",56,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",null,null],[12,"colon2_token","","",57,null],[12,"lt_token","","",57,null],[12,"args","","",57,null],[12,"gt_token","","",57,null],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",null,null],[12,"ident","","",58,null],[12,"eq_token","","",58,null],[12,"ty","","",58,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",null,null],[12,"paren_token","","",59,null],[12,"inputs","","`(A, B)`",59,null],[12,"output","","`C`",59,null],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",null,null],[12,"leading_colon","","",60,null],[12,"segments","","",60,null],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",null,null],[12,"ident","","",61,null],[12,"arguments","","",61,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",null,null],[12,"lt_token","","",62,null],[12,"ty","","",62,null],[12,"position","","",62,null],[12,"as_token","","",62,null],[12,"gt_token","","",62,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",null,null],[13,"Outer","","",63,null],[13,"Inner","","",63,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Word","","",64,null],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",64,null],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",64,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",65,null],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",65,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",66,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",66,null],[13,"Unit","","Unit struct or unit variant such as `None`.",66,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",null,null],[13,"Public","","A public visibility level: `pub`.",67,null],[13,"Crate","","A crate-level visibility: `crate`.",67,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",67,null],[13,"Inherited","","An inherited visibility, which usually means private.",67,null],[4,"Expr","","A Rust expression.",null,null],[13,"Box","","A box expression: `box f`.",68,null],[13,"InPlace","","A placement expression: `place <- value`.",68,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,null],[13,"Call","","A function call expression: `invoke(a, b)`.",68,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,null],[13,"Unary","","A unary operation: `!x`, `*x`.",68,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,null],[13,"Cast","","A cast expression: `foo as f64`.",68,null],[13,"Type","","A type ascription expression: `foo: f64`.",68,null],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",68,null],[13,"IfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",68,null],[13,"While","","A while loop: `while expr { ... }`.",68,null],[13,"WhileLet","","A while-let loop: `while let pat = expr { ... }`.",68,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",68,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,null],[13,"Block","","A blocked scope: `{ ... }`.",68,null],[13,"Assign","","An assignment expression: `a = compute()`.",68,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",68,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,null],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",68,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,null],[13,"Break","","A `break`, with an optional label to break and an optional expression.",68,null],[13,"Continue","","A `continue`, with an optional label.",68,null],[13,"Return","","A `return`, with an optional value to be returned.",68,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,null],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",68,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,null],[13,"Group","","An expression contained within invisible delimiters.",68,null],[13,"Try","","A try-expression: `expr?`.",68,null],[13,"Catch","","A catch expression: `do catch { ... }`.",68,null],[13,"Yield","","A yield expression: `yield expr`.",68,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,null],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",null,null],[13,"Named","","A named field like `self.x`.",69,null],[13,"Unnamed","","An unnamed field like `self.0`.",69,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",null,null],[13,"None","","",71,null],[13,"Maybe","","",71,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",72,null],[13,"Lifetime","","",72,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",73,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,null],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",null,null],[13,"F32","","",74,null],[13,"F64","","",74,null],[13,"None","","",74,null],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",null,null],[13,"I8","","",75,null],[13,"I16","","",75,null],[13,"I32","","",75,null],[13,"I64","","",75,null],[13,"I128","","",75,null],[13,"Isize","","",75,null],[13,"U8","","",75,null],[13,"U16","","",75,null],[13,"U32","","",75,null],[13,"U64","","",75,null],[13,"U128","","",75,null],[13,"Usize","","",75,null],[13,"None","","",75,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,null],[13,"Byte","","A byte literal: `b'f'`.",76,null],[13,"Char","","A character literal: `'a'`.",76,null],[13,"Int","","An integer literal: `1` or `1u16`.",76,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,null],[13,"Bool","","A boolean literal: `true` or `false`.",76,null],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",76,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",77,null],[13,"Raw","","A raw string like `r##\"data\"##`.",77,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",null,null],[13,"Paren","","",78,null],[13,"Brace","","",78,null],[13,"Bracket","","",78,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,null],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",80,null],[13,"Sub","","The `-` operator (subtraction)",80,null],[13,"Mul","","The `*` operator (multiplication)",80,null],[13,"Div","","The `/` operator (division)",80,null],[13,"Rem","","The `%` operator (modulus)",80,null],[13,"And","","The `&&` operator (logical and)",80,null],[13,"Or","","The `||` operator (logical or)",80,null],[13,"BitXor","","The `^` operator (bitwise xor)",80,null],[13,"BitAnd","","The `&` operator (bitwise and)",80,null],[13,"BitOr","","The `|` operator (bitwise or)",80,null],[13,"Shl","","The `<<` operator (shift left)",80,null],[13,"Shr","","The `>>` operator (shift right)",80,null],[13,"Eq","","The `==` operator (equality)",80,null],[13,"Lt","","The `<` operator (less than)",80,null],[13,"Le","","The `<=` operator (less than or equal to)",80,null],[13,"Ne","","The `!=` operator (not equal to)",80,null],[13,"Ge","","The `>=` operator (greater than or equal to)",80,null],[13,"Gt","","The `>` operator (greater than)",80,null],[13,"AddEq","","The `+=` operator",80,null],[13,"SubEq","","The `-=` operator",80,null],[13,"MulEq","","The `*=` operator",80,null],[13,"DivEq","","The `/=` operator",80,null],[13,"RemEq","","The `%=` operator",80,null],[13,"BitXorEq","","The `^=` operator",80,null],[13,"BitAndEq","","The `&=` operator",80,null],[13,"BitOrEq","","The `|=` operator",80,null],[13,"ShlEq","","The `<<=` operator",80,null],[13,"ShrEq","","The `>>=` operator",80,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",81,null],[13,"Not","","The `!` operator for logical inversion",81,null],[13,"Neg","","The `-` operator for negation",81,null],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",null,null],[13,"Named","","Argument given a name.",82,null],[13,"Wild","","Argument not given a name, matched with `_`.",82,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",83,null],[13,"Type","","A particular type is returned.",83,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,null],[13,"Array","","A fixed size array type: `[T; n]`.",84,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,null],[13,"Never","","The never type: `!`.",84,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",84,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",84,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",84,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,null],[13,"Group","","A type contained within invisible delimiters.",84,null],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",84,null],[13,"Macro","","A macro in the type position.",84,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",null,null],[13,"Lifetime","","A lifetime argument.",85,null],[13,"Type","","A type argument.",85,null],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",85,null],[13,"Const","","A const expression. Must be inside of a block.",85,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",null,null],[13,"None","","",86,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",null,{"i":[{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",null,{"i":[{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",null,{"i":[{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"0","","",87,null],[3,"Apostrophe","","`'`",null,null],[12,"0","","",88,null],[3,"Add","","`+`",null,null],[12,"0","","",89,null],[3,"AddEq","","`+=`",null,null],[12,"0","","",90,null],[3,"And","","`&`",null,null],[12,"0","","",91,null],[3,"AndAnd","","`&&`",null,null],[12,"0","","",92,null],[3,"AndEq","","`&=`",null,null],[12,"0","","",93,null],[3,"At","","`@`",null,null],[12,"0","","",94,null],[3,"Bang","","`!`",null,null],[12,"0","","",95,null],[3,"Caret","","`^`",null,null],[12,"0","","",96,null],[3,"CaretEq","","`^=`",null,null],[12,"0","","",97,null],[3,"Colon","","`:`",null,null],[12,"0","","",98,null],[3,"Colon2","","`::`",null,null],[12,"0","","",99,null],[3,"Comma","","`,`",null,null],[12,"0","","",100,null],[3,"Div","","`/`",null,null],[12,"0","","",101,null],[3,"DivEq","","`/=`",null,null],[12,"0","","",102,null],[3,"Dollar","","`$`",null,null],[12,"0","","",103,null],[3,"Dot","","`.`",null,null],[12,"0","","",104,null],[3,"Dot2","","`..`",null,null],[12,"0","","",105,null],[3,"Dot3","","`...`",null,null],[12,"0","","",106,null],[3,"DotDotEq","","`..=`",null,null],[12,"0","","",107,null],[3,"Eq","","`=`",null,null],[12,"0","","",108,null],[3,"EqEq","","`==`",null,null],[12,"0","","",109,null],[3,"Ge","","`>=`",null,null],[12,"0","","",110,null],[3,"Gt","","`>`",null,null],[12,"0","","",111,null],[3,"Le","","`<=`",null,null],[12,"0","","",112,null],[3,"Lt","","`<`",null,null],[12,"0","","",113,null],[3,"MulEq","","`*=`",null,null],[12,"0","","",114,null],[3,"Ne","","`!=`",null,null],[12,"0","","",115,null],[3,"Or","","`|`",null,null],[12,"0","","",116,null],[3,"OrEq","","`|=`",null,null],[12,"0","","",117,null],[3,"OrOr","","`||`",null,null],[12,"0","","",118,null],[3,"Pound","","`#`",null,null],[12,"0","","",119,null],[3,"Question","","`?`",null,null],[12,"0","","",120,null],[3,"RArrow","","`->`",null,null],[12,"0","","",121,null],[3,"LArrow","","`<-`",null,null],[12,"0","","",122,null],[3,"Rem","","`%`",null,null],[12,"0","","",123,null],[3,"RemEq","","`%=`",null,null],[12,"0","","",124,null],[3,"FatArrow","","`=>`",null,null],[12,"0","","",125,null],[3,"Semi","","`;`",null,null],[12,"0","","",126,null],[3,"Shl","","`<<`",null,null],[12,"0","","",127,null],[3,"ShlEq","","`<<=`",null,null],[12,"0","","",128,null],[3,"Shr","","`>>`",null,null],[12,"0","","",129,null],[3,"ShrEq","","`>>=`",null,null],[12,"0","","",130,null],[3,"Star","","`*`",null,null],[12,"0","","",131,null],[3,"Sub","","`-`",null,null],[12,"0","","",132,null],[3,"SubEq","","`-=`",null,null],[12,"0","","",133,null],[3,"Brace","","`{...}`",null,null],[12,"0","","",134,null],[3,"Bracket","","`[...]`",null,null],[12,"0","","",135,null],[3,"Paren","","`(...)`",null,null],[12,"0","","",136,null],[3,"Group","","None-delimited group",null,null],[12,"0","","",137,null],[3,"As","","`as`",null,null],[12,"0","","",138,null],[3,"Async","","`async`",null,null],[12,"0","","",139,null],[3,"Auto","","`auto`",null,null],[12,"0","","",140,null],[3,"Box","","`box`",null,null],[12,"0","","",141,null],[3,"Break","","`break`",null,null],[12,"0","","",142,null],[3,"CapSelf","","`Self`",null,null],[12,"0","","",143,null],[3,"Catch","","`catch`",null,null],[12,"0","","",144,null],[3,"Const","","`const`",null,null],[12,"0","","",145,null],[3,"Continue","","`continue`",null,null],[12,"0","","",146,null],[3,"Crate","","`crate`",null,null],[12,"0","","",147,null],[3,"Default","","`default`",null,null],[12,"0","","",148,null],[3,"Do","","`do`",null,null],[12,"0","","",149,null],[3,"Dyn","","`dyn`",null,null],[12,"0","","",150,null],[3,"Else","","`else`",null,null],[12,"0","","",151,null],[3,"Enum","","`enum`",null,null],[12,"0","","",152,null],[3,"Extern","","`extern`",null,null],[12,"0","","",153,null],[3,"Fn","","`fn`",null,null],[12,"0","","",154,null],[3,"For","","`for`",null,null],[12,"0","","",155,null],[3,"If","","`if`",null,null],[12,"0","","",156,null],[3,"Impl","","`impl`",null,null],[12,"0","","",157,null],[3,"In","","`in`",null,null],[12,"0","","",158,null],[3,"Let","","`let`",null,null],[12,"0","","",159,null],[3,"Loop","","`loop`",null,null],[12,"0","","",160,null],[3,"Macro","","`macro`",null,null],[12,"0","","",161,null],[3,"Match","","`match`",null,null],[12,"0","","",162,null],[3,"Mod","","`mod`",null,null],[12,"0","","",163,null],[3,"Move","","`move`",null,null],[12,"0","","",164,null],[3,"Mut","","`mut`",null,null],[12,"0","","",165,null],[3,"Pub","","`pub`",null,null],[12,"0","","",166,null],[3,"Ref","","`ref`",null,null],[12,"0","","",167,null],[3,"Return","","`return`",null,null],[12,"0","","",168,null],[3,"Self_","","`self`",null,null],[12,"0","","",169,null],[3,"Static","","`static`",null,null],[12,"0","","",170,null],[3,"Struct","","`struct`",null,null],[12,"0","","",171,null],[3,"Super","","`super`",null,null],[12,"0","","",172,null],[3,"Trait","","`trait`",null,null],[12,"0","","",173,null],[3,"Type","","`type`",null,null],[12,"0","","",174,null],[3,"Union","","`union`",null,null],[12,"0","","",175,null],[3,"Unsafe","","`unsafe`",null,null],[12,"0","","",176,null],[3,"Use","","`use`",null,null],[12,"0","","",177,null],[3,"Where","","`where`",null,null],[12,"0","","",178,null],[3,"While","","`while`",null,null],[12,"0","","",179,null],[3,"Yield","","`yield`",null,null],[12,"0","","",180,null],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"underscore"}}],[11,"new","","",87,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",87,{"o":{"n":"self"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",87,{"i":[{"n":"self"},{"n":"underscore"}],"o":{"n":"bool"}}],[11,"hash","","",87,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",87,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"to_tokens","","",87,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",87,{"i":[{"n":"cursor"}],"o":{"g":["underscore"],"n":"presult"}}],[11,"description","","",87,{"o":{"g":["str"],"n":"option"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"apostrophe"}}],[11,"new","","",88,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",88,{"o":{"n":"self"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",88,{"i":[{"n":"self"},{"n":"apostrophe"}],"o":{"n":"bool"}}],[11,"hash","","",88,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",88,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"to_tokens","","",88,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",88,{"i":[{"n":"cursor"}],"o":{"g":["apostrophe"],"n":"presult"}}],[11,"description","","",88,{"o":{"g":["str"],"n":"option"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"add"}}],[11,"new","","",89,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",89,{"o":{"n":"self"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",89,{"i":[{"n":"self"},{"n":"add"}],"o":{"n":"bool"}}],[11,"hash","","",89,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",89,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"addeq"}}],[11,"new","","",90,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",90,{"o":{"n":"self"}}],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",90,{"i":[{"n":"self"},{"n":"addeq"}],"o":{"n":"bool"}}],[11,"hash","","",90,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",90,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"and"}}],[11,"new","","",91,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",91,{"o":{"n":"self"}}],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",91,{"i":[{"n":"self"},{"n":"and"}],"o":{"n":"bool"}}],[11,"hash","","",91,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",91,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"andand"}}],[11,"new","","",92,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",92,{"o":{"n":"self"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",92,{"i":[{"n":"self"},{"n":"andand"}],"o":{"n":"bool"}}],[11,"hash","","",92,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",92,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"andeq"}}],[11,"new","","",93,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",93,{"o":{"n":"self"}}],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",93,{"i":[{"n":"self"},{"n":"andeq"}],"o":{"n":"bool"}}],[11,"hash","","",93,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",93,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"at"}}],[11,"new","","",94,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",94,{"o":{"n":"self"}}],[11,"fmt","","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",94,{"i":[{"n":"self"},{"n":"at"}],"o":{"n":"bool"}}],[11,"hash","","",94,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",94,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"bang"}}],[11,"new","","",95,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",95,{"o":{"n":"self"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",95,{"i":[{"n":"self"},{"n":"bang"}],"o":{"n":"bool"}}],[11,"hash","","",95,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",95,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"caret"}}],[11,"new","","",96,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",96,{"o":{"n":"self"}}],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",96,{"i":[{"n":"self"},{"n":"caret"}],"o":{"n":"bool"}}],[11,"hash","","",96,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",96,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"careteq"}}],[11,"new","","",97,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",97,{"o":{"n":"self"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",97,{"i":[{"n":"self"},{"n":"careteq"}],"o":{"n":"bool"}}],[11,"hash","","",97,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",97,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"colon"}}],[11,"new","","",98,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",98,{"o":{"n":"self"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",98,{"i":[{"n":"self"},{"n":"colon"}],"o":{"n":"bool"}}],[11,"hash","","",98,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",98,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"colon2"}}],[11,"new","","",99,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",99,{"o":{"n":"self"}}],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",99,{"i":[{"n":"self"},{"n":"colon2"}],"o":{"n":"bool"}}],[11,"hash","","",99,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",99,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"comma"}}],[11,"new","","",100,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",100,{"o":{"n":"self"}}],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",100,{"i":[{"n":"self"},{"n":"comma"}],"o":{"n":"bool"}}],[11,"hash","","",100,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",100,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"div"}}],[11,"new","","",101,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",101,{"o":{"n":"self"}}],[11,"fmt","","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",101,{"i":[{"n":"self"},{"n":"div"}],"o":{"n":"bool"}}],[11,"hash","","",101,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",101,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"diveq"}}],[11,"new","","",102,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",102,{"o":{"n":"self"}}],[11,"fmt","","",102,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",102,{"i":[{"n":"self"},{"n":"diveq"}],"o":{"n":"bool"}}],[11,"hash","","",102,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",102,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"dollar"}}],[11,"new","","",103,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",103,{"o":{"n":"self"}}],[11,"fmt","","",103,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",103,{"i":[{"n":"self"},{"n":"dollar"}],"o":{"n":"bool"}}],[11,"hash","","",103,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",103,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"dot"}}],[11,"new","","",104,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",104,{"o":{"n":"self"}}],[11,"fmt","","",104,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",104,{"i":[{"n":"self"},{"n":"dot"}],"o":{"n":"bool"}}],[11,"hash","","",104,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",104,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"dot2"}}],[11,"new","","",105,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",105,{"o":{"n":"self"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",105,{"i":[{"n":"self"},{"n":"dot2"}],"o":{"n":"bool"}}],[11,"hash","","",105,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",105,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"dot3"}}],[11,"new","","",106,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",106,{"o":{"n":"self"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",106,{"i":[{"n":"self"},{"n":"dot3"}],"o":{"n":"bool"}}],[11,"hash","","",106,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",106,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"dotdoteq"}}],[11,"new","","",107,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",107,{"o":{"n":"self"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",107,{"i":[{"n":"self"},{"n":"dotdoteq"}],"o":{"n":"bool"}}],[11,"hash","","",107,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",107,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"eq"}}],[11,"new","","",108,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",108,{"o":{"n":"self"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",108,{"i":[{"n":"self"},{"n":"eq"}],"o":{"n":"bool"}}],[11,"hash","","",108,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",108,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"eqeq"}}],[11,"new","","",109,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",109,{"o":{"n":"self"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",109,{"i":[{"n":"self"},{"n":"eqeq"}],"o":{"n":"bool"}}],[11,"hash","","",109,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",109,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"ge"}}],[11,"new","","",110,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",110,{"o":{"n":"self"}}],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",110,{"i":[{"n":"self"},{"n":"ge"}],"o":{"n":"bool"}}],[11,"hash","","",110,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",110,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"gt"}}],[11,"new","","",111,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",111,{"o":{"n":"self"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",111,{"i":[{"n":"self"},{"n":"gt"}],"o":{"n":"bool"}}],[11,"hash","","",111,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",111,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"le"}}],[11,"new","","",112,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",112,{"o":{"n":"self"}}],[11,"fmt","","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",112,{"i":[{"n":"self"},{"n":"le"}],"o":{"n":"bool"}}],[11,"hash","","",112,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",112,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"lt"}}],[11,"new","","",113,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",113,{"o":{"n":"self"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",113,{"i":[{"n":"self"},{"n":"lt"}],"o":{"n":"bool"}}],[11,"hash","","",113,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",113,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"muleq"}}],[11,"new","","",114,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",114,{"o":{"n":"self"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",114,{"i":[{"n":"self"},{"n":"muleq"}],"o":{"n":"bool"}}],[11,"hash","","",114,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",114,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"ne"}}],[11,"new","","",115,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",115,{"o":{"n":"self"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",115,{"i":[{"n":"self"},{"n":"ne"}],"o":{"n":"bool"}}],[11,"hash","","",115,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",115,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"or"}}],[11,"new","","",116,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",116,{"o":{"n":"self"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",116,{"i":[{"n":"self"},{"n":"or"}],"o":{"n":"bool"}}],[11,"hash","","",116,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",116,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"oreq"}}],[11,"new","","",117,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",117,{"o":{"n":"self"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",117,{"i":[{"n":"self"},{"n":"oreq"}],"o":{"n":"bool"}}],[11,"hash","","",117,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",117,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"oror"}}],[11,"new","","",118,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",118,{"o":{"n":"self"}}],[11,"fmt","","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",118,{"i":[{"n":"self"},{"n":"oror"}],"o":{"n":"bool"}}],[11,"hash","","",118,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",118,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"pound"}}],[11,"new","","",119,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",119,{"o":{"n":"self"}}],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",119,{"i":[{"n":"self"},{"n":"pound"}],"o":{"n":"bool"}}],[11,"hash","","",119,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",119,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"question"}}],[11,"new","","",120,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",120,{"o":{"n":"self"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",120,{"i":[{"n":"self"},{"n":"question"}],"o":{"n":"bool"}}],[11,"hash","","",120,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",120,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"rarrow"}}],[11,"new","","",121,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",121,{"o":{"n":"self"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",121,{"i":[{"n":"self"},{"n":"rarrow"}],"o":{"n":"bool"}}],[11,"hash","","",121,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",121,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"larrow"}}],[11,"new","","",122,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",122,{"o":{"n":"self"}}],[11,"fmt","","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",122,{"i":[{"n":"self"},{"n":"larrow"}],"o":{"n":"bool"}}],[11,"hash","","",122,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",122,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"rem"}}],[11,"new","","",123,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",123,{"o":{"n":"self"}}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",123,{"i":[{"n":"self"},{"n":"rem"}],"o":{"n":"bool"}}],[11,"hash","","",123,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",123,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"remeq"}}],[11,"new","","",124,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",124,{"o":{"n":"self"}}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",124,{"i":[{"n":"self"},{"n":"remeq"}],"o":{"n":"bool"}}],[11,"hash","","",124,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",124,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"fatarrow"}}],[11,"new","","",125,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",125,{"o":{"n":"self"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",125,{"i":[{"n":"self"},{"n":"fatarrow"}],"o":{"n":"bool"}}],[11,"hash","","",125,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",125,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"semi"}}],[11,"new","","",126,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",126,{"o":{"n":"self"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",126,{"i":[{"n":"self"},{"n":"semi"}],"o":{"n":"bool"}}],[11,"hash","","",126,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",126,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"shl"}}],[11,"new","","",127,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",127,{"o":{"n":"self"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",127,{"i":[{"n":"self"},{"n":"shl"}],"o":{"n":"bool"}}],[11,"hash","","",127,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",127,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"shleq"}}],[11,"new","","",128,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",128,{"o":{"n":"self"}}],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",128,{"i":[{"n":"self"},{"n":"shleq"}],"o":{"n":"bool"}}],[11,"hash","","",128,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",128,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"shr"}}],[11,"new","","",129,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",129,{"o":{"n":"self"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",129,{"i":[{"n":"self"},{"n":"shr"}],"o":{"n":"bool"}}],[11,"hash","","",129,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",129,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"shreq"}}],[11,"new","","",130,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",130,{"o":{"n":"self"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",130,{"i":[{"n":"self"},{"n":"shreq"}],"o":{"n":"bool"}}],[11,"hash","","",130,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",130,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"star"}}],[11,"new","","",131,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",131,{"o":{"n":"self"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",131,{"i":[{"n":"self"},{"n":"star"}],"o":{"n":"bool"}}],[11,"hash","","",131,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",131,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",132,{"i":[{"n":"self"}],"o":{"n":"sub"}}],[11,"new","","",132,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",132,{"o":{"n":"self"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",132,{"i":[{"n":"self"},{"n":"sub"}],"o":{"n":"bool"}}],[11,"hash","","",132,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",132,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"subeq"}}],[11,"new","","",133,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"default","","",133,{"o":{"n":"self"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",133,{"i":[{"n":"self"},{"n":"subeq"}],"o":{"n":"bool"}}],[11,"hash","","",133,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",133,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"to_tokens","","",89,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",89,{"i":[{"n":"cursor"}],"o":{"g":["add"],"n":"presult"}}],[11,"description","","",89,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",90,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",90,{"i":[{"n":"cursor"}],"o":{"g":["addeq"],"n":"presult"}}],[11,"description","","",90,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",91,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",91,{"i":[{"n":"cursor"}],"o":{"g":["and"],"n":"presult"}}],[11,"description","","",91,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",92,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",92,{"i":[{"n":"cursor"}],"o":{"g":["andand"],"n":"presult"}}],[11,"description","","",92,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",93,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",93,{"i":[{"n":"cursor"}],"o":{"g":["andeq"],"n":"presult"}}],[11,"description","","",93,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",94,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",94,{"i":[{"n":"cursor"}],"o":{"g":["at"],"n":"presult"}}],[11,"description","","",94,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",95,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",95,{"i":[{"n":"cursor"}],"o":{"g":["bang"],"n":"presult"}}],[11,"description","","",95,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",96,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",96,{"i":[{"n":"cursor"}],"o":{"g":["caret"],"n":"presult"}}],[11,"description","","",96,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",97,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",97,{"i":[{"n":"cursor"}],"o":{"g":["careteq"],"n":"presult"}}],[11,"description","","",97,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",98,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",98,{"i":[{"n":"cursor"}],"o":{"g":["colon"],"n":"presult"}}],[11,"description","","",98,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",99,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",99,{"i":[{"n":"cursor"}],"o":{"g":["colon2"],"n":"presult"}}],[11,"description","","",99,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",100,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",100,{"i":[{"n":"cursor"}],"o":{"g":["comma"],"n":"presult"}}],[11,"description","","",100,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",101,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",101,{"i":[{"n":"cursor"}],"o":{"g":["div"],"n":"presult"}}],[11,"description","","",101,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",102,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",102,{"i":[{"n":"cursor"}],"o":{"g":["diveq"],"n":"presult"}}],[11,"description","","",102,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",103,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",103,{"i":[{"n":"cursor"}],"o":{"g":["dollar"],"n":"presult"}}],[11,"description","","",103,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",104,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",104,{"i":[{"n":"cursor"}],"o":{"g":["dot"],"n":"presult"}}],[11,"description","","",104,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",105,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",105,{"i":[{"n":"cursor"}],"o":{"g":["dot2"],"n":"presult"}}],[11,"description","","",105,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",106,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",106,{"i":[{"n":"cursor"}],"o":{"g":["dot3"],"n":"presult"}}],[11,"description","","",106,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",107,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",107,{"i":[{"n":"cursor"}],"o":{"g":["dotdoteq"],"n":"presult"}}],[11,"description","","",107,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",108,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",108,{"i":[{"n":"cursor"}],"o":{"g":["eq"],"n":"presult"}}],[11,"description","","",108,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",109,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",109,{"i":[{"n":"cursor"}],"o":{"g":["eqeq"],"n":"presult"}}],[11,"description","","",109,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",110,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",110,{"i":[{"n":"cursor"}],"o":{"g":["ge"],"n":"presult"}}],[11,"description","","",110,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",111,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",111,{"i":[{"n":"cursor"}],"o":{"g":["gt"],"n":"presult"}}],[11,"description","","",111,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",112,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",112,{"i":[{"n":"cursor"}],"o":{"g":["le"],"n":"presult"}}],[11,"description","","",112,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",113,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",113,{"i":[{"n":"cursor"}],"o":{"g":["lt"],"n":"presult"}}],[11,"description","","",113,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",114,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",114,{"i":[{"n":"cursor"}],"o":{"g":["muleq"],"n":"presult"}}],[11,"description","","",114,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",115,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",115,{"i":[{"n":"cursor"}],"o":{"g":["ne"],"n":"presult"}}],[11,"description","","",115,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",116,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",116,{"i":[{"n":"cursor"}],"o":{"g":["or"],"n":"presult"}}],[11,"description","","",116,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",117,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",117,{"i":[{"n":"cursor"}],"o":{"g":["oreq"],"n":"presult"}}],[11,"description","","",117,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",118,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",118,{"i":[{"n":"cursor"}],"o":{"g":["oror"],"n":"presult"}}],[11,"description","","",118,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",119,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",119,{"i":[{"n":"cursor"}],"o":{"g":["pound"],"n":"presult"}}],[11,"description","","",119,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",120,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",120,{"i":[{"n":"cursor"}],"o":{"g":["question"],"n":"presult"}}],[11,"description","","",120,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",121,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",121,{"i":[{"n":"cursor"}],"o":{"g":["rarrow"],"n":"presult"}}],[11,"description","","",121,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",122,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",122,{"i":[{"n":"cursor"}],"o":{"g":["larrow"],"n":"presult"}}],[11,"description","","",122,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",123,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",123,{"i":[{"n":"cursor"}],"o":{"g":["rem"],"n":"presult"}}],[11,"description","","",123,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",124,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",124,{"i":[{"n":"cursor"}],"o":{"g":["remeq"],"n":"presult"}}],[11,"description","","",124,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",125,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",125,{"i":[{"n":"cursor"}],"o":{"g":["fatarrow"],"n":"presult"}}],[11,"description","","",125,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",126,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",126,{"i":[{"n":"cursor"}],"o":{"g":["semi"],"n":"presult"}}],[11,"description","","",126,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",127,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",127,{"i":[{"n":"cursor"}],"o":{"g":["shl"],"n":"presult"}}],[11,"description","","",127,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",128,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",128,{"i":[{"n":"cursor"}],"o":{"g":["shleq"],"n":"presult"}}],[11,"description","","",128,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",129,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",129,{"i":[{"n":"cursor"}],"o":{"g":["shr"],"n":"presult"}}],[11,"description","","",129,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",130,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",130,{"i":[{"n":"cursor"}],"o":{"g":["shreq"],"n":"presult"}}],[11,"description","","",130,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",131,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",131,{"i":[{"n":"cursor"}],"o":{"g":["star"],"n":"presult"}}],[11,"description","","",131,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",132,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",132,{"i":[{"n":"cursor"}],"o":{"g":["sub"],"n":"presult"}}],[11,"description","","",132,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",133,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",133,{"i":[{"n":"cursor"}],"o":{"g":["subeq"],"n":"presult"}}],[11,"description","","",133,{"o":{"g":["str"],"n":"option"}}],[11,"clone","","",134,{"i":[{"n":"self"}],"o":{"n":"brace"}}],[11,"default","","",134,{"o":{"n":"self"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",134,{"i":[{"n":"self"},{"n":"brace"}],"o":{"n":"bool"}}],[11,"hash","","",134,{"i":[{"n":"self"},{"n":"h"}]}],[11,"surround","","",134,{"i":[{"n":"self"},{"n":"tokenstream"},{"n":"f"}]}],[11,"parse","","",134,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",134,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",135,{"i":[{"n":"self"}],"o":{"n":"bracket"}}],[11,"default","","",135,{"o":{"n":"self"}}],[11,"fmt","","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",135,{"i":[{"n":"self"},{"n":"bracket"}],"o":{"n":"bool"}}],[11,"hash","","",135,{"i":[{"n":"self"},{"n":"h"}]}],[11,"surround","","",135,{"i":[{"n":"self"},{"n":"tokenstream"},{"n":"f"}]}],[11,"parse","","",135,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",135,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",136,{"i":[{"n":"self"}],"o":{"n":"paren"}}],[11,"default","","",136,{"o":{"n":"self"}}],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",136,{"i":[{"n":"self"},{"n":"paren"}],"o":{"n":"bool"}}],[11,"hash","","",136,{"i":[{"n":"self"},{"n":"h"}]}],[11,"surround","","",136,{"i":[{"n":"self"},{"n":"tokenstream"},{"n":"f"}]}],[11,"parse","","",136,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",136,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",137,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"default","","",137,{"o":{"n":"self"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",137,{"i":[{"n":"self"},{"n":"group"}],"o":{"n":"bool"}}],[11,"hash","","",137,{"i":[{"n":"self"},{"n":"h"}]}],[11,"surround","","",137,{"i":[{"n":"self"},{"n":"tokenstream"},{"n":"f"}]}],[11,"parse","","",137,{"i":[{"n":"cursor"},{"n":"f"}],"o":{"n":"presult"}}],[11,"from","","",137,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"as"}}],[11,"default","","",138,{"o":{"n":"self"}}],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",138,{"i":[{"n":"self"},{"n":"as"}],"o":{"n":"bool"}}],[11,"hash","","",138,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",138,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",138,{"i":[{"n":"cursor"}],"o":{"g":["as"],"n":"presult"}}],[11,"description","","",138,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",138,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"async"}}],[11,"default","","",139,{"o":{"n":"self"}}],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",139,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"hash","","",139,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",139,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",139,{"i":[{"n":"cursor"}],"o":{"g":["async"],"n":"presult"}}],[11,"description","","",139,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",139,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",140,{"i":[{"n":"self"}],"o":{"n":"auto"}}],[11,"default","","",140,{"o":{"n":"self"}}],[11,"fmt","","",140,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",140,{"i":[{"n":"self"},{"n":"auto"}],"o":{"n":"bool"}}],[11,"hash","","",140,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",140,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",140,{"i":[{"n":"cursor"}],"o":{"g":["auto"],"n":"presult"}}],[11,"description","","",140,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",140,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",141,{"i":[{"n":"self"}],"o":{"n":"box"}}],[11,"default","","",141,{"o":{"n":"self"}}],[11,"fmt","","",141,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",141,{"i":[{"n":"self"},{"n":"box"}],"o":{"n":"bool"}}],[11,"hash","","",141,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",141,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",141,{"i":[{"n":"cursor"}],"o":{"g":["box"],"n":"presult"}}],[11,"description","","",141,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",141,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"break"}}],[11,"default","","",142,{"o":{"n":"self"}}],[11,"fmt","","",142,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",142,{"i":[{"n":"self"},{"n":"break"}],"o":{"n":"bool"}}],[11,"hash","","",142,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",142,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",142,{"i":[{"n":"cursor"}],"o":{"g":["break"],"n":"presult"}}],[11,"description","","",142,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",142,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",143,{"i":[{"n":"self"}],"o":{"n":"capself"}}],[11,"default","","",143,{"o":{"n":"self"}}],[11,"fmt","","",143,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",143,{"i":[{"n":"self"},{"n":"capself"}],"o":{"n":"bool"}}],[11,"hash","","",143,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",143,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",143,{"i":[{"n":"cursor"}],"o":{"g":["capself"],"n":"presult"}}],[11,"description","","",143,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",143,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",144,{"i":[{"n":"self"}],"o":{"n":"catch"}}],[11,"default","","",144,{"o":{"n":"self"}}],[11,"fmt","","",144,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",144,{"i":[{"n":"self"},{"n":"catch"}],"o":{"n":"bool"}}],[11,"hash","","",144,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",144,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",144,{"i":[{"n":"cursor"}],"o":{"g":["catch"],"n":"presult"}}],[11,"description","","",144,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",144,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",145,{"i":[{"n":"self"}],"o":{"n":"const"}}],[11,"default","","",145,{"o":{"n":"self"}}],[11,"fmt","","",145,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",145,{"i":[{"n":"self"},{"n":"const"}],"o":{"n":"bool"}}],[11,"hash","","",145,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",145,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",145,{"i":[{"n":"cursor"}],"o":{"g":["const"],"n":"presult"}}],[11,"description","","",145,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",145,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",146,{"i":[{"n":"self"}],"o":{"n":"continue"}}],[11,"default","","",146,{"o":{"n":"self"}}],[11,"fmt","","",146,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",146,{"i":[{"n":"self"},{"n":"continue"}],"o":{"n":"bool"}}],[11,"hash","","",146,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",146,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",146,{"i":[{"n":"cursor"}],"o":{"g":["continue"],"n":"presult"}}],[11,"description","","",146,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",146,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",147,{"i":[{"n":"self"}],"o":{"n":"crate"}}],[11,"default","","",147,{"o":{"n":"self"}}],[11,"fmt","","",147,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",147,{"i":[{"n":"self"},{"n":"crate"}],"o":{"n":"bool"}}],[11,"hash","","",147,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",147,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",147,{"i":[{"n":"cursor"}],"o":{"g":["crate"],"n":"presult"}}],[11,"description","","",147,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",147,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",148,{"i":[{"n":"self"}],"o":{"n":"default"}}],[11,"default","","",148,{"o":{"n":"self"}}],[11,"fmt","","",148,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",148,{"i":[{"n":"self"},{"n":"default"}],"o":{"n":"bool"}}],[11,"hash","","",148,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",148,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",148,{"i":[{"n":"cursor"}],"o":{"g":["default"],"n":"presult"}}],[11,"description","","",148,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",148,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",149,{"i":[{"n":"self"}],"o":{"n":"do"}}],[11,"default","","",149,{"o":{"n":"self"}}],[11,"fmt","","",149,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",149,{"i":[{"n":"self"},{"n":"do"}],"o":{"n":"bool"}}],[11,"hash","","",149,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",149,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",149,{"i":[{"n":"cursor"}],"o":{"g":["do"],"n":"presult"}}],[11,"description","","",149,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",149,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",150,{"i":[{"n":"self"}],"o":{"n":"dyn"}}],[11,"default","","",150,{"o":{"n":"self"}}],[11,"fmt","","",150,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",150,{"i":[{"n":"self"},{"n":"dyn"}],"o":{"n":"bool"}}],[11,"hash","","",150,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",150,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",150,{"i":[{"n":"cursor"}],"o":{"g":["dyn"],"n":"presult"}}],[11,"description","","",150,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",150,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",151,{"i":[{"n":"self"}],"o":{"n":"else"}}],[11,"default","","",151,{"o":{"n":"self"}}],[11,"fmt","","",151,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",151,{"i":[{"n":"self"},{"n":"else"}],"o":{"n":"bool"}}],[11,"hash","","",151,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",151,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",151,{"i":[{"n":"cursor"}],"o":{"g":["else"],"n":"presult"}}],[11,"description","","",151,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",151,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",152,{"i":[{"n":"self"}],"o":{"n":"enum"}}],[11,"default","","",152,{"o":{"n":"self"}}],[11,"fmt","","",152,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",152,{"i":[{"n":"self"},{"n":"enum"}],"o":{"n":"bool"}}],[11,"hash","","",152,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",152,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",152,{"i":[{"n":"cursor"}],"o":{"g":["enum"],"n":"presult"}}],[11,"description","","",152,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",152,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",153,{"i":[{"n":"self"}],"o":{"n":"extern"}}],[11,"default","","",153,{"o":{"n":"self"}}],[11,"fmt","","",153,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",153,{"i":[{"n":"self"},{"n":"extern"}],"o":{"n":"bool"}}],[11,"hash","","",153,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",153,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",153,{"i":[{"n":"cursor"}],"o":{"g":["extern"],"n":"presult"}}],[11,"description","","",153,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",153,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",154,{"i":[{"n":"self"}],"o":{"n":"fn"}}],[11,"default","","",154,{"o":{"n":"self"}}],[11,"fmt","","",154,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",154,{"i":[{"n":"self"},{"n":"fn"}],"o":{"n":"bool"}}],[11,"hash","","",154,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",154,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",154,{"i":[{"n":"cursor"}],"o":{"g":["fn"],"n":"presult"}}],[11,"description","","",154,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",154,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",155,{"i":[{"n":"self"}],"o":{"n":"for"}}],[11,"default","","",155,{"o":{"n":"self"}}],[11,"fmt","","",155,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",155,{"i":[{"n":"self"},{"n":"for"}],"o":{"n":"bool"}}],[11,"hash","","",155,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",155,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",155,{"i":[{"n":"cursor"}],"o":{"g":["for"],"n":"presult"}}],[11,"description","","",155,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",155,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",156,{"i":[{"n":"self"}],"o":{"n":"if"}}],[11,"default","","",156,{"o":{"n":"self"}}],[11,"fmt","","",156,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",156,{"i":[{"n":"self"},{"n":"if"}],"o":{"n":"bool"}}],[11,"hash","","",156,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",156,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",156,{"i":[{"n":"cursor"}],"o":{"g":["if"],"n":"presult"}}],[11,"description","","",156,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",156,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",157,{"i":[{"n":"self"}],"o":{"n":"impl"}}],[11,"default","","",157,{"o":{"n":"self"}}],[11,"fmt","","",157,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",157,{"i":[{"n":"self"},{"n":"impl"}],"o":{"n":"bool"}}],[11,"hash","","",157,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",157,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",157,{"i":[{"n":"cursor"}],"o":{"g":["impl"],"n":"presult"}}],[11,"description","","",157,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",157,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",158,{"i":[{"n":"self"}],"o":{"n":"in"}}],[11,"default","","",158,{"o":{"n":"self"}}],[11,"fmt","","",158,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",158,{"i":[{"n":"self"},{"n":"in"}],"o":{"n":"bool"}}],[11,"hash","","",158,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",158,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",158,{"i":[{"n":"cursor"}],"o":{"g":["in"],"n":"presult"}}],[11,"description","","",158,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",158,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",159,{"i":[{"n":"self"}],"o":{"n":"let"}}],[11,"default","","",159,{"o":{"n":"self"}}],[11,"fmt","","",159,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",159,{"i":[{"n":"self"},{"n":"let"}],"o":{"n":"bool"}}],[11,"hash","","",159,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",159,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",159,{"i":[{"n":"cursor"}],"o":{"g":["let"],"n":"presult"}}],[11,"description","","",159,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",159,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",160,{"i":[{"n":"self"}],"o":{"n":"loop"}}],[11,"default","","",160,{"o":{"n":"self"}}],[11,"fmt","","",160,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",160,{"i":[{"n":"self"},{"n":"loop"}],"o":{"n":"bool"}}],[11,"hash","","",160,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",160,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",160,{"i":[{"n":"cursor"}],"o":{"g":["loop"],"n":"presult"}}],[11,"description","","",160,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",160,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",161,{"i":[{"n":"self"}],"o":{"n":"macro"}}],[11,"default","","",161,{"o":{"n":"self"}}],[11,"fmt","","",161,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",161,{"i":[{"n":"self"},{"n":"macro"}],"o":{"n":"bool"}}],[11,"hash","","",161,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",161,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",161,{"i":[{"n":"cursor"}],"o":{"g":["macro"],"n":"presult"}}],[11,"description","","",161,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",161,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",162,{"i":[{"n":"self"}],"o":{"n":"match"}}],[11,"default","","",162,{"o":{"n":"self"}}],[11,"fmt","","",162,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",162,{"i":[{"n":"self"},{"n":"match"}],"o":{"n":"bool"}}],[11,"hash","","",162,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",162,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",162,{"i":[{"n":"cursor"}],"o":{"g":["match"],"n":"presult"}}],[11,"description","","",162,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",162,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",163,{"i":[{"n":"self"}],"o":{"n":"mod"}}],[11,"default","","",163,{"o":{"n":"self"}}],[11,"fmt","","",163,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",163,{"i":[{"n":"self"},{"n":"mod"}],"o":{"n":"bool"}}],[11,"hash","","",163,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",163,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",163,{"i":[{"n":"cursor"}],"o":{"g":["mod"],"n":"presult"}}],[11,"description","","",163,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",163,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",164,{"i":[{"n":"self"}],"o":{"n":"move"}}],[11,"default","","",164,{"o":{"n":"self"}}],[11,"fmt","","",164,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",164,{"i":[{"n":"self"},{"n":"move"}],"o":{"n":"bool"}}],[11,"hash","","",164,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",164,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",164,{"i":[{"n":"cursor"}],"o":{"g":["move"],"n":"presult"}}],[11,"description","","",164,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",164,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",165,{"i":[{"n":"self"}],"o":{"n":"mut"}}],[11,"default","","",165,{"o":{"n":"self"}}],[11,"fmt","","",165,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",165,{"i":[{"n":"self"},{"n":"mut"}],"o":{"n":"bool"}}],[11,"hash","","",165,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",165,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",165,{"i":[{"n":"cursor"}],"o":{"g":["mut"],"n":"presult"}}],[11,"description","","",165,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",165,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",166,{"i":[{"n":"self"}],"o":{"n":"pub"}}],[11,"default","","",166,{"o":{"n":"self"}}],[11,"fmt","","",166,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",166,{"i":[{"n":"self"},{"n":"pub"}],"o":{"n":"bool"}}],[11,"hash","","",166,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",166,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",166,{"i":[{"n":"cursor"}],"o":{"g":["pub"],"n":"presult"}}],[11,"description","","",166,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",166,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",167,{"i":[{"n":"self"}],"o":{"n":"ref"}}],[11,"default","","",167,{"o":{"n":"self"}}],[11,"fmt","","",167,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",167,{"i":[{"n":"self"},{"n":"ref"}],"o":{"n":"bool"}}],[11,"hash","","",167,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",167,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",167,{"i":[{"n":"cursor"}],"o":{"g":["ref"],"n":"presult"}}],[11,"description","","",167,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",167,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",168,{"i":[{"n":"self"}],"o":{"n":"return"}}],[11,"default","","",168,{"o":{"n":"self"}}],[11,"fmt","","",168,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",168,{"i":[{"n":"self"},{"n":"return"}],"o":{"n":"bool"}}],[11,"hash","","",168,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",168,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",168,{"i":[{"n":"cursor"}],"o":{"g":["return"],"n":"presult"}}],[11,"description","","",168,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",168,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",169,{"i":[{"n":"self"}],"o":{"n":"self_"}}],[11,"default","","",169,{"o":{"n":"self"}}],[11,"fmt","","",169,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",169,{"i":[{"n":"self"},{"n":"self_"}],"o":{"n":"bool"}}],[11,"hash","","",169,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",169,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",169,{"i":[{"n":"cursor"}],"o":{"g":["self_"],"n":"presult"}}],[11,"description","","",169,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",169,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",170,{"i":[{"n":"self"}],"o":{"n":"static"}}],[11,"default","","",170,{"o":{"n":"self"}}],[11,"fmt","","",170,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",170,{"i":[{"n":"self"},{"n":"static"}],"o":{"n":"bool"}}],[11,"hash","","",170,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",170,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",170,{"i":[{"n":"cursor"}],"o":{"g":["static"],"n":"presult"}}],[11,"description","","",170,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",170,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",171,{"i":[{"n":"self"}],"o":{"n":"struct"}}],[11,"default","","",171,{"o":{"n":"self"}}],[11,"fmt","","",171,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",171,{"i":[{"n":"self"},{"n":"struct"}],"o":{"n":"bool"}}],[11,"hash","","",171,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",171,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",171,{"i":[{"n":"cursor"}],"o":{"g":["struct"],"n":"presult"}}],[11,"description","","",171,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",171,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",172,{"i":[{"n":"self"}],"o":{"n":"super"}}],[11,"default","","",172,{"o":{"n":"self"}}],[11,"fmt","","",172,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",172,{"i":[{"n":"self"},{"n":"super"}],"o":{"n":"bool"}}],[11,"hash","","",172,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",172,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",172,{"i":[{"n":"cursor"}],"o":{"g":["super"],"n":"presult"}}],[11,"description","","",172,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",172,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",173,{"i":[{"n":"self"}],"o":{"n":"trait"}}],[11,"default","","",173,{"o":{"n":"self"}}],[11,"fmt","","",173,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",173,{"i":[{"n":"self"},{"n":"trait"}],"o":{"n":"bool"}}],[11,"hash","","",173,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",173,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",173,{"i":[{"n":"cursor"}],"o":{"g":["trait"],"n":"presult"}}],[11,"description","","",173,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",173,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",174,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"default","","",174,{"o":{"n":"self"}}],[11,"fmt","","",174,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",174,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"hash","","",174,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",174,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",174,{"i":[{"n":"cursor"}],"o":{"g":["type"],"n":"presult"}}],[11,"description","","",174,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",174,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",175,{"i":[{"n":"self"}],"o":{"n":"union"}}],[11,"default","","",175,{"o":{"n":"self"}}],[11,"fmt","","",175,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",175,{"i":[{"n":"self"},{"n":"union"}],"o":{"n":"bool"}}],[11,"hash","","",175,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",175,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",175,{"i":[{"n":"cursor"}],"o":{"g":["union"],"n":"presult"}}],[11,"description","","",175,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",175,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",176,{"i":[{"n":"self"}],"o":{"n":"unsafe"}}],[11,"default","","",176,{"o":{"n":"self"}}],[11,"fmt","","",176,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",176,{"i":[{"n":"self"},{"n":"unsafe"}],"o":{"n":"bool"}}],[11,"hash","","",176,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",176,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",176,{"i":[{"n":"cursor"}],"o":{"g":["unsafe"],"n":"presult"}}],[11,"description","","",176,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",176,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",177,{"i":[{"n":"self"}],"o":{"n":"use"}}],[11,"default","","",177,{"o":{"n":"self"}}],[11,"fmt","","",177,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",177,{"i":[{"n":"self"},{"n":"use"}],"o":{"n":"bool"}}],[11,"hash","","",177,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",177,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",177,{"i":[{"n":"cursor"}],"o":{"g":["use"],"n":"presult"}}],[11,"description","","",177,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",177,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",178,{"i":[{"n":"self"}],"o":{"n":"where"}}],[11,"default","","",178,{"o":{"n":"self"}}],[11,"fmt","","",178,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",178,{"i":[{"n":"self"},{"n":"where"}],"o":{"n":"bool"}}],[11,"hash","","",178,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",178,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",178,{"i":[{"n":"cursor"}],"o":{"g":["where"],"n":"presult"}}],[11,"description","","",178,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",178,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",179,{"i":[{"n":"self"}],"o":{"n":"while"}}],[11,"default","","",179,{"o":{"n":"self"}}],[11,"fmt","","",179,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",179,{"i":[{"n":"self"},{"n":"while"}],"o":{"n":"bool"}}],[11,"hash","","",179,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",179,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",179,{"i":[{"n":"cursor"}],"o":{"g":["while"],"n":"presult"}}],[11,"description","","",179,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",179,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"clone","","",180,{"i":[{"n":"self"}],"o":{"n":"yield"}}],[11,"default","","",180,{"o":{"n":"self"}}],[11,"fmt","","",180,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",180,{"i":[{"n":"self"},{"n":"yield"}],"o":{"n":"bool"}}],[11,"hash","","",180,{"i":[{"n":"self"},{"n":"h"}]}],[11,"to_tokens","","",180,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",180,{"i":[{"n":"cursor"}],"o":{"g":["yield"],"n":"presult"}}],[11,"description","","",180,{"o":{"g":["str"],"n":"option"}}],[11,"from","","",180,{"i":[{"n":"span"}],"o":{"n":"self"}}],[11,"from","syn","",181,{"i":[{"n":"self_"}],"o":{"n":"ident"}}],[11,"from","","",181,{"i":[{"n":"capself"}],"o":{"n":"ident"}}],[11,"from","","",181,{"i":[{"n":"super"}],"o":{"n":"ident"}}],[11,"from","","",181,{"i":[{"n":"crate"}],"o":{"n":"ident"}}],[11,"from","","",181,{"i":[{"n":"extern"}],"o":{"n":"ident"}}],[11,"parse_inner","","",0,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_outer","","",0,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",2,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"attribute"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",0,{"i":[{"n":"self"},{"n":"h"}]}],[11,"interpret_meta","","Parses the tokens after the path as a `Meta` if possible.",0,{"i":[{"n":"self"}],"o":{"g":["meta"],"n":"option"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"attrstyle"}],"o":{"n":"bool"}}],[11,"ne","","",63,{"i":[{"n":"self"},{"n":"attrstyle"}],"o":{"n":"bool"}}],[11,"hash","","",63,null],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"attrstyle"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",64,{"i":[{"n":"self"},{"n":"meta"}],"o":{"n":"bool"}}],[11,"ne","","",64,{"i":[{"n":"self"},{"n":"meta"}],"o":{"n":"bool"}}],[11,"hash","","",64,null],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"meta"}}],[11,"from","","",64,{"i":[{"n":"ident"}],"o":{"n":"meta"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"metalist"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"metalist"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"metalist"}}],[11,"from","","",64,{"i":[{"n":"metalist"}],"o":{"n":"meta"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"metanamevalue"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"metanamevalue"}],"o":{"n":"bool"}}],[11,"hash","","",2,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"metanamevalue"}}],[11,"from","","",64,{"i":[{"n":"metanamevalue"}],"o":{"n":"meta"}}],[11,"to_tokens","","",64,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"name","","Returns the identifier that begins this structured meta item.",64,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"nestedmeta"}],"o":{"n":"bool"}}],[11,"ne","","",65,{"i":[{"n":"self"},{"n":"nestedmeta"}],"o":{"n":"bool"}}],[11,"hash","","",65,null],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"nestedmeta"}}],[11,"from","","",65,{"i":[{"n":"meta"}],"o":{"n":"nestedmeta"}}],[11,"from","","",65,{"i":[{"n":"lit"}],"o":{"n":"nestedmeta"}}],[11,"to_tokens","","",65,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",6,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",6,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",4,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",4,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",5,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",5,{"o":{"g":["str"],"n":"option"}}],[11,"parse_named","","",3,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_unnamed","","",3,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",67,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",67,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",6,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",4,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",5,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",3,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",8,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",7,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",9,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"variant"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"variant"}],"o":{"n":"bool"}}],[11,"hash","","",6,null],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"variant"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",66,{"i":[{"n":"self"},{"n":"fields"}],"o":{"n":"bool"}}],[11,"ne","","",66,{"i":[{"n":"self"},{"n":"fields"}],"o":{"n":"bool"}}],[11,"hash","","",66,null],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"fields"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"fieldsnamed"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"fieldsnamed"}],"o":{"n":"bool"}}],[11,"hash","","",4,null],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"fieldsnamed"}}],[11,"from","","",66,{"i":[{"n":"fieldsnamed"}],"o":{"n":"fields"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"fieldsunnamed"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"fieldsunnamed"}],"o":{"n":"bool"}}],[11,"hash","","",5,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"fieldsunnamed"}}],[11,"from","","",66,{"i":[{"n":"fieldsunnamed"}],"o":{"n":"fields"}}],[11,"to_tokens","","",66,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,{"i":[{"n":"self"}],"o":{"g":["field"],"n":"iter"}}],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,{"i":[{"n":"self"}],"o":{"g":["field"],"n":"itermut"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"field"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"field"}],"o":{"n":"bool"}}],[11,"hash","","",3,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"field"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",67,{"i":[{"n":"self"},{"n":"visibility"}],"o":{"n":"bool"}}],[11,"ne","","",67,{"i":[{"n":"self"},{"n":"visibility"}],"o":{"n":"bool"}}],[11,"hash","","",67,null],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"visibility"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"vispublic"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"vispublic"}],"o":{"n":"bool"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"vispublic"}}],[11,"from","","",67,{"i":[{"n":"vispublic"}],"o":{"n":"visibility"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"viscrate"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"viscrate"}],"o":{"n":"bool"}}],[11,"hash","","",7,null],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"viscrate"}}],[11,"from","","",67,{"i":[{"n":"viscrate"}],"o":{"n":"visibility"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"visrestricted"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"visrestricted"}],"o":{"n":"bool"}}],[11,"hash","","",9,null],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"visrestricted"}}],[11,"from","","",67,{"i":[{"n":"visrestricted"}],"o":{"n":"visibility"}}],[11,"to_tokens","","",67,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",68,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",68,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",15,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",15,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",16,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",16,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",17,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",17,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",69,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",69,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",20,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",20,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",11,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",10,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",18,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",15,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",12,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",13,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",69,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",20,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",14,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",17,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",16,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",19,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"bool"}}],[11,"ne","","",68,{"i":[{"n":"self"},{"n":"expr"}],"o":{"n":"bool"}}],[11,"hash","","",68,null],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"expr"}}],[11,"fmt","","",182,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",182,{"i":[{"n":"self"},{"n":"exprbox"}],"o":{"n":"bool"}}],[11,"ne","","",182,{"i":[{"n":"self"},{"n":"exprbox"}],"o":{"n":"bool"}}],[11,"hash","","",182,null],[11,"clone","","",182,{"i":[{"n":"self"}],"o":{"n":"exprbox"}}],[11,"from","","",68,{"i":[{"n":"exprbox"}],"o":{"n":"expr"}}],[11,"fmt","","",183,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",183,{"i":[{"n":"self"},{"n":"exprinplace"}],"o":{"n":"bool"}}],[11,"ne","","",183,{"i":[{"n":"self"},{"n":"exprinplace"}],"o":{"n":"bool"}}],[11,"hash","","",183,null],[11,"clone","","",183,{"i":[{"n":"self"}],"o":{"n":"exprinplace"}}],[11,"from","","",68,{"i":[{"n":"exprinplace"}],"o":{"n":"expr"}}],[11,"fmt","","",184,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",184,{"i":[{"n":"self"},{"n":"exprarray"}],"o":{"n":"bool"}}],[11,"ne","","",184,{"i":[{"n":"self"},{"n":"exprarray"}],"o":{"n":"bool"}}],[11,"hash","","",184,null],[11,"clone","","",184,{"i":[{"n":"self"}],"o":{"n":"exprarray"}}],[11,"from","","",68,{"i":[{"n":"exprarray"}],"o":{"n":"expr"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"exprcall"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"exprcall"}],"o":{"n":"bool"}}],[11,"hash","","",11,null],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"exprcall"}}],[11,"from","","",68,{"i":[{"n":"exprcall"}],"o":{"n":"expr"}}],[11,"fmt","","",185,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",185,{"i":[{"n":"self"},{"n":"exprmethodcall"}],"o":{"n":"bool"}}],[11,"ne","","",185,{"i":[{"n":"self"},{"n":"exprmethodcall"}],"o":{"n":"bool"}}],[11,"hash","","",185,null],[11,"clone","","",185,{"i":[{"n":"self"}],"o":{"n":"exprmethodcall"}}],[11,"from","","",68,{"i":[{"n":"exprmethodcall"}],"o":{"n":"expr"}}],[11,"fmt","","",186,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",186,{"i":[{"n":"self"},{"n":"exprtuple"}],"o":{"n":"bool"}}],[11,"ne","","",186,{"i":[{"n":"self"},{"n":"exprtuple"}],"o":{"n":"bool"}}],[11,"hash","","",186,null],[11,"clone","","",186,{"i":[{"n":"self"}],"o":{"n":"exprtuple"}}],[11,"from","","",68,{"i":[{"n":"exprtuple"}],"o":{"n":"expr"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"exprbinary"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"exprbinary"}],"o":{"n":"bool"}}],[11,"hash","","",10,null],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"exprbinary"}}],[11,"from","","",68,{"i":[{"n":"exprbinary"}],"o":{"n":"expr"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"exprunary"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"exprunary"}],"o":{"n":"bool"}}],[11,"hash","","",18,null],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"exprunary"}}],[11,"from","","",68,{"i":[{"n":"exprunary"}],"o":{"n":"expr"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"exprlit"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"exprlit"}],"o":{"n":"bool"}}],[11,"hash","","",15,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"exprlit"}}],[11,"from","","",68,{"i":[{"n":"exprlit"}],"o":{"n":"expr"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"exprcast"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"exprcast"}],"o":{"n":"bool"}}],[11,"hash","","",12,null],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"exprcast"}}],[11,"from","","",68,{"i":[{"n":"exprcast"}],"o":{"n":"expr"}}],[11,"fmt","","",187,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",187,{"i":[{"n":"self"},{"n":"exprtype"}],"o":{"n":"bool"}}],[11,"ne","","",187,{"i":[{"n":"self"},{"n":"exprtype"}],"o":{"n":"bool"}}],[11,"hash","","",187,null],[11,"clone","","",187,{"i":[{"n":"self"}],"o":{"n":"exprtype"}}],[11,"from","","",68,{"i":[{"n":"exprtype"}],"o":{"n":"expr"}}],[11,"fmt","","",188,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",188,{"i":[{"n":"self"},{"n":"exprif"}],"o":{"n":"bool"}}],[11,"ne","","",188,{"i":[{"n":"self"},{"n":"exprif"}],"o":{"n":"bool"}}],[11,"hash","","",188,null],[11,"clone","","",188,{"i":[{"n":"self"}],"o":{"n":"exprif"}}],[11,"from","","",68,{"i":[{"n":"exprif"}],"o":{"n":"expr"}}],[11,"fmt","","",189,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",189,{"i":[{"n":"self"},{"n":"expriflet"}],"o":{"n":"bool"}}],[11,"ne","","",189,{"i":[{"n":"self"},{"n":"expriflet"}],"o":{"n":"bool"}}],[11,"hash","","",189,null],[11,"clone","","",189,{"i":[{"n":"self"}],"o":{"n":"expriflet"}}],[11,"from","","",68,{"i":[{"n":"expriflet"}],"o":{"n":"expr"}}],[11,"fmt","","",190,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",190,{"i":[{"n":"self"},{"n":"exprwhile"}],"o":{"n":"bool"}}],[11,"ne","","",190,{"i":[{"n":"self"},{"n":"exprwhile"}],"o":{"n":"bool"}}],[11,"hash","","",190,null],[11,"clone","","",190,{"i":[{"n":"self"}],"o":{"n":"exprwhile"}}],[11,"from","","",68,{"i":[{"n":"exprwhile"}],"o":{"n":"expr"}}],[11,"fmt","","",191,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",191,{"i":[{"n":"self"},{"n":"exprwhilelet"}],"o":{"n":"bool"}}],[11,"ne","","",191,{"i":[{"n":"self"},{"n":"exprwhilelet"}],"o":{"n":"bool"}}],[11,"hash","","",191,null],[11,"clone","","",191,{"i":[{"n":"self"}],"o":{"n":"exprwhilelet"}}],[11,"from","","",68,{"i":[{"n":"exprwhilelet"}],"o":{"n":"expr"}}],[11,"fmt","","",192,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",192,{"i":[{"n":"self"},{"n":"exprforloop"}],"o":{"n":"bool"}}],[11,"ne","","",192,{"i":[{"n":"self"},{"n":"exprforloop"}],"o":{"n":"bool"}}],[11,"hash","","",192,null],[11,"clone","","",192,{"i":[{"n":"self"}],"o":{"n":"exprforloop"}}],[11,"from","","",68,{"i":[{"n":"exprforloop"}],"o":{"n":"expr"}}],[11,"fmt","","",193,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",193,{"i":[{"n":"self"},{"n":"exprloop"}],"o":{"n":"bool"}}],[11,"ne","","",193,{"i":[{"n":"self"},{"n":"exprloop"}],"o":{"n":"bool"}}],[11,"hash","","",193,null],[11,"clone","","",193,{"i":[{"n":"self"}],"o":{"n":"exprloop"}}],[11,"from","","",68,{"i":[{"n":"exprloop"}],"o":{"n":"expr"}}],[11,"fmt","","",194,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",194,{"i":[{"n":"self"},{"n":"exprmatch"}],"o":{"n":"bool"}}],[11,"ne","","",194,{"i":[{"n":"self"},{"n":"exprmatch"}],"o":{"n":"bool"}}],[11,"hash","","",194,null],[11,"clone","","",194,{"i":[{"n":"self"}],"o":{"n":"exprmatch"}}],[11,"from","","",68,{"i":[{"n":"exprmatch"}],"o":{"n":"expr"}}],[11,"fmt","","",195,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",195,{"i":[{"n":"self"},{"n":"exprclosure"}],"o":{"n":"bool"}}],[11,"ne","","",195,{"i":[{"n":"self"},{"n":"exprclosure"}],"o":{"n":"bool"}}],[11,"hash","","",195,null],[11,"clone","","",195,{"i":[{"n":"self"}],"o":{"n":"exprclosure"}}],[11,"from","","",68,{"i":[{"n":"exprclosure"}],"o":{"n":"expr"}}],[11,"fmt","","",196,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",196,{"i":[{"n":"self"},{"n":"exprunsafe"}],"o":{"n":"bool"}}],[11,"ne","","",196,{"i":[{"n":"self"},{"n":"exprunsafe"}],"o":{"n":"bool"}}],[11,"hash","","",196,null],[11,"clone","","",196,{"i":[{"n":"self"}],"o":{"n":"exprunsafe"}}],[11,"from","","",68,{"i":[{"n":"exprunsafe"}],"o":{"n":"expr"}}],[11,"fmt","","",197,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",197,{"i":[{"n":"self"},{"n":"exprblock"}],"o":{"n":"bool"}}],[11,"ne","","",197,{"i":[{"n":"self"},{"n":"exprblock"}],"o":{"n":"bool"}}],[11,"hash","","",197,null],[11,"clone","","",197,{"i":[{"n":"self"}],"o":{"n":"exprblock"}}],[11,"from","","",68,{"i":[{"n":"exprblock"}],"o":{"n":"expr"}}],[11,"fmt","","",198,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",198,{"i":[{"n":"self"},{"n":"exprassign"}],"o":{"n":"bool"}}],[11,"ne","","",198,{"i":[{"n":"self"},{"n":"exprassign"}],"o":{"n":"bool"}}],[11,"hash","","",198,null],[11,"clone","","",198,{"i":[{"n":"self"}],"o":{"n":"exprassign"}}],[11,"from","","",68,{"i":[{"n":"exprassign"}],"o":{"n":"expr"}}],[11,"fmt","","",199,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",199,{"i":[{"n":"self"},{"n":"exprassignop"}],"o":{"n":"bool"}}],[11,"ne","","",199,{"i":[{"n":"self"},{"n":"exprassignop"}],"o":{"n":"bool"}}],[11,"hash","","",199,null],[11,"clone","","",199,{"i":[{"n":"self"}],"o":{"n":"exprassignop"}}],[11,"from","","",68,{"i":[{"n":"exprassignop"}],"o":{"n":"expr"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"exprfield"}],"o":{"n":"bool"}}],[11,"ne","","",13,{"i":[{"n":"self"},{"n":"exprfield"}],"o":{"n":"bool"}}],[11,"hash","","",13,null],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"exprfield"}}],[11,"from","","",68,{"i":[{"n":"exprfield"}],"o":{"n":"expr"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"exprindex"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"exprindex"}],"o":{"n":"bool"}}],[11,"hash","","",14,null],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"exprindex"}}],[11,"from","","",68,{"i":[{"n":"exprindex"}],"o":{"n":"expr"}}],[11,"fmt","","",200,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",200,{"i":[{"n":"self"},{"n":"exprrange"}],"o":{"n":"bool"}}],[11,"ne","","",200,{"i":[{"n":"self"},{"n":"exprrange"}],"o":{"n":"bool"}}],[11,"hash","","",200,null],[11,"clone","","",200,{"i":[{"n":"self"}],"o":{"n":"exprrange"}}],[11,"from","","",68,{"i":[{"n":"exprrange"}],"o":{"n":"expr"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"exprpath"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"exprpath"}],"o":{"n":"bool"}}],[11,"hash","","",17,null],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"exprpath"}}],[11,"from","","",68,{"i":[{"n":"exprpath"}],"o":{"n":"expr"}}],[11,"fmt","","",201,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",201,{"i":[{"n":"self"},{"n":"exprreference"}],"o":{"n":"bool"}}],[11,"ne","","",201,{"i":[{"n":"self"},{"n":"exprreference"}],"o":{"n":"bool"}}],[11,"hash","","",201,null],[11,"clone","","",201,{"i":[{"n":"self"}],"o":{"n":"exprreference"}}],[11,"from","","",68,{"i":[{"n":"exprreference"}],"o":{"n":"expr"}}],[11,"fmt","","",202,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",202,{"i":[{"n":"self"},{"n":"exprbreak"}],"o":{"n":"bool"}}],[11,"ne","","",202,{"i":[{"n":"self"},{"n":"exprbreak"}],"o":{"n":"bool"}}],[11,"hash","","",202,null],[11,"clone","","",202,{"i":[{"n":"self"}],"o":{"n":"exprbreak"}}],[11,"from","","",68,{"i":[{"n":"exprbreak"}],"o":{"n":"expr"}}],[11,"fmt","","",203,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",203,{"i":[{"n":"self"},{"n":"exprcontinue"}],"o":{"n":"bool"}}],[11,"ne","","",203,{"i":[{"n":"self"},{"n":"exprcontinue"}],"o":{"n":"bool"}}],[11,"hash","","",203,null],[11,"clone","","",203,{"i":[{"n":"self"}],"o":{"n":"exprcontinue"}}],[11,"from","","",68,{"i":[{"n":"exprcontinue"}],"o":{"n":"expr"}}],[11,"fmt","","",204,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",204,{"i":[{"n":"self"},{"n":"exprreturn"}],"o":{"n":"bool"}}],[11,"ne","","",204,{"i":[{"n":"self"},{"n":"exprreturn"}],"o":{"n":"bool"}}],[11,"hash","","",204,null],[11,"clone","","",204,{"i":[{"n":"self"}],"o":{"n":"exprreturn"}}],[11,"from","","",68,{"i":[{"n":"exprreturn"}],"o":{"n":"expr"}}],[11,"fmt","","",205,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",205,{"i":[{"n":"self"},{"n":"exprmacro"}],"o":{"n":"bool"}}],[11,"ne","","",205,{"i":[{"n":"self"},{"n":"exprmacro"}],"o":{"n":"bool"}}],[11,"hash","","",205,null],[11,"clone","","",205,{"i":[{"n":"self"}],"o":{"n":"exprmacro"}}],[11,"from","","",68,{"i":[{"n":"exprmacro"}],"o":{"n":"expr"}}],[11,"fmt","","",206,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",206,{"i":[{"n":"self"},{"n":"exprstruct"}],"o":{"n":"bool"}}],[11,"ne","","",206,{"i":[{"n":"self"},{"n":"exprstruct"}],"o":{"n":"bool"}}],[11,"hash","","",206,null],[11,"clone","","",206,{"i":[{"n":"self"}],"o":{"n":"exprstruct"}}],[11,"from","","",68,{"i":[{"n":"exprstruct"}],"o":{"n":"expr"}}],[11,"fmt","","",207,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",207,{"i":[{"n":"self"},{"n":"exprrepeat"}],"o":{"n":"bool"}}],[11,"ne","","",207,{"i":[{"n":"self"},{"n":"exprrepeat"}],"o":{"n":"bool"}}],[11,"hash","","",207,null],[11,"clone","","",207,{"i":[{"n":"self"}],"o":{"n":"exprrepeat"}}],[11,"from","","",68,{"i":[{"n":"exprrepeat"}],"o":{"n":"expr"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"exprparen"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"exprparen"}],"o":{"n":"bool"}}],[11,"hash","","",16,null],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"exprparen"}}],[11,"from","","",68,{"i":[{"n":"exprparen"}],"o":{"n":"expr"}}],[11,"fmt","","",208,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",208,{"i":[{"n":"self"},{"n":"exprgroup"}],"o":{"n":"bool"}}],[11,"ne","","",208,{"i":[{"n":"self"},{"n":"exprgroup"}],"o":{"n":"bool"}}],[11,"hash","","",208,null],[11,"clone","","",208,{"i":[{"n":"self"}],"o":{"n":"exprgroup"}}],[11,"from","","",68,{"i":[{"n":"exprgroup"}],"o":{"n":"expr"}}],[11,"fmt","","",209,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",209,{"i":[{"n":"self"},{"n":"exprtry"}],"o":{"n":"bool"}}],[11,"ne","","",209,{"i":[{"n":"self"},{"n":"exprtry"}],"o":{"n":"bool"}}],[11,"hash","","",209,null],[11,"clone","","",209,{"i":[{"n":"self"}],"o":{"n":"exprtry"}}],[11,"from","","",68,{"i":[{"n":"exprtry"}],"o":{"n":"expr"}}],[11,"fmt","","",210,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",210,{"i":[{"n":"self"},{"n":"exprcatch"}],"o":{"n":"bool"}}],[11,"ne","","",210,{"i":[{"n":"self"},{"n":"exprcatch"}],"o":{"n":"bool"}}],[11,"hash","","",210,null],[11,"clone","","",210,{"i":[{"n":"self"}],"o":{"n":"exprcatch"}}],[11,"from","","",68,{"i":[{"n":"exprcatch"}],"o":{"n":"expr"}}],[11,"fmt","","",211,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",211,{"i":[{"n":"self"},{"n":"expryield"}],"o":{"n":"bool"}}],[11,"ne","","",211,{"i":[{"n":"self"},{"n":"expryield"}],"o":{"n":"bool"}}],[11,"hash","","",211,null],[11,"clone","","",211,{"i":[{"n":"self"}],"o":{"n":"expryield"}}],[11,"from","","",68,{"i":[{"n":"expryield"}],"o":{"n":"expr"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"exprverbatim"}}],[11,"from","","",68,{"i":[{"n":"exprverbatim"}],"o":{"n":"expr"}}],[11,"to_tokens","","",68,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",19,{"i":[{"n":"self"},{"n":"h"}]}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"member"}],"o":{"n":"bool"}}],[11,"ne","","",69,{"i":[{"n":"self"},{"n":"member"}],"o":{"n":"bool"}}],[11,"hash","","",69,null],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"member"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"index"}}],[11,"from","","",20,{"i":[{"n":"usize"}],"o":{"n":"index"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",20,{"i":[{"n":"self"},{"n":"h"}]}],[11,"parse","","",23,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",23,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",70,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",70,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",24,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",24,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",21,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",21,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",29,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",29,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",72,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",72,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",28,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",28,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",71,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",71,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",22,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",22,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",30,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",30,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",73,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",73,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",23,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",212,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",213,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",214,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",21,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",24,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",29,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",28,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",71,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",22,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",30,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",27,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",26,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",25,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"default","","",23,{"o":{"n":"generics"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"generics"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"generics"}],"o":{"n":"bool"}}],[11,"hash","","",23,null],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"generics"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"genericparam"}],"o":{"n":"bool"}}],[11,"ne","","",70,{"i":[{"n":"self"},{"n":"genericparam"}],"o":{"n":"bool"}}],[11,"hash","","",70,null],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"genericparam"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"typeparam"}],"o":{"n":"bool"}}],[11,"ne","","",29,{"i":[{"n":"self"},{"n":"typeparam"}],"o":{"n":"bool"}}],[11,"hash","","",29,null],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"typeparam"}}],[11,"from","","",70,{"i":[{"n":"typeparam"}],"o":{"n":"genericparam"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"lifetimedef"}],"o":{"n":"bool"}}],[11,"ne","","",24,{"i":[{"n":"self"},{"n":"lifetimedef"}],"o":{"n":"bool"}}],[11,"hash","","",24,null],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"lifetimedef"}}],[11,"from","","",70,{"i":[{"n":"lifetimedef"}],"o":{"n":"genericparam"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"constparam"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"constparam"}],"o":{"n":"bool"}}],[11,"hash","","",22,null],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"constparam"}}],[11,"from","","",70,{"i":[{"n":"constparam"}],"o":{"n":"genericparam"}}],[11,"to_tokens","","",70,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",23,{"i":[{"n":"self"}],"o":{"n":"typeparams"}}],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",23,{"i":[{"n":"self"}],"o":{"n":"typeparamsmut"}}],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",23,{"i":[{"n":"self"}],"o":{"n":"lifetimes"}}],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",23,{"i":[{"n":"self"}],"o":{"n":"lifetimesmut"}}],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",23,{"i":[{"n":"self"}],"o":{"n":"constparams"}}],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",23,{"i":[{"n":"self"}],"o":{"n":"constparamsmut"}}],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",23,{"i":[{"n":"self"}],"o":{"n":"whereclause"}}],[11,"fmt","","",212,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",212,{"i":[{"n":"self"},{"n":"implgenerics"}],"o":{"n":"bool"}}],[11,"ne","","",212,{"i":[{"n":"self"},{"n":"implgenerics"}],"o":{"n":"bool"}}],[11,"hash","","",212,null],[11,"clone","","",212,{"i":[{"n":"self"}],"o":{"n":"implgenerics"}}],[11,"fmt","","",213,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",213,{"i":[{"n":"self"},{"n":"typegenerics"}],"o":{"n":"bool"}}],[11,"ne","","",213,{"i":[{"n":"self"},{"n":"typegenerics"}],"o":{"n":"bool"}}],[11,"hash","","",213,null],[11,"clone","","",213,{"i":[{"n":"self"}],"o":{"n":"typegenerics"}}],[11,"fmt","","",214,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",214,{"i":[{"n":"self"},{"n":"turbofish"}],"o":{"n":"bool"}}],[11,"ne","","",214,{"i":[{"n":"self"},{"n":"turbofish"}],"o":{"n":"bool"}}],[11,"hash","","",214,null],[11,"clone","","",214,{"i":[{"n":"self"}],"o":{"n":"turbofish"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",23,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",213,{"i":[{"n":"self"}],"o":{"n":"turbofish"}}],[11,"default","","",21,{"o":{"n":"boundlifetimes"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"boundlifetimes"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"boundlifetimes"}],"o":{"n":"bool"}}],[11,"hash","","",21,null],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"boundlifetimes"}}],[11,"new","","",24,{"i":[{"n":"lifetime"}],"o":{"n":"self"}}],[11,"from","","",29,{"i":[{"n":"ident"}],"o":{"n":"self"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",72,{"i":[{"n":"self"},{"n":"typeparambound"}],"o":{"n":"bool"}}],[11,"ne","","",72,{"i":[{"n":"self"},{"n":"typeparambound"}],"o":{"n":"bool"}}],[11,"hash","","",72,null],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"typeparambound"}}],[11,"from","","",72,{"i":[{"n":"traitbound"}],"o":{"n":"typeparambound"}}],[11,"from","","",72,{"i":[{"n":"lifetime"}],"o":{"n":"typeparambound"}}],[11,"to_tokens","","",72,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"traitbound"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"traitbound"}],"o":{"n":"bool"}}],[11,"hash","","",28,null],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"traitbound"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",71,{"i":[{"n":"self"},{"n":"traitboundmodifier"}],"o":{"n":"bool"}}],[11,"ne","","",71,{"i":[{"n":"self"},{"n":"traitboundmodifier"}],"o":{"n":"bool"}}],[11,"hash","","",71,null],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"traitboundmodifier"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"whereclause"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"whereclause"}],"o":{"n":"bool"}}],[11,"hash","","",30,null],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"whereclause"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",73,{"i":[{"n":"self"},{"n":"wherepredicate"}],"o":{"n":"bool"}}],[11,"ne","","",73,{"i":[{"n":"self"},{"n":"wherepredicate"}],"o":{"n":"bool"}}],[11,"hash","","",73,null],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"wherepredicate"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"predicatetype"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"predicatetype"}],"o":{"n":"bool"}}],[11,"hash","","",27,null],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"predicatetype"}}],[11,"from","","",73,{"i":[{"n":"predicatetype"}],"o":{"n":"wherepredicate"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"predicatelifetime"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"predicatelifetime"}],"o":{"n":"bool"}}],[11,"hash","","",26,null],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"predicatelifetime"}}],[11,"from","","",73,{"i":[{"n":"predicatelifetime"}],"o":{"n":"wherepredicate"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"predicateeq"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"predicateeq"}],"o":{"n":"bool"}}],[11,"hash","","",25,null],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"predicateeq"}}],[11,"from","","",73,{"i":[{"n":"predicateeq"}],"o":{"n":"wherepredicate"}}],[11,"to_tokens","","",73,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"parse","","",31,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",31,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",31,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"lifetime"}}],[11,"new","","",31,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"self"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",31,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",31,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"ordering"}}],[11,"hash","","",31,{"i":[{"n":"self"},{"n":"h"}]}],[11,"parse","","",76,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",76,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",215,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",215,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",216,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",216,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",217,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",217,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",218,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",218,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",219,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",219,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",220,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",220,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",32,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",32,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",215,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",216,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",217,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",218,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",219,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",220,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",32,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",33,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,{"i":[{"n":"literal"}],"o":{"n":"self"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",76,{"i":[{"n":"self"},{"n":"lit"}],"o":{"n":"bool"}}],[11,"ne","","",76,{"i":[{"n":"self"},{"n":"lit"}],"o":{"n":"bool"}}],[11,"hash","","",76,null],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"lit"}}],[11,"fmt","","",215,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",215,{"i":[{"n":"self"}],"o":{"n":"litstr"}}],[11,"from","","",76,{"i":[{"n":"litstr"}],"o":{"n":"lit"}}],[11,"fmt","","",216,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",216,{"i":[{"n":"self"}],"o":{"n":"litbytestr"}}],[11,"from","","",76,{"i":[{"n":"litbytestr"}],"o":{"n":"lit"}}],[11,"fmt","","",217,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",217,{"i":[{"n":"self"}],"o":{"n":"litbyte"}}],[11,"from","","",76,{"i":[{"n":"litbyte"}],"o":{"n":"lit"}}],[11,"fmt","","",218,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",218,{"i":[{"n":"self"}],"o":{"n":"litchar"}}],[11,"from","","",76,{"i":[{"n":"litchar"}],"o":{"n":"lit"}}],[11,"fmt","","",219,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",219,{"i":[{"n":"self"}],"o":{"n":"litint"}}],[11,"from","","",76,{"i":[{"n":"litint"}],"o":{"n":"lit"}}],[11,"fmt","","",220,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",220,{"i":[{"n":"self"}],"o":{"n":"litfloat"}}],[11,"from","","",76,{"i":[{"n":"litfloat"}],"o":{"n":"lit"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"litbool"}}],[11,"from","","",76,{"i":[{"n":"litbool"}],"o":{"n":"lit"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"litverbatim"}}],[11,"from","","",76,{"i":[{"n":"litverbatim"}],"o":{"n":"lit"}}],[11,"to_tokens","","",76,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"new","","",215,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",215,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"parse","","Parse a syntax tree node from the content of this string literal.",215,{"i":[{"n":"self"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"span","","",215,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",215,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",216,null],[11,"value","","",216,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"vec"}}],[11,"span","","",216,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",216,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",217,{"i":[{"n":"u8"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",217,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"span","","",217,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",217,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",218,{"i":[{"n":"char"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",218,{"i":[{"n":"self"}],"o":{"n":"char"}}],[11,"span","","",218,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",218,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",219,{"i":[{"n":"u64"},{"n":"intsuffix"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",219,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"suffix","","",219,{"i":[{"n":"self"}],"o":{"n":"intsuffix"}}],[11,"span","","",219,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",219,{"i":[{"n":"self"},{"n":"span"}]}],[11,"new","","",220,{"i":[{"n":"f64"},{"n":"floatsuffix"},{"n":"span"}],"o":{"n":"self"}}],[11,"value","","",220,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"suffix","","",220,{"i":[{"n":"self"}],"o":{"n":"floatsuffix"}}],[11,"span","","",220,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",220,{"i":[{"n":"self"},{"n":"span"}]}],[11,"span","","",33,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","",33,{"i":[{"n":"self"},{"n":"span"}]}],[11,"eq","","",215,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",215,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",216,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",216,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",217,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",217,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",218,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",218,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",219,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",219,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",220,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",220,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",32,{"i":[{"n":"self"},{"n":"h"}]}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",33,{"i":[{"n":"self"},{"n":"h"}]}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",77,{"i":[{"n":"self"},{"n":"strstyle"}],"o":{"n":"bool"}}],[11,"ne","","",77,{"i":[{"n":"self"},{"n":"strstyle"}],"o":{"n":"bool"}}],[11,"hash","","",77,null],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"strstyle"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",75,{"i":[{"n":"self"},{"n":"intsuffix"}],"o":{"n":"bool"}}],[11,"hash","","",75,null],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"intsuffix"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",74,{"i":[{"n":"self"},{"n":"floatsuffix"}],"o":{"n":"bool"}}],[11,"hash","","",74,null],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"floatsuffix"}}],[11,"parse","","",34,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",34,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",34,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"macro"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",78,{"i":[{"n":"self"},{"n":"macrodelimiter"}],"o":{"n":"bool"}}],[11,"ne","","",78,{"i":[{"n":"self"},{"n":"macrodelimiter"}],"o":{"n":"bool"}}],[11,"hash","","",78,null],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"macrodelimiter"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",34,{"i":[{"n":"self"},{"n":"h"}]}],[11,"parse","","",38,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",38,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",38,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"deriveinput"}],"o":{"n":"bool"}}],[11,"ne","","",38,{"i":[{"n":"self"},{"n":"deriveinput"}],"o":{"n":"bool"}}],[11,"hash","","",38,null],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"deriveinput"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"data"}],"o":{"n":"bool"}}],[11,"ne","","",79,{"i":[{"n":"self"},{"n":"data"}],"o":{"n":"bool"}}],[11,"hash","","",79,null],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"data"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"datastruct"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"datastruct"}],"o":{"n":"bool"}}],[11,"hash","","",36,null],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"datastruct"}}],[11,"from","","",79,{"i":[{"n":"datastruct"}],"o":{"n":"data"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"dataenum"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"dataenum"}],"o":{"n":"bool"}}],[11,"hash","","",35,null],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"dataenum"}}],[11,"from","","",79,{"i":[{"n":"dataenum"}],"o":{"n":"data"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"dataunion"}],"o":{"n":"bool"}}],[11,"ne","","",37,{"i":[{"n":"self"},{"n":"dataunion"}],"o":{"n":"bool"}}],[11,"hash","","",37,null],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"dataunion"}}],[11,"from","","",79,{"i":[{"n":"dataunion"}],"o":{"n":"data"}}],[11,"parse_binop","","",80,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",81,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",81,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",80,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",81,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"binop"}],"o":{"n":"bool"}}],[11,"ne","","",80,{"i":[{"n":"self"},{"n":"binop"}],"o":{"n":"bool"}}],[11,"hash","","",80,null],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"binop"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"unop"}],"o":{"n":"bool"}}],[11,"ne","","",81,{"i":[{"n":"self"},{"n":"unop"}],"o":{"n":"bool"}}],[11,"hash","","",81,null],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"unop"}}],[11,"parse","","",84,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",84,{"o":{"g":["str"],"n":"option"}}],[11,"without_plus","","",84,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",52,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",52,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",41,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",41,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",50,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",50,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",51,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",51,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",42,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",42,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",47,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",47,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",45,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",45,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",54,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",54,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",46,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",46,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",49,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",49,{"o":{"g":["str"],"n":"option"}}],[11,"without_plus","","",83,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",83,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",83,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",53,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",53,{"o":{"g":["str"],"n":"option"}}],[11,"without_plus","","",53,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",44,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",44,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",43,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",43,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",48,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",48,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",40,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",40,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",82,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",82,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",39,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",39,{"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",52,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",41,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",50,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",51,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",42,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",47,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",54,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",49,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",53,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",44,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",43,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",48,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",45,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",46,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",55,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",83,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",40,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",82,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",39,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",84,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"ne","","",84,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"hash","","",84,null],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"typeslice"}],"o":{"n":"bool"}}],[11,"ne","","",52,{"i":[{"n":"self"},{"n":"typeslice"}],"o":{"n":"bool"}}],[11,"hash","","",52,null],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"typeslice"}}],[11,"from","","",84,{"i":[{"n":"typeslice"}],"o":{"n":"type"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"typearray"}],"o":{"n":"bool"}}],[11,"ne","","",41,{"i":[{"n":"self"},{"n":"typearray"}],"o":{"n":"bool"}}],[11,"hash","","",41,null],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"typearray"}}],[11,"from","","",84,{"i":[{"n":"typearray"}],"o":{"n":"type"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"typeptr"}],"o":{"n":"bool"}}],[11,"ne","","",50,{"i":[{"n":"self"},{"n":"typeptr"}],"o":{"n":"bool"}}],[11,"hash","","",50,null],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"typeptr"}}],[11,"from","","",84,{"i":[{"n":"typeptr"}],"o":{"n":"type"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"typereference"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"typereference"}],"o":{"n":"bool"}}],[11,"hash","","",51,null],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"typereference"}}],[11,"from","","",84,{"i":[{"n":"typereference"}],"o":{"n":"type"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"typebarefn"}],"o":{"n":"bool"}}],[11,"ne","","",42,{"i":[{"n":"self"},{"n":"typebarefn"}],"o":{"n":"bool"}}],[11,"hash","","",42,null],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"typebarefn"}}],[11,"from","","",84,{"i":[{"n":"typebarefn"}],"o":{"n":"type"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"typenever"}],"o":{"n":"bool"}}],[11,"ne","","",47,{"i":[{"n":"self"},{"n":"typenever"}],"o":{"n":"bool"}}],[11,"hash","","",47,null],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"typenever"}}],[11,"from","","",84,{"i":[{"n":"typenever"}],"o":{"n":"type"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"typetuple"}],"o":{"n":"bool"}}],[11,"ne","","",54,{"i":[{"n":"self"},{"n":"typetuple"}],"o":{"n":"bool"}}],[11,"hash","","",54,null],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"typetuple"}}],[11,"from","","",84,{"i":[{"n":"typetuple"}],"o":{"n":"type"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"typepath"}],"o":{"n":"bool"}}],[11,"ne","","",49,{"i":[{"n":"self"},{"n":"typepath"}],"o":{"n":"bool"}}],[11,"hash","","",49,null],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"typepath"}}],[11,"from","","",84,{"i":[{"n":"typepath"}],"o":{"n":"type"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"typetraitobject"}],"o":{"n":"bool"}}],[11,"ne","","",53,{"i":[{"n":"self"},{"n":"typetraitobject"}],"o":{"n":"bool"}}],[11,"hash","","",53,null],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"typetraitobject"}}],[11,"from","","",84,{"i":[{"n":"typetraitobject"}],"o":{"n":"type"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"typeimpltrait"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"typeimpltrait"}],"o":{"n":"bool"}}],[11,"hash","","",44,null],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"typeimpltrait"}}],[11,"from","","",84,{"i":[{"n":"typeimpltrait"}],"o":{"n":"type"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"typeparen"}],"o":{"n":"bool"}}],[11,"ne","","",48,{"i":[{"n":"self"},{"n":"typeparen"}],"o":{"n":"bool"}}],[11,"hash","","",48,null],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"typeparen"}}],[11,"from","","",84,{"i":[{"n":"typeparen"}],"o":{"n":"type"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"typegroup"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"typegroup"}],"o":{"n":"bool"}}],[11,"hash","","",43,null],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"typegroup"}}],[11,"from","","",84,{"i":[{"n":"typegroup"}],"o":{"n":"type"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"typeinfer"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"typeinfer"}],"o":{"n":"bool"}}],[11,"hash","","",45,null],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"typeinfer"}}],[11,"from","","",84,{"i":[{"n":"typeinfer"}],"o":{"n":"type"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"typemacro"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"typemacro"}],"o":{"n":"bool"}}],[11,"hash","","",46,null],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"typemacro"}}],[11,"from","","",84,{"i":[{"n":"typemacro"}],"o":{"n":"type"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"typeverbatim"}}],[11,"from","","",84,{"i":[{"n":"typeverbatim"}],"o":{"n":"type"}}],[11,"to_tokens","","",84,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",55,{"i":[{"n":"self"},{"n":"h"}]}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"abi"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"abi"}],"o":{"n":"bool"}}],[11,"hash","","",39,null],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"abi"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"barefnarg"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"barefnarg"}],"o":{"n":"bool"}}],[11,"hash","","",40,null],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"barefnarg"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"barefnargname"}],"o":{"n":"bool"}}],[11,"ne","","",82,{"i":[{"n":"self"},{"n":"barefnargname"}],"o":{"n":"bool"}}],[11,"hash","","",82,null],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"barefnargname"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",83,{"i":[{"n":"self"},{"n":"returntype"}],"o":{"n":"bool"}}],[11,"ne","","",83,{"i":[{"n":"self"},{"n":"returntype"}],"o":{"n":"bool"}}],[11,"hash","","",83,null],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"returntype"}}],[11,"parse","","",60,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",60,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",85,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse","","",57,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",57,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",59,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",59,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",61,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",61,{"o":{"g":["str"],"n":"option"}}],[11,"parse","","",58,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",58,{"o":{"g":["str"],"n":"option"}}],[11,"parse_mod_style","","",60,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"to_tokens","","",60,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",61,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",86,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",85,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",57,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",58,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",59,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",56,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",60,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"bool"}}],[11,"ne","","",60,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"bool"}}],[11,"hash","","",60,null],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"path"}}],[11,"global","","",60,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"pathtokens"}],"o":{"n":"bool"}}],[11,"ne","","",56,{"i":[{"n":"self"},{"n":"pathtokens"}],"o":{"n":"bool"}}],[11,"hash","","",56,null],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"pathtokens"}}],[11,"from","","",60,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",61,{"i":[{"n":"self"},{"n":"pathsegment"}],"o":{"n":"bool"}}],[11,"ne","","",61,{"i":[{"n":"self"},{"n":"pathsegment"}],"o":{"n":"bool"}}],[11,"hash","","",61,null],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"pathsegment"}}],[11,"from","","",61,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",86,{"i":[{"n":"self"},{"n":"patharguments"}],"o":{"n":"bool"}}],[11,"ne","","",86,{"i":[{"n":"self"},{"n":"patharguments"}],"o":{"n":"bool"}}],[11,"hash","","",86,null],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"patharguments"}}],[11,"default","","",86,{"o":{"n":"self"}}],[11,"is_empty","","",86,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",85,{"i":[{"n":"self"},{"n":"genericargument"}],"o":{"n":"bool"}}],[11,"ne","","",85,{"i":[{"n":"self"},{"n":"genericargument"}],"o":{"n":"bool"}}],[11,"hash","","",85,null],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"genericargument"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}],"o":{"n":"bool"}}],[11,"ne","","",57,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}],"o":{"n":"bool"}}],[11,"hash","","",57,null],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"anglebracketedgenericarguments"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"binding"}],"o":{"n":"bool"}}],[11,"ne","","",58,{"i":[{"n":"self"},{"n":"binding"}],"o":{"n":"bool"}}],[11,"hash","","",58,null],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"binding"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}],"o":{"n":"bool"}}],[11,"ne","","",59,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}],"o":{"n":"bool"}}],[11,"hash","","",59,null],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"parenthesizedgenericarguments"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"qself"}],"o":{"n":"bool"}}],[11,"ne","","",62,{"i":[{"n":"self"},{"n":"qself"}],"o":{"n":"bool"}}],[11,"hash","","",62,null],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"qself"}}],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",221,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenbuffer"}}],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",221,{"i":[{"n":"tokenstream"}],"o":{"n":"tokenbuffer"}}],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",221,{"i":[{"n":"self"}],"o":{"n":"cursor"}}],[11,"clone","","",222,{"i":[{"n":"self"}],"o":{"n":"cursor"}}],[11,"eq","","",222,{"i":[{"n":"self"},{"n":"cursor"}],"o":{"n":"bool"}}],[11,"ne","","",222,{"i":[{"n":"self"},{"n":"cursor"}],"o":{"n":"bool"}}],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",222,{"o":{"n":"self"}}],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",222,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",222,{"i":[{"n":"self"},{"n":"delimiter"}],"o":{"n":"option"}}],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along with a cursor pointing at the next `TokenTree`.",222,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along with a cursor pointing at the next `TokenTree`.",222,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",222,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",222,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",222,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",222,{"i":[{"n":"self"}],"o":{"n":"span"}}],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by punctuation.",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",null,null],[13,"Punctuated","","",223,null],[13,"End","","",223,null],[11,"to_tokens","","",224,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"to_tokens","","",223,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"eq","","",224,{"i":[{"n":"self"},{"n":"punctuated"}],"o":{"n":"bool"}}],[11,"ne","","",224,{"i":[{"n":"self"},{"n":"punctuated"}],"o":{"n":"bool"}}],[11,"hash","","",224,null],[11,"clone","","",224,{"i":[{"n":"self"}],"o":{"n":"punctuated"}}],[11,"new","","Creates an empty punctuated sequence.",224,{"o":{"n":"punctuated"}}],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",224,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",224,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"first","","Borrows the first punctuated pair in this sequence.",224,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"last","","Borrows the last punctuated pair in this sequence.",224,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",224,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",224,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",224,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",224,{"i":[{"n":"self"}],"o":{"n":"pairs"}}],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",224,{"i":[{"n":"self"}],"o":{"n":"pairsmut"}}],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",224,{"i":[{"n":"self"}],"o":{"n":"intopairs"}}],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",224,{"i":[{"n":"self"},{"n":"t"}]}],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",224,{"i":[{"n":"self"},{"n":"p"}]}],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",224,{"i":[{"n":"self"}],"o":{"g":["pair"],"n":"option"}}],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",224,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",224,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",224,{"i":[{"n":"self"},{"n":"t"}]}],[11,"insert","","Inserts an element at position `index`.",224,{"i":[{"n":"self"},{"n":"usize"},{"n":"t"}]}],[11,"fmt","","",224,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_iter","","",224,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"extend","","",224,{"i":[{"n":"self"},{"n":"i"}]}],[11,"from_iter","","",224,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"extend","","",224,{"i":[{"n":"self"},{"n":"i"}]}],[11,"into_iter","","",224,null],[11,"default","","",224,{"o":{"n":"self"}}],[11,"next","","",225,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",225,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",226,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",226,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",227,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",227,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",228,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",228,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",229,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",229,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"next","","",230,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",230,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",223,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"value","","Borrows the syntax tree node from this punctuated pair.",223,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",223,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",223,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",223,{"i":[{"n":"t"},{"n":"option"}],"o":{"n":"self"}}],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",223,null],[11,"index","","",224,null],[11,"index_mut","","",224,null],[11,"parse_separated","","Parse zero or more syntax tree nodes with punctuation in between and no trailing punctuation.",224,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_separated_nonempty","","Parse one or more syntax tree nodes with punctuation in bewteen and no trailing punctuation. allowing trailing punctuation.",224,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_terminated","","Parse zero or more syntax tree nodes with punctuation in between and optional trailing punctuation.",224,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_terminated_nonempty","","Parse one or more syntax tree nodes with punctuation in between and optional trailing punctuation.",224,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_separated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",224,null],[11,"parse_separated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",224,null],[11,"parse_terminated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",224,null],[11,"parse_terminated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",224,null],[0,"synom","syn","Parsing interface for parsing a token stream into a syntax tree node.",null,null],[3,"ParseError","syn::synom","Error returned when a `Synom` parser cannot parse the input tokens.",null,null],[0,"ext","","Extension traits that are made available within the `call!` parser.",null,null],[8,"IdentExt","syn::synom::ext","Additional parsing methods for `Ident`.",null,null],[10,"parse_any","","Parses any identifier including keywords.",231,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"parse_any","syn","",181,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[6,"PResult","syn::synom","The result of a `Synom` parser.",null,null],[8,"Synom","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",null,null],[10,"parse","","",232,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","A short name of the type being parsed.",232,{"o":{"g":["str"],"n":"option"}}],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",null,null],[16,"Output","","",233,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",233,{"i":[{"n":"self"},{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",233,{"i":[{"n":"self"},{"n":"tokenstream"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",233,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse","syn","",181,{"i":[{"n":"cursor"}],"o":{"n":"presult"}}],[11,"description","","",181,{"o":{"g":["str"],"n":"option"}}],[0,"spanned","","A trait that can provide the `Span` of the complete contents of a syntax tree node.",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",null,null],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",234,{"i":[{"n":"self"}],"o":{"n":"span"}}],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax tree.",null,null],[5,"visit_abi","syn::visit","",null,{"i":[{"n":"v"},{"n":"abi"}]}],[5,"visit_angle_bracketed_generic_arguments","","",null,{"i":[{"n":"v"},{"n":"anglebracketedgenericarguments"}]}],[5,"visit_attr_style","","",null,{"i":[{"n":"v"},{"n":"attrstyle"}]}],[5,"visit_attribute","","",null,{"i":[{"n":"v"},{"n":"attribute"}]}],[5,"visit_bare_fn_arg","","",null,{"i":[{"n":"v"},{"n":"barefnarg"}]}],[5,"visit_bare_fn_arg_name","","",null,{"i":[{"n":"v"},{"n":"barefnargname"}]}],[5,"visit_bin_op","","",null,{"i":[{"n":"v"},{"n":"binop"}]}],[5,"visit_binding","","",null,{"i":[{"n":"v"},{"n":"binding"}]}],[5,"visit_bound_lifetimes","","",null,{"i":[{"n":"v"},{"n":"boundlifetimes"}]}],[5,"visit_const_param","","",null,{"i":[{"n":"v"},{"n":"constparam"}]}],[5,"visit_data","","",null,{"i":[{"n":"v"},{"n":"data"}]}],[5,"visit_data_enum","","",null,{"i":[{"n":"v"},{"n":"dataenum"}]}],[5,"visit_data_struct","","",null,{"i":[{"n":"v"},{"n":"datastruct"}]}],[5,"visit_data_union","","",null,{"i":[{"n":"v"},{"n":"dataunion"}]}],[5,"visit_derive_input","","",null,{"i":[{"n":"v"},{"n":"deriveinput"}]}],[5,"visit_expr","","",null,{"i":[{"n":"v"},{"n":"expr"}]}],[5,"visit_expr_binary","","",null,{"i":[{"n":"v"},{"n":"exprbinary"}]}],[5,"visit_expr_call","","",null,{"i":[{"n":"v"},{"n":"exprcall"}]}],[5,"visit_expr_cast","","",null,{"i":[{"n":"v"},{"n":"exprcast"}]}],[5,"visit_expr_field","","",null,{"i":[{"n":"v"},{"n":"exprfield"}]}],[5,"visit_expr_index","","",null,{"i":[{"n":"v"},{"n":"exprindex"}]}],[5,"visit_expr_lit","","",null,{"i":[{"n":"v"},{"n":"exprlit"}]}],[5,"visit_expr_paren","","",null,{"i":[{"n":"v"},{"n":"exprparen"}]}],[5,"visit_expr_path","","",null,{"i":[{"n":"v"},{"n":"exprpath"}]}],[5,"visit_expr_unary","","",null,{"i":[{"n":"v"},{"n":"exprunary"}]}],[5,"visit_expr_verbatim","","",null,{"i":[{"n":"v"},{"n":"exprverbatim"}]}],[5,"visit_field","","",null,{"i":[{"n":"v"},{"n":"field"}]}],[5,"visit_fields","","",null,{"i":[{"n":"v"},{"n":"fields"}]}],[5,"visit_fields_named","","",null,{"i":[{"n":"v"},{"n":"fieldsnamed"}]}],[5,"visit_fields_unnamed","","",null,{"i":[{"n":"v"},{"n":"fieldsunnamed"}]}],[5,"visit_generic_argument","","",null,{"i":[{"n":"v"},{"n":"genericargument"}]}],[5,"visit_generic_param","","",null,{"i":[{"n":"v"},{"n":"genericparam"}]}],[5,"visit_generics","","",null,{"i":[{"n":"v"},{"n":"generics"}]}],[5,"visit_ident","","",null,{"i":[{"n":"v"},{"n":"ident"}]}],[5,"visit_index","","",null,{"i":[{"n":"v"},{"n":"index"}]}],[5,"visit_lifetime","","",null,{"i":[{"n":"v"},{"n":"lifetime"}]}],[5,"visit_lifetime_def","","",null,{"i":[{"n":"v"},{"n":"lifetimedef"}]}],[5,"visit_lit","","",null,{"i":[{"n":"v"},{"n":"lit"}]}],[5,"visit_lit_bool","","",null,{"i":[{"n":"v"},{"n":"litbool"}]}],[5,"visit_lit_byte","","",null,{"i":[{"n":"v"},{"n":"litbyte"}]}],[5,"visit_lit_byte_str","","",null,{"i":[{"n":"v"},{"n":"litbytestr"}]}],[5,"visit_lit_char","","",null,{"i":[{"n":"v"},{"n":"litchar"}]}],[5,"visit_lit_float","","",null,{"i":[{"n":"v"},{"n":"litfloat"}]}],[5,"visit_lit_int","","",null,{"i":[{"n":"v"},{"n":"litint"}]}],[5,"visit_lit_str","","",null,{"i":[{"n":"v"},{"n":"litstr"}]}],[5,"visit_lit_verbatim","","",null,{"i":[{"n":"v"},{"n":"litverbatim"}]}],[5,"visit_macro","","",null,{"i":[{"n":"v"},{"n":"macro"}]}],[5,"visit_macro_delimiter","","",null,{"i":[{"n":"v"},{"n":"macrodelimiter"}]}],[5,"visit_member","","",null,{"i":[{"n":"v"},{"n":"member"}]}],[5,"visit_meta","","",null,{"i":[{"n":"v"},{"n":"meta"}]}],[5,"visit_meta_list","","",null,{"i":[{"n":"v"},{"n":"metalist"}]}],[5,"visit_meta_name_value","","",null,{"i":[{"n":"v"},{"n":"metanamevalue"}]}],[5,"visit_nested_meta","","",null,{"i":[{"n":"v"},{"n":"nestedmeta"}]}],[5,"visit_parenthesized_generic_arguments","","",null,{"i":[{"n":"v"},{"n":"parenthesizedgenericarguments"}]}],[5,"visit_path","","",null,{"i":[{"n":"v"},{"n":"path"}]}],[5,"visit_path_arguments","","",null,{"i":[{"n":"v"},{"n":"patharguments"}]}],[5,"visit_path_segment","","",null,{"i":[{"n":"v"},{"n":"pathsegment"}]}],[5,"visit_predicate_eq","","",null,{"i":[{"n":"v"},{"n":"predicateeq"}]}],[5,"visit_predicate_lifetime","","",null,{"i":[{"n":"v"},{"n":"predicatelifetime"}]}],[5,"visit_predicate_type","","",null,{"i":[{"n":"v"},{"n":"predicatetype"}]}],[5,"visit_qself","","",null,{"i":[{"n":"v"},{"n":"qself"}]}],[5,"visit_return_type","","",null,{"i":[{"n":"v"},{"n":"returntype"}]}],[5,"visit_span","","",null,{"i":[{"n":"v"},{"n":"span"}]}],[5,"visit_trait_bound","","",null,{"i":[{"n":"v"},{"n":"traitbound"}]}],[5,"visit_trait_bound_modifier","","",null,{"i":[{"n":"v"},{"n":"traitboundmodifier"}]}],[5,"visit_type","","",null,{"i":[{"n":"v"},{"n":"type"}]}],[5,"visit_type_array","","",null,{"i":[{"n":"v"},{"n":"typearray"}]}],[5,"visit_type_bare_fn","","",null,{"i":[{"n":"v"},{"n":"typebarefn"}]}],[5,"visit_type_group","","",null,{"i":[{"n":"v"},{"n":"typegroup"}]}],[5,"visit_type_impl_trait","","",null,{"i":[{"n":"v"},{"n":"typeimpltrait"}]}],[5,"visit_type_infer","","",null,{"i":[{"n":"v"},{"n":"typeinfer"}]}],[5,"visit_type_macro","","",null,{"i":[{"n":"v"},{"n":"typemacro"}]}],[5,"visit_type_never","","",null,{"i":[{"n":"v"},{"n":"typenever"}]}],[5,"visit_type_param","","",null,{"i":[{"n":"v"},{"n":"typeparam"}]}],[5,"visit_type_param_bound","","",null,{"i":[{"n":"v"},{"n":"typeparambound"}]}],[5,"visit_type_paren","","",null,{"i":[{"n":"v"},{"n":"typeparen"}]}],[5,"visit_type_path","","",null,{"i":[{"n":"v"},{"n":"typepath"}]}],[5,"visit_type_ptr","","",null,{"i":[{"n":"v"},{"n":"typeptr"}]}],[5,"visit_type_reference","","",null,{"i":[{"n":"v"},{"n":"typereference"}]}],[5,"visit_type_slice","","",null,{"i":[{"n":"v"},{"n":"typeslice"}]}],[5,"visit_type_trait_object","","",null,{"i":[{"n":"v"},{"n":"typetraitobject"}]}],[5,"visit_type_tuple","","",null,{"i":[{"n":"v"},{"n":"typetuple"}]}],[5,"visit_type_verbatim","","",null,{"i":[{"n":"v"},{"n":"typeverbatim"}]}],[5,"visit_un_op","","",null,{"i":[{"n":"v"},{"n":"unop"}]}],[5,"visit_variant","","",null,{"i":[{"n":"v"},{"n":"variant"}]}],[5,"visit_vis_crate","","",null,{"i":[{"n":"v"},{"n":"viscrate"}]}],[5,"visit_vis_public","","",null,{"i":[{"n":"v"},{"n":"vispublic"}]}],[5,"visit_vis_restricted","","",null,{"i":[{"n":"v"},{"n":"visrestricted"}]}],[5,"visit_visibility","","",null,{"i":[{"n":"v"},{"n":"visibility"}]}],[5,"visit_where_clause","","",null,{"i":[{"n":"v"},{"n":"whereclause"}]}],[5,"visit_where_predicate","","",null,{"i":[{"n":"v"},{"n":"wherepredicate"}]}],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax tree.",null,null],[11,"visit_abi","","",235,{"i":[{"n":"self"},{"n":"abi"}]}],[11,"visit_angle_bracketed_generic_arguments","","",235,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}]}],[11,"visit_attr_style","","",235,{"i":[{"n":"self"},{"n":"attrstyle"}]}],[11,"visit_attribute","","",235,{"i":[{"n":"self"},{"n":"attribute"}]}],[11,"visit_bare_fn_arg","","",235,{"i":[{"n":"self"},{"n":"barefnarg"}]}],[11,"visit_bare_fn_arg_name","","",235,{"i":[{"n":"self"},{"n":"barefnargname"}]}],[11,"visit_bin_op","","",235,{"i":[{"n":"self"},{"n":"binop"}]}],[11,"visit_binding","","",235,{"i":[{"n":"self"},{"n":"binding"}]}],[11,"visit_bound_lifetimes","","",235,{"i":[{"n":"self"},{"n":"boundlifetimes"}]}],[11,"visit_const_param","","",235,{"i":[{"n":"self"},{"n":"constparam"}]}],[11,"visit_data","","",235,{"i":[{"n":"self"},{"n":"data"}]}],[11,"visit_data_enum","","",235,{"i":[{"n":"self"},{"n":"dataenum"}]}],[11,"visit_data_struct","","",235,{"i":[{"n":"self"},{"n":"datastruct"}]}],[11,"visit_data_union","","",235,{"i":[{"n":"self"},{"n":"dataunion"}]}],[11,"visit_derive_input","","",235,{"i":[{"n":"self"},{"n":"deriveinput"}]}],[11,"visit_expr","","",235,{"i":[{"n":"self"},{"n":"expr"}]}],[11,"visit_expr_binary","","",235,{"i":[{"n":"self"},{"n":"exprbinary"}]}],[11,"visit_expr_call","","",235,{"i":[{"n":"self"},{"n":"exprcall"}]}],[11,"visit_expr_cast","","",235,{"i":[{"n":"self"},{"n":"exprcast"}]}],[11,"visit_expr_field","","",235,{"i":[{"n":"self"},{"n":"exprfield"}]}],[11,"visit_expr_index","","",235,{"i":[{"n":"self"},{"n":"exprindex"}]}],[11,"visit_expr_lit","","",235,{"i":[{"n":"self"},{"n":"exprlit"}]}],[11,"visit_expr_paren","","",235,{"i":[{"n":"self"},{"n":"exprparen"}]}],[11,"visit_expr_path","","",235,{"i":[{"n":"self"},{"n":"exprpath"}]}],[11,"visit_expr_unary","","",235,{"i":[{"n":"self"},{"n":"exprunary"}]}],[11,"visit_expr_verbatim","","",235,{"i":[{"n":"self"},{"n":"exprverbatim"}]}],[11,"visit_field","","",235,{"i":[{"n":"self"},{"n":"field"}]}],[11,"visit_fields","","",235,{"i":[{"n":"self"},{"n":"fields"}]}],[11,"visit_fields_named","","",235,{"i":[{"n":"self"},{"n":"fieldsnamed"}]}],[11,"visit_fields_unnamed","","",235,{"i":[{"n":"self"},{"n":"fieldsunnamed"}]}],[11,"visit_generic_argument","","",235,{"i":[{"n":"self"},{"n":"genericargument"}]}],[11,"visit_generic_param","","",235,{"i":[{"n":"self"},{"n":"genericparam"}]}],[11,"visit_generics","","",235,{"i":[{"n":"self"},{"n":"generics"}]}],[11,"visit_ident","","",235,{"i":[{"n":"self"},{"n":"ident"}]}],[11,"visit_index","","",235,{"i":[{"n":"self"},{"n":"index"}]}],[11,"visit_lifetime","","",235,{"i":[{"n":"self"},{"n":"lifetime"}]}],[11,"visit_lifetime_def","","",235,{"i":[{"n":"self"},{"n":"lifetimedef"}]}],[11,"visit_lit","","",235,{"i":[{"n":"self"},{"n":"lit"}]}],[11,"visit_lit_bool","","",235,{"i":[{"n":"self"},{"n":"litbool"}]}],[11,"visit_lit_byte","","",235,{"i":[{"n":"self"},{"n":"litbyte"}]}],[11,"visit_lit_byte_str","","",235,{"i":[{"n":"self"},{"n":"litbytestr"}]}],[11,"visit_lit_char","","",235,{"i":[{"n":"self"},{"n":"litchar"}]}],[11,"visit_lit_float","","",235,{"i":[{"n":"self"},{"n":"litfloat"}]}],[11,"visit_lit_int","","",235,{"i":[{"n":"self"},{"n":"litint"}]}],[11,"visit_lit_str","","",235,{"i":[{"n":"self"},{"n":"litstr"}]}],[11,"visit_lit_verbatim","","",235,{"i":[{"n":"self"},{"n":"litverbatim"}]}],[11,"visit_macro","","",235,{"i":[{"n":"self"},{"n":"macro"}]}],[11,"visit_macro_delimiter","","",235,{"i":[{"n":"self"},{"n":"macrodelimiter"}]}],[11,"visit_member","","",235,{"i":[{"n":"self"},{"n":"member"}]}],[11,"visit_meta","","",235,{"i":[{"n":"self"},{"n":"meta"}]}],[11,"visit_meta_list","","",235,{"i":[{"n":"self"},{"n":"metalist"}]}],[11,"visit_meta_name_value","","",235,{"i":[{"n":"self"},{"n":"metanamevalue"}]}],[11,"visit_nested_meta","","",235,{"i":[{"n":"self"},{"n":"nestedmeta"}]}],[11,"visit_parenthesized_generic_arguments","","",235,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}]}],[11,"visit_path","","",235,{"i":[{"n":"self"},{"n":"path"}]}],[11,"visit_path_arguments","","",235,{"i":[{"n":"self"},{"n":"patharguments"}]}],[11,"visit_path_segment","","",235,{"i":[{"n":"self"},{"n":"pathsegment"}]}],[11,"visit_predicate_eq","","",235,{"i":[{"n":"self"},{"n":"predicateeq"}]}],[11,"visit_predicate_lifetime","","",235,{"i":[{"n":"self"},{"n":"predicatelifetime"}]}],[11,"visit_predicate_type","","",235,{"i":[{"n":"self"},{"n":"predicatetype"}]}],[11,"visit_qself","","",235,{"i":[{"n":"self"},{"n":"qself"}]}],[11,"visit_return_type","","",235,{"i":[{"n":"self"},{"n":"returntype"}]}],[11,"visit_span","","",235,{"i":[{"n":"self"},{"n":"span"}]}],[11,"visit_trait_bound","","",235,{"i":[{"n":"self"},{"n":"traitbound"}]}],[11,"visit_trait_bound_modifier","","",235,{"i":[{"n":"self"},{"n":"traitboundmodifier"}]}],[11,"visit_type","","",235,{"i":[{"n":"self"},{"n":"type"}]}],[11,"visit_type_array","","",235,{"i":[{"n":"self"},{"n":"typearray"}]}],[11,"visit_type_bare_fn","","",235,{"i":[{"n":"self"},{"n":"typebarefn"}]}],[11,"visit_type_group","","",235,{"i":[{"n":"self"},{"n":"typegroup"}]}],[11,"visit_type_impl_trait","","",235,{"i":[{"n":"self"},{"n":"typeimpltrait"}]}],[11,"visit_type_infer","","",235,{"i":[{"n":"self"},{"n":"typeinfer"}]}],[11,"visit_type_macro","","",235,{"i":[{"n":"self"},{"n":"typemacro"}]}],[11,"visit_type_never","","",235,{"i":[{"n":"self"},{"n":"typenever"}]}],[11,"visit_type_param","","",235,{"i":[{"n":"self"},{"n":"typeparam"}]}],[11,"visit_type_param_bound","","",235,{"i":[{"n":"self"},{"n":"typeparambound"}]}],[11,"visit_type_paren","","",235,{"i":[{"n":"self"},{"n":"typeparen"}]}],[11,"visit_type_path","","",235,{"i":[{"n":"self"},{"n":"typepath"}]}],[11,"visit_type_ptr","","",235,{"i":[{"n":"self"},{"n":"typeptr"}]}],[11,"visit_type_reference","","",235,{"i":[{"n":"self"},{"n":"typereference"}]}],[11,"visit_type_slice","","",235,{"i":[{"n":"self"},{"n":"typeslice"}]}],[11,"visit_type_trait_object","","",235,{"i":[{"n":"self"},{"n":"typetraitobject"}]}],[11,"visit_type_tuple","","",235,{"i":[{"n":"self"},{"n":"typetuple"}]}],[11,"visit_type_verbatim","","",235,{"i":[{"n":"self"},{"n":"typeverbatim"}]}],[11,"visit_un_op","","",235,{"i":[{"n":"self"},{"n":"unop"}]}],[11,"visit_variant","","",235,{"i":[{"n":"self"},{"n":"variant"}]}],[11,"visit_vis_crate","","",235,{"i":[{"n":"self"},{"n":"viscrate"}]}],[11,"visit_vis_public","","",235,{"i":[{"n":"self"},{"n":"vispublic"}]}],[11,"visit_vis_restricted","","",235,{"i":[{"n":"self"},{"n":"visrestricted"}]}],[11,"visit_visibility","","",235,{"i":[{"n":"self"},{"n":"visibility"}]}],[11,"visit_where_clause","","",235,{"i":[{"n":"self"},{"n":"whereclause"}]}],[11,"visit_where_predicate","","",235,{"i":[{"n":"self"},{"n":"wherepredicate"}]}],[11,"fmt","syn::synom","",236,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",236,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",236,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"named","syn","Define a parser function with the signature expected by syn parser combinators.",null,null],[14,"call","","Invoke the given parser function with zero or more arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Invert the result of a parser by parsing successfully if the given parser fails to parse and vice versa.",null,null],[14,"cond","","Execute a parser only if a condition is met, otherwise return None.",null,null],[14,"cond_reduce","","Execute a parser only if a condition is met, otherwise fail to parse.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything.",null,null],[14,"reject","","Unconditionally fail to parse anything.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, optionally naming each intermediate result, followed by a step to combine the intermediate results.",null,null],[14,"input_end","","Parse nothing and succeed only if the end of the enclosing block has been reached.",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"syn","","Parse any type that implements the `Synom` trait.",null,null],[14,"custom_keyword","","Parse the given word as a keyword.",null,null],[14,"parens","","Parse inside of `(` `)` parentheses.",null,null],[14,"brackets","","Parse inside of `[` `]` square brackets.",null,null],[14,"braces","","Parse inside of `{` `}` curly braces.",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",null,null],[14,"punct","","Parse a single Rust punctuation token.",null,null],[14,"keyword","","Parse a single Rust keyword token.",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",null,null],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",181,{"i":[{"n":"str"},{"n":"span"}],"o":{"n":"ident"}}],[11,"span","","Returns the span of this `Ident`.",181,{"i":[{"n":"self"}],"o":{"n":"span"}}],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",181,null],[11,"fmt","","",181,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",181,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"bool"}}],[11,"eq","","",181,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"clone","","",181,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"partial_cmp","","",181,{"i":[{"n":"self"},{"n":"ident"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",181,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"ordering"}}],[11,"hash","","",181,null],[11,"fmt","","",181,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"to_tokens","","",181,null],[11,"visit_abi","syn::visit","",235,{"i":[{"n":"self"},{"n":"abi"}]}],[11,"visit_angle_bracketed_generic_arguments","","",235,{"i":[{"n":"self"},{"n":"anglebracketedgenericarguments"}]}],[11,"visit_attr_style","","",235,{"i":[{"n":"self"},{"n":"attrstyle"}]}],[11,"visit_attribute","","",235,{"i":[{"n":"self"},{"n":"attribute"}]}],[11,"visit_bare_fn_arg","","",235,{"i":[{"n":"self"},{"n":"barefnarg"}]}],[11,"visit_bare_fn_arg_name","","",235,{"i":[{"n":"self"},{"n":"barefnargname"}]}],[11,"visit_bin_op","","",235,{"i":[{"n":"self"},{"n":"binop"}]}],[11,"visit_binding","","",235,{"i":[{"n":"self"},{"n":"binding"}]}],[11,"visit_bound_lifetimes","","",235,{"i":[{"n":"self"},{"n":"boundlifetimes"}]}],[11,"visit_const_param","","",235,{"i":[{"n":"self"},{"n":"constparam"}]}],[11,"visit_data","","",235,{"i":[{"n":"self"},{"n":"data"}]}],[11,"visit_data_enum","","",235,{"i":[{"n":"self"},{"n":"dataenum"}]}],[11,"visit_data_struct","","",235,{"i":[{"n":"self"},{"n":"datastruct"}]}],[11,"visit_data_union","","",235,{"i":[{"n":"self"},{"n":"dataunion"}]}],[11,"visit_derive_input","","",235,{"i":[{"n":"self"},{"n":"deriveinput"}]}],[11,"visit_expr","","",235,{"i":[{"n":"self"},{"n":"expr"}]}],[11,"visit_expr_binary","","",235,{"i":[{"n":"self"},{"n":"exprbinary"}]}],[11,"visit_expr_call","","",235,{"i":[{"n":"self"},{"n":"exprcall"}]}],[11,"visit_expr_cast","","",235,{"i":[{"n":"self"},{"n":"exprcast"}]}],[11,"visit_expr_field","","",235,{"i":[{"n":"self"},{"n":"exprfield"}]}],[11,"visit_expr_index","","",235,{"i":[{"n":"self"},{"n":"exprindex"}]}],[11,"visit_expr_lit","","",235,{"i":[{"n":"self"},{"n":"exprlit"}]}],[11,"visit_expr_paren","","",235,{"i":[{"n":"self"},{"n":"exprparen"}]}],[11,"visit_expr_path","","",235,{"i":[{"n":"self"},{"n":"exprpath"}]}],[11,"visit_expr_unary","","",235,{"i":[{"n":"self"},{"n":"exprunary"}]}],[11,"visit_expr_verbatim","","",235,{"i":[{"n":"self"},{"n":"exprverbatim"}]}],[11,"visit_field","","",235,{"i":[{"n":"self"},{"n":"field"}]}],[11,"visit_fields","","",235,{"i":[{"n":"self"},{"n":"fields"}]}],[11,"visit_fields_named","","",235,{"i":[{"n":"self"},{"n":"fieldsnamed"}]}],[11,"visit_fields_unnamed","","",235,{"i":[{"n":"self"},{"n":"fieldsunnamed"}]}],[11,"visit_generic_argument","","",235,{"i":[{"n":"self"},{"n":"genericargument"}]}],[11,"visit_generic_param","","",235,{"i":[{"n":"self"},{"n":"genericparam"}]}],[11,"visit_generics","","",235,{"i":[{"n":"self"},{"n":"generics"}]}],[11,"visit_ident","","",235,{"i":[{"n":"self"},{"n":"ident"}]}],[11,"visit_index","","",235,{"i":[{"n":"self"},{"n":"index"}]}],[11,"visit_lifetime","","",235,{"i":[{"n":"self"},{"n":"lifetime"}]}],[11,"visit_lifetime_def","","",235,{"i":[{"n":"self"},{"n":"lifetimedef"}]}],[11,"visit_lit","","",235,{"i":[{"n":"self"},{"n":"lit"}]}],[11,"visit_lit_bool","","",235,{"i":[{"n":"self"},{"n":"litbool"}]}],[11,"visit_lit_byte","","",235,{"i":[{"n":"self"},{"n":"litbyte"}]}],[11,"visit_lit_byte_str","","",235,{"i":[{"n":"self"},{"n":"litbytestr"}]}],[11,"visit_lit_char","","",235,{"i":[{"n":"self"},{"n":"litchar"}]}],[11,"visit_lit_float","","",235,{"i":[{"n":"self"},{"n":"litfloat"}]}],[11,"visit_lit_int","","",235,{"i":[{"n":"self"},{"n":"litint"}]}],[11,"visit_lit_str","","",235,{"i":[{"n":"self"},{"n":"litstr"}]}],[11,"visit_lit_verbatim","","",235,{"i":[{"n":"self"},{"n":"litverbatim"}]}],[11,"visit_macro","","",235,{"i":[{"n":"self"},{"n":"macro"}]}],[11,"visit_macro_delimiter","","",235,{"i":[{"n":"self"},{"n":"macrodelimiter"}]}],[11,"visit_member","","",235,{"i":[{"n":"self"},{"n":"member"}]}],[11,"visit_meta","","",235,{"i":[{"n":"self"},{"n":"meta"}]}],[11,"visit_meta_list","","",235,{"i":[{"n":"self"},{"n":"metalist"}]}],[11,"visit_meta_name_value","","",235,{"i":[{"n":"self"},{"n":"metanamevalue"}]}],[11,"visit_nested_meta","","",235,{"i":[{"n":"self"},{"n":"nestedmeta"}]}],[11,"visit_parenthesized_generic_arguments","","",235,{"i":[{"n":"self"},{"n":"parenthesizedgenericarguments"}]}],[11,"visit_path","","",235,{"i":[{"n":"self"},{"n":"path"}]}],[11,"visit_path_arguments","","",235,{"i":[{"n":"self"},{"n":"patharguments"}]}],[11,"visit_path_segment","","",235,{"i":[{"n":"self"},{"n":"pathsegment"}]}],[11,"visit_predicate_eq","","",235,{"i":[{"n":"self"},{"n":"predicateeq"}]}],[11,"visit_predicate_lifetime","","",235,{"i":[{"n":"self"},{"n":"predicatelifetime"}]}],[11,"visit_predicate_type","","",235,{"i":[{"n":"self"},{"n":"predicatetype"}]}],[11,"visit_qself","","",235,{"i":[{"n":"self"},{"n":"qself"}]}],[11,"visit_return_type","","",235,{"i":[{"n":"self"},{"n":"returntype"}]}],[11,"visit_span","","",235,{"i":[{"n":"self"},{"n":"span"}]}],[11,"visit_trait_bound","","",235,{"i":[{"n":"self"},{"n":"traitbound"}]}],[11,"visit_trait_bound_modifier","","",235,{"i":[{"n":"self"},{"n":"traitboundmodifier"}]}],[11,"visit_type","","",235,{"i":[{"n":"self"},{"n":"type"}]}],[11,"visit_type_array","","",235,{"i":[{"n":"self"},{"n":"typearray"}]}],[11,"visit_type_bare_fn","","",235,{"i":[{"n":"self"},{"n":"typebarefn"}]}],[11,"visit_type_group","","",235,{"i":[{"n":"self"},{"n":"typegroup"}]}],[11,"visit_type_impl_trait","","",235,{"i":[{"n":"self"},{"n":"typeimpltrait"}]}],[11,"visit_type_infer","","",235,{"i":[{"n":"self"},{"n":"typeinfer"}]}],[11,"visit_type_macro","","",235,{"i":[{"n":"self"},{"n":"typemacro"}]}],[11,"visit_type_never","","",235,{"i":[{"n":"self"},{"n":"typenever"}]}],[11,"visit_type_param","","",235,{"i":[{"n":"self"},{"n":"typeparam"}]}],[11,"visit_type_param_bound","","",235,{"i":[{"n":"self"},{"n":"typeparambound"}]}],[11,"visit_type_paren","","",235,{"i":[{"n":"self"},{"n":"typeparen"}]}],[11,"visit_type_path","","",235,{"i":[{"n":"self"},{"n":"typepath"}]}],[11,"visit_type_ptr","","",235,{"i":[{"n":"self"},{"n":"typeptr"}]}],[11,"visit_type_reference","","",235,{"i":[{"n":"self"},{"n":"typereference"}]}],[11,"visit_type_slice","","",235,{"i":[{"n":"self"},{"n":"typeslice"}]}],[11,"visit_type_trait_object","","",235,{"i":[{"n":"self"},{"n":"typetraitobject"}]}],[11,"visit_type_tuple","","",235,{"i":[{"n":"self"},{"n":"typetuple"}]}],[11,"visit_type_verbatim","","",235,{"i":[{"n":"self"},{"n":"typeverbatim"}]}],[11,"visit_un_op","","",235,{"i":[{"n":"self"},{"n":"unop"}]}],[11,"visit_variant","","",235,{"i":[{"n":"self"},{"n":"variant"}]}],[11,"visit_vis_crate","","",235,{"i":[{"n":"self"},{"n":"viscrate"}]}],[11,"visit_vis_public","","",235,{"i":[{"n":"self"},{"n":"vispublic"}]}],[11,"visit_vis_restricted","","",235,{"i":[{"n":"self"},{"n":"visrestricted"}]}],[11,"visit_visibility","","",235,{"i":[{"n":"self"},{"n":"visibility"}]}],[11,"visit_where_clause","","",235,{"i":[{"n":"self"},{"n":"whereclause"}]}],[11,"visit_where_predicate","","",235,{"i":[{"n":"self"},{"n":"wherepredicate"}]}]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"PathTokens"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Apostrophe"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Ident"],[3,"ExprBox"],[3,"ExprInPlace"],[3,"ExprArray"],[3,"ExprMethodCall"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprIf"],[3,"ExprIfLet"],[3,"ExprWhile"],[3,"ExprWhileLet"],[3,"ExprForLoop"],[3,"ExprLoop"],[3,"ExprMatch"],[3,"ExprClosure"],[3,"ExprUnsafe"],[3,"ExprBlock"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprReturn"],[3,"ExprMacro"],[3,"ExprStruct"],[3,"ExprRepeat"],[3,"ExprGroup"],[3,"ExprTry"],[3,"ExprCatch"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"IdentExt"],[8,"Synom"],[8,"Parser"],[8,"Spanned"],[8,"Visit"],[3,"ParseError"]]};
searchIndex["synstructure"] = {"doc":"This crate provides helper types for matching against enum variants, and extracting bindings to each of the fields in the deriving Struct or Enum in a generic way.","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both an `Ident` reference to the given field, and the syn `&'a Field` descriptor for that field.",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however each of the fields are references rather than owned. When this is used as the AST for a real variant, this struct simply borrows the fields of the `syn::Variant`, however this type may also be used as the sole variant for a struct.",null,null],[12,"attrs","","",1,null],[12,"ident","","",1,null],[12,"fields","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which provides utilities for destructuring `Variant`s with `match` expressions.",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides utilities for creating custom derive trait implementations.",null,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",3,null],[13,"MoveMut","","`mut x`",3,null],[13,"Ref","","`ref x`",3,null],[13,"RefMut","","`ref mut x`",3,null],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type which implements `Display`.",null,{"i":[{"n":"t"}],"o":{"n":"string"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bindstyle"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bindstyle"}],"o":{"n":"bool"}}],[11,"hash","","",3,null],[11,"to_tokens","","",3,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"bindinginfo"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"bindinginfo"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"bindinginfo"}],"o":{"n":"bool"}}],[11,"hash","","",0,null],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokenstream"}]}],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `BindingInfo` references",0,{"i":[{"n":"self"}],"o":{"n":"field"}}],[11,"pat","","Generates the pattern fragment for this field binding.",0,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",0,{"i":[{"n":"self"}],"o":{"g":["ident"],"n":"vec"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"variantast"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"variantast"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"variantast"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"variantinfo"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"variantinfo"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"variantinfo"}],"o":{"n":"bool"}}],[11,"hash","","",2,null],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,null],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,null],[11,"ast","","Returns a `VariantAst` object which contains references to the underlying `syn` AST node which this `Variant` was created from.",2,{"i":[{"n":"self"}],"o":{"n":"variantast"}}],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"pat","","Generates the match-arm pattern which could be used to match against this Variant.",2,{"i":[{"n":"self"}],"o":{"n":"tokenstream"}}],[11,"construct","","Generates the token stream required to construct the current variant.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"tokenstream"}}],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating a `match` arm which evaluates the returned tokens.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"tokenstream"}}],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating a `match` arm which evaluates to the resulting tokens.",2,{"i":[{"n":"self"},{"n":"i"},{"n":"f"}],"o":{"n":"tokenstream"}}],[11,"filter","","Filter the bindings created by this `Variant` object. This has 2 effects:",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"remove_binding","","Remove the binding at the given index.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",2,{"i":[{"n":"self"}],"o":{"g":["ident"],"n":"vec"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"structure"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"structure"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"structure"}],"o":{"n":"bool"}}],[11,"hash","","",4,null],[11,"new","","Create a new `Structure` with the variants and fields from the passed-in `DeriveInput`.",4,{"i":[{"n":"deriveinput"}],"o":{"n":"self"}}],[11,"variants","","Returns a slice of the variants in this Structure.",4,null],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",4,null],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `Structure` was created from.",4,{"i":[{"n":"self"}],"o":{"n":"deriveinput"}}],[11,"omitted_variants","","True if any variants were omitted due to a `filter_variants` call.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating `match` arms which evaluate the returned tokens.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"tokenstream"}}],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating `match` arms which evaluate to the resulting tokens.",4,{"i":[{"n":"self"},{"n":"i"},{"n":"f"}],"o":{"n":"tokenstream"}}],[11,"each_variant","","Runs the passed-in function once for each variant, passing in a `VariantInfo`. and generating `match` arms which evaluate the returned tokens.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"tokenstream"}}],[11,"filter","","Filter the bindings created by this `Structure` object. This has 2 effects:",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"filter_variants","","Filter the variants matched by this `Structure` object. This has 2 effects:",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"remove_variant","","Remove the variant at the given index.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced in the types of non-filtered fields / variants.",4,{"i":[{"n":"self"}],"o":{"g":["ident"],"n":"vec"}}],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when the trait to be derived needs some extra generic parameters.",4,{"i":[{"n":"self"},{"n":"genericparam"}],"o":{"n":"self"}}],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each type parmaeter referenced in the types of non-filtered fields.",4,{"i":[{"n":"self"},{"n":"traitbound"},{"n":"option"}]}],[11,"bound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",4,{"i":[{"n":"self"},{"n":"p"},{"n":"b"}],"o":{"n":"tokenstream"}}],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",4,{"i":[{"n":"self"},{"n":"p"},{"n":"b"}],"o":{"n":"tokenstream"}}],[11,"unbound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",4,{"i":[{"n":"self"},{"n":"p"},{"n":"b"}],"o":{"n":"tokenstream"}}],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",4,{"i":[{"n":"self"},{"n":"p"},{"n":"b"}],"o":{"n":"tokenstream"}}],[11,"gen_impl","","Generate an impl block for the given struct. This impl block will automatically use hygiene tricks to avoid polluting the caller's namespace, and will automatically add trait bounds for generic type parameters.",4,{"i":[{"n":"self"},{"n":"tokenstream"}],"o":{"n":"tokenstream"}}],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",null,null],[14,"quote","","The whole point.",null,null],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper. It will parse the incoming `TokenStream` into a `synstructure::Structure` object, and pass it into the inner function.",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the original struct and the expansion to ensure that they compile correctly, and confirms that feeding the original struct into the named derive will produce the written output.",null,null]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["tibrv"] = {"doc":"Rendezvous bindings for Rust","items":[[0,"errors","tibrv","Error types returned by methods in this crate.",null,null],[3,"TibrvError","tibrv::errors","The error type for operations on the types provided in this crate.",null,null],[4,"ErrorKind","","A list of general error categories.",null,null],[13,"StrContentError","","A provided string could not be converted to a CString.",0,null],[13,"RvInitFailure","","The external rendezvous machinery failed to initialize.",0,null],[13,"TransportError","","The rendezvous library rejected, or failed to connect to the transport.",0,null],[13,"QueueError","","The producing end of an event queue closed early.",0,null],[13,"AsyncRegError","","The Async callback event registration failed to complete properly.",0,null],[13,"NonVectorFieldError","","A scalar MsgField was passed to a vector decoding method.",0,null],[13,"FieldTypeError","","There was an attempt to decode a MsgField into a type which didn't match the internal tag.",0,null],[13,"UnknownFieldTypeError","","There was an attempt to decode a MsgField with an unsupported TIBRVMSG_* value",0,null],[13,"UnknownError","","Some other Rendezvous error occurred.",0,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cause","","",1,{"i":[{"n":"self"}],"o":{"g":["fail"],"n":"option"}}],[11,"backtrace","","",1,{"i":[{"n":"self"}],"o":{"g":["backtrace"],"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"kind","","",1,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"from","","",1,{"i":[{"n":"errorkind"}],"o":{"n":"tibrverror"}}],[11,"from","","",1,{"i":[{"g":["errorkind"],"n":"context"}],"o":{"n":"tibrverror"}}],[11,"from","","",0,{"i":[{"n":"tibrv_status"}],"o":{"n":"self"}}],[0,"async","tibrv","Asynchronous interfaces for integrating Rendezvous with Tokio",null,null],[3,"AsyncSub","tibrv::async","A stream returned from the `Transport::async_sub` function representing the incoming messages on the selected subject.",null,null],[11,"poll","","",2,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[0,"context","tibrv","Interface for creating and managing the Rendezvous internal machinery",null,null],[3,"Transport","tibrv::context","A struct representing a Rendezvous transport object.",null,null],[3,"TransportBuilder","","A builder for a Rendezvous transport object.",null,null],[3,"RvCtx","","A struct representing the Rendezvous internal machinery which must be set up before attempting to create `Transports` or `Subscriptions`",null,null],[11,"new","","Constructs a new TransportBuilder with the default parameters selected.",3,{"i":[{"n":"rvctx"}],"o":{"n":"self"}}],[11,"with_service","","Sets the `service` parameter.",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"with_daemon","","Sets the `daemon` parameter.",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"with_network","","Sets the `network` parameter.",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"create","","Consumes the `TransportBuilder`, creating a `Transport`.",3,{"i":[{"n":"self"}],"o":{"g":["transport","tibrverror"],"n":"result"}}],[11,"new","","Initialize the Rendezvous context",4,{"o":{"g":["tibrverror"],"n":"result"}}],[11,"version","","Get the version of Rendezvous this context has bound to.",4,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"rvctx"}}],[11,"drop","","",4,{"i":[{"n":"self"}]}],[11,"daemon","","Extract the daemon parameter from the transport.",5,{"i":[{"n":"self"}],"o":{"g":["string","tibrverror"],"n":"result"}}],[11,"network","","Extract the network parameter from the transport.",5,{"i":[{"n":"self"}],"o":{"g":["string","tibrverror"],"n":"result"}}],[11,"service","","Extract the service parameter from the transport.",5,{"i":[{"n":"self"}],"o":{"g":["string","tibrverror"],"n":"result"}}],[11,"send","","Send a `Msg` through this transport.",5,{"i":[{"n":"self"},{"n":"msg"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"subscribe","","Subscribe to a message subject.",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["subscription","tibrverror"],"n":"result"}}],[11,"async_sub","","Asynchronously subscribe to a message subject.",5,{"i":[{"n":"self"},{"n":"handle"},{"n":"str"}],"o":{"g":["asyncsub","tibrverror"],"n":"result"}}],[11,"drop","","",5,{"i":[{"n":"self"}]}],[11,"start_send","","",5,{"i":[{"n":"self"},{"n":"msg"}],"o":{"n":"startsend"}}],[11,"poll_complete","","",5,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[0,"event","tibrv","Interfaces for dealing with inbound events from Rendezvous",null,null],[3,"Subscription","tibrv::event","Represents a subscription to a subject.",null,null],[11,"next","","Get the next message available on this subscription.",6,{"i":[{"n":"self"}],"o":{"g":["msg","tibrverror"],"n":"result"}}],[11,"try_next","","",6,{"i":[{"n":"self"}],"o":{"g":["msg","tryrecverror"],"n":"result"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[0,"field","tibrv","Interfaces for constructing Rendezvous Message Fields",null,null],[3,"MsgField","tibrv::field","A structure wrapping a `tibrvMsgField`",null,null],[12,"name","","",7,null],[12,"inner","","",7,null],[3,"BorrowedMsgField","","A structure wrapping a `MsgField`",null,null],[3,"Builder","","A builder for `MsgField`.",null,null],[4,"DecodedField","","",null,null],[13,"String","","",8,null],[13,"Message","","",8,null],[13,"U8","","",8,null],[13,"U8Array","","",8,null],[13,"I8","","",8,null],[13,"I8Array","","",8,null],[13,"U16","","",8,null],[13,"U16Array","","",8,null],[13,"I16","","",8,null],[13,"I16Array","","",8,null],[13,"U32","","",8,null],[13,"U32Array","","",8,null],[13,"I32","","",8,null],[13,"I32Array","","",8,null],[13,"U64","","",8,null],[13,"U64Array","","",8,null],[13,"I64","","",8,null],[13,"I64Array","","",8,null],[13,"F32","","",8,null],[13,"F32Array","","",8,null],[13,"F64","","",8,null],[13,"F64Array","","",8,null],[13,"Bool","","",8,null],[13,"DateTime","","",8,null],[13,"Ipv4","","",8,null],[13,"IpPort","","",8,null],[13,"Opaque","","",8,null],[5,"tibrv_encode_port","","Encode a `u16` as an IP Port message field.",null,{"i":[{"n":"u16"},{"g":["str"],"n":"option"},{"g":["u32"],"n":"option"}],"o":{"n":"msgfield"}}],[5,"tibrv_try_decode_port","","Try and decode an IP Port message field.",null,{"i":[{"n":"msgfield"}],"o":{"g":["u16","tibrverror"],"n":"result"}}],[5,"tibrv_encode_opaque","","Encode a slice as an opaque byte sequence.",null,null],[5,"tibrv_try_decode_opaque","","Try and decode an opaque byte sequence into a slice",null,{"i":[{"n":"msgfield"}],"o":{"g":["tibrverror"],"n":"result"}}],[8,"Encodable","","Trait indicating the type may be encoded into a message field.",null,null],[10,"tibrv_encode","","Encodes this variable as a message field.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"},{"g":["u32"],"n":"option"}],"o":{"n":"msgfield"}}],[8,"Decodable","","Trait indicating the type may be decoded from a message field.",null,null],[10,"tibrv_try_decode","","Try and decode a supplied `MsgField` as this type.",10,{"i":[{"n":"msgfield"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"tibrv_try_decode","","",8,{"i":[{"n":"msgfield"}],"o":{"g":["decodedfield","tibrverror"],"n":"result"}}],[11,"try_decode","","",7,{"i":[{"n":"self"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"deref","","",11,{"i":[{"n":"self"}],"o":{"n":"msgfield"}}],[11,"new","","Creates a new `Builder` used to construct a `MsgField`.o",12,{"i":[{"n":"t"}],"o":{"n":"builder"}}],[11,"with_name","","Sets the `MsgField` name.",12,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"builder"}}],[11,"with_id","","Sets the `MsgField` id.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"builder"}}],[11,"encode","","Consumes the `Builder`, creating a `MsgField`.",12,{"i":[{"n":"self"}],"o":{"n":"msgfield"}}],[0,"message","tibrv","Interfaces for creating and using Rendezvous Messages",null,null],[3,"MsgIter","tibrv::message","",null,null],[3,"Msg","","A struct representing an owned Rendezvous Message.",null,null],[3,"BorrowedMsg","","A struct representing a borrowed Rendezvous Message.",null,null],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"new","","Construct a new owned Rendezvous Message",14,{"o":{"g":["tibrverror"],"n":"result"}}],[11,"try_clone","","",14,{"i":[{"n":"self"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"add_field","","Add a `MsgField` to this message.",14,{"i":[{"n":"self"},{"n":"msgfield"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"get_field_by_name","","Get a specified field from this message.",14,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["borrowedmsgfield","tibrverror"],"n":"result"}}],[11,"get_field_by_id","","Get a specified field from this message.",14,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["borrowedmsgfield","tibrverror"],"n":"result"}}],[11,"get_field_by_index","","Get a specified field from this message.",14,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["borrowedmsgfield","tibrverror"],"n":"result"}}],[11,"remove_field_by_name","","Remove a specified field from this message.",14,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"remove_field_by_id","","Remove a specified field from this message.",14,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"num_fields","","Get the number of fields within this message.",14,{"i":[{"n":"self"}],"o":{"g":["u32","tibrverror"],"n":"result"}}],[11,"expand","","Expand the internal storage of a message.",14,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"byte_size","","Get the size of the message (in bytes).",14,{"i":[{"n":"self"}],"o":{"g":["u32","tibrverror"],"n":"result"}}],[11,"set_send_subject","","Set the send subject for the message.",14,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tibrverror"],"n":"result"}}],[11,"drop","","",14,{"i":[{"n":"self"}]}],[11,"to_owned","","Transform a BorrowedMsg into an owned Msg.",15,{"i":[{"n":"self"}],"o":{"g":["msg","tibrverror"],"n":"result"}}],[11,"detach","","Detach an inbound message from Rendezvous storage.",15,{"i":[{"n":"self"}],"o":{"g":["msg","tibrverror"],"n":"result"}}],[11,"tibrv_try_decode","","",15,{"i":[{"n":"msgfield"}],"o":{"g":["tibrverror"],"n":"result"}}]],"paths":[[4,"ErrorKind"],[3,"TibrvError"],[3,"AsyncSub"],[3,"TransportBuilder"],[3,"RvCtx"],[3,"Transport"],[3,"Subscription"],[3,"MsgField"],[4,"DecodedField"],[8,"Encodable"],[8,"Decodable"],[3,"BorrowedMsgField"],[3,"Builder"],[3,"MsgIter"],[3,"Msg"],[3,"BorrowedMsg"]]};
searchIndex["tibrv_sys"] = {"doc":"","items":[[3,"__fsid_t","tibrv_sys","",null,null],[12,"__val","","",0,null],[3,"_IO_FILE","","",null,null],[12,"_flags","","",1,null],[12,"_IO_read_ptr","","",1,null],[12,"_IO_read_end","","",1,null],[12,"_IO_read_base","","",1,null],[12,"_IO_write_base","","",1,null],[12,"_IO_write_ptr","","",1,null],[12,"_IO_write_end","","",1,null],[12,"_IO_buf_base","","",1,null],[12,"_IO_buf_end","","",1,null],[12,"_IO_save_base","","",1,null],[12,"_IO_backup_base","","",1,null],[12,"_IO_save_end","","",1,null],[12,"_markers","","",1,null],[12,"_chain","","",1,null],[12,"_fileno","","",1,null],[12,"_flags2","","",1,null],[12,"_old_offset","","",1,null],[12,"_cur_column","","",1,null],[12,"_vtable_offset","","",1,null],[12,"_shortbuf","","",1,null],[12,"_lock","","",1,null],[12,"_offset","","",1,null],[12,"__pad1","","",1,null],[12,"__pad2","","",1,null],[12,"__pad3","","",1,null],[12,"__pad4","","",1,null],[12,"__pad5","","",1,null],[12,"_mode","","",1,null],[12,"_unused2","","",1,null],[3,"__mbstate_t","","",null,null],[12,"__count","","",2,null],[12,"__value","","",2,null],[3,"_G_fpos_t","","",null,null],[12,"__pos","","",3,null],[12,"__state","","",3,null],[3,"_G_fpos64_t","","",null,null],[12,"__pos","","",4,null],[12,"__state","","",4,null],[3,"_IO_jump_t","","",null,null],[3,"_IO_marker","","",null,null],[12,"_next","","",5,null],[12,"_sbuf","","",5,null],[12,"_pos","","",5,null],[3,"_IO_FILE_plus","","",null,null],[3,"timespec","","",null,null],[12,"tv_sec","","",6,null],[12,"tv_nsec","","",6,null],[3,"tm","","",null,null],[12,"tm_sec","","",7,null],[12,"tm_min","","",7,null],[12,"tm_hour","","",7,null],[12,"tm_mday","","",7,null],[12,"tm_mon","","",7,null],[12,"tm_year","","",7,null],[12,"tm_wday","","",7,null],[12,"tm_yday","","",7,null],[12,"tm_isdst","","",7,null],[12,"tm_gmtoff","","",7,null],[12,"tm_zone","","",7,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",8,null],[12,"it_value","","",8,null],[3,"sigevent","","",null,null],[3,"__locale_struct","","",null,null],[12,"__locales","","",9,null],[12,"__ctype_b","","",9,null],[12,"__ctype_tolower","","",9,null],[12,"__ctype_toupper","","",9,null],[12,"__names","","",9,null],[3,"__tibrvMsg","","",null,null],[3,"__tibrvSerializedBuffer","","",null,null],[3,"tibrvMsgDateTime","","",null,null],[12,"sec","","",10,null],[12,"nsec","","",10,null],[3,"tibrvMsgField","","",null,null],[12,"name","","",11,null],[12,"size","","",11,null],[12,"count","","",11,null],[12,"data","","",11,null],[12,"id","","",11,null],[12,"type_","","",11,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",12,null],[12,"fp_offset","","",12,null],[12,"overflow_arg_area","","",12,null],[12,"reg_save_area","","",12,null],[3,"__locale_data","","",null,null],[12,"_address","","",13,null],[19,"__mbstate_t__bindgen_ty_1","","",null,null],[12,"__wch","","",14,null],[12,"__wchb","","",14,null],[19,"tibrvLocalData","","",null,null],[12,"msg","","",15,null],[12,"str","","",15,null],[12,"buf","","",15,null],[12,"array","","",15,null],[12,"boolean","","",15,null],[12,"i8","","",15,null],[12,"u8","","",15,null],[12,"i16","","",15,null],[12,"u16","","",15,null],[12,"i32","","",15,null],[12,"u32","","",15,null],[12,"i64","","",15,null],[12,"u64","","",15,null],[12,"f32","","",15,null],[12,"f64","","",15,null],[12,"ipport16","","",15,null],[12,"ipaddr32","","",15,null],[12,"date","","",15,null],[4,"__codecvt_result","","",null,null],[13,"__codecvt_ok","","",16,null],[13,"__codecvt_partial","","",16,null],[13,"__codecvt_error","","",16,null],[13,"__codecvt_noconv","","",16,null],[4,"tibrv_bool","","",null,null],[13,"TIBRV_FALSE","","",17,null],[13,"TIBRV_TRUE","","",17,null],[4,"tibrvQueueLimitPolicy","","",null,null],[13,"TIBRVQUEUE_DISCARD_NONE","","",18,null],[13,"TIBRVQUEUE_DISCARD_NEW","","",18,null],[13,"TIBRVQUEUE_DISCARD_FIRST","","",18,null],[13,"TIBRVQUEUE_DISCARD_LAST","","",18,null],[4,"tibrvIOType","","",null,null],[13,"TIBRV_IO_READ","","",19,null],[13,"TIBRV_IO_WRITE","","",19,null],[13,"TIBRV_IO_EXCEPTION","","",19,null],[4,"tibrvTransportBatchMode","","",null,null],[13,"TIBRV_TRANSPORT_DEFAULT_BATCH","","",20,null],[13,"TIBRV_TRANSPORT_TIMER_BATCH","","",20,null],[4,"tibrv_status","","",null,null],[13,"TIBRV_OK","","",21,null],[13,"TIBRV_INIT_FAILURE","","",21,null],[13,"TIBRV_INVALID_TRANSPORT","","",21,null],[13,"TIBRV_INVALID_ARG","","",21,null],[13,"TIBRV_NOT_INITIALIZED","","",21,null],[13,"TIBRV_ARG_CONFLICT","","",21,null],[13,"TIBRV_SERVICE_NOT_FOUND","","",21,null],[13,"TIBRV_NETWORK_NOT_FOUND","","",21,null],[13,"TIBRV_DAEMON_NOT_FOUND","","",21,null],[13,"TIBRV_NO_MEMORY","","",21,null],[13,"TIBRV_INVALID_SUBJECT","","",21,null],[13,"TIBRV_DAEMON_NOT_CONNECTED","","",21,null],[13,"TIBRV_VERSION_MISMATCH","","",21,null],[13,"TIBRV_SUBJECT_COLLISION","","",21,null],[13,"TIBRV_VC_NOT_CONNECTED","","",21,null],[13,"TIBRV_NOT_PERMITTED","","",21,null],[13,"TIBRV_INVALID_NAME","","",21,null],[13,"TIBRV_INVALID_TYPE","","",21,null],[13,"TIBRV_INVALID_SIZE","","",21,null],[13,"TIBRV_INVALID_COUNT","","",21,null],[13,"TIBRV_NOT_FOUND","","",21,null],[13,"TIBRV_ID_IN_USE","","",21,null],[13,"TIBRV_ID_CONFLICT","","",21,null],[13,"TIBRV_CONVERSION_FAILED","","",21,null],[13,"TIBRV_RESERVED_HANDLER","","",21,null],[13,"TIBRV_ENCODER_FAILED","","",21,null],[13,"TIBRV_DECODER_FAILED","","",21,null],[13,"TIBRV_INVALID_MSG","","",21,null],[13,"TIBRV_INVALID_FIELD","","",21,null],[13,"TIBRV_INVALID_INSTANCE","","",21,null],[13,"TIBRV_CORRUPT_MSG","","",21,null],[13,"TIBRV_ENCODING_MISMATCH","","",21,null],[13,"TIBRV_TIMEOUT","","",21,null],[13,"TIBRV_INTR","","",21,null],[13,"TIBRV_INVALID_DISPATCHABLE","","",21,null],[13,"TIBRV_INVALID_DISPATCHER","","",21,null],[13,"TIBRV_INVALID_EVENT","","",21,null],[13,"TIBRV_INVALID_CALLBACK","","",21,null],[13,"TIBRV_INVALID_QUEUE","","",21,null],[13,"TIBRV_INVALID_QUEUE_GROUP","","",21,null],[13,"TIBRV_INVALID_TIME_INTERVAL","","",21,null],[13,"TIBRV_INVALID_IO_SOURCE","","",21,null],[13,"TIBRV_INVALID_IO_CONDITION","","",21,null],[13,"TIBRV_SOCKET_LIMIT","","",21,null],[13,"TIBRV_OS_ERROR","","",21,null],[13,"TIBRV_INSUFFICIENT_BUFFER","","",21,null],[13,"TIBRV_EOF","","",21,null],[13,"TIBRV_INVALID_FILE","","",21,null],[13,"TIBRV_FILE_NOT_FOUND","","",21,null],[13,"TIBRV_IO_FAILED","","",21,null],[13,"TIBRV_NOT_FILE_OWNER","","",21,null],[13,"TIBRV_USERPASS_MISMATCH","","",21,null],[13,"TIBRV_TOO_MANY_NEIGHBORS","","",21,null],[13,"TIBRV_ALREADY_EXISTS","","",21,null],[13,"TIBRV_PORT_BUSY","","",21,null],[13,"TIBRV_DELIVERY_FAILED","","",21,null],[13,"TIBRV_QUEUE_LIMIT","","",21,null],[13,"TIBRV_INVALID_CONTENT_DESC","","",21,null],[13,"TIBRV_INVALID_SERIALIZED_BUFFER","","",21,null],[13,"TIBRV_DESCRIPTOR_NOT_FOUND","","",21,null],[13,"TIBRV_CORRUPT_SERIALIZED_BUFFER","","",21,null],[13,"TIBRV_IPM_ONLY","","",21,null],[4,"tibrvMsgDataType","","",null,null],[13,"tibrvMsgData_Primitive","","",22,null],[13,"tibrvMsgData_MallocBlock","","",22,null],[13,"tibrvMsgData_SubMessage","","",22,null],[13,"tibrvMsgData_WireReference","","",22,null],[7,"_IO_2_1_stdin_","","",null,null],[7,"_IO_2_1_stdout_","","",null,null],[7,"_IO_2_1_stderr_","","",null,null],[5,"__underflow","","",null,null],[5,"__uflow","","",null,null],[5,"__overflow","","",null,null],[5,"_IO_getc","","",null,null],[5,"_IO_putc","","",null,null],[5,"_IO_feof","","",null,null],[5,"_IO_ferror","","",null,null],[5,"_IO_peekc_locked","","",null,null],[5,"_IO_flockfile","","",null,null],[5,"_IO_funlockfile","","",null,null],[5,"_IO_ftrylockfile","","",null,null],[5,"_IO_vfscanf","","",null,null],[5,"_IO_vfprintf","","",null,null],[5,"_IO_padn","","",null,null],[5,"_IO_sgetn","","",null,null],[5,"_IO_seekoff","","",null,null],[5,"_IO_seekpos","","",null,null],[5,"_IO_free_backup_area","","",null,null],[7,"stdin","","",null,null],[7,"stdout","","",null,null],[7,"stderr","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"renameat","","",null,null],[5,"tmpfile","","",null,null],[5,"tmpnam","","",null,null],[5,"tmpnam_r","","",null,null],[5,"tempnam","","",null,null],[5,"fclose","","",null,null],[5,"fflush","","",null,null],[5,"fflush_unlocked","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fdopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"setbuf","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuffer","","",null,null],[5,"setlinebuf","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"sprintf","","",null,null],[5,"vfprintf","","",null,null],[5,"vprintf","","",null,null],[5,"vsprintf","","",null,null],[5,"snprintf","","",null,null],[5,"vsnprintf","","",null,null],[5,"vdprintf","","",null,null],[5,"dprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"fscanf1","","",null,null],[5,"scanf1","","",null,null],[5,"sscanf1","","",null,null],[5,"vfscanf","","",null,null],[5,"vscanf","","",null,null],[5,"vsscanf","","",null,null],[5,"vfscanf1","","",null,null],[5,"vscanf1","","",null,null],[5,"vsscanf1","","",null,null],[5,"fgetc","","",null,null],[5,"getc","","",null,null],[5,"getchar","","",null,null],[5,"getc_unlocked","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"fgetc_unlocked","","",null,null],[5,"fputc","","",null,null],[5,"putc","","",null,null],[5,"putchar","","",null,null],[5,"fputc_unlocked","","",null,null],[5,"putc_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"getw","","",null,null],[5,"putw","","",null,null],[5,"fgets","","",null,null],[5,"__getdelim","","",null,null],[5,"getdelim","","",null,null],[5,"getline","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fread_unlocked","","",null,null],[5,"fwrite_unlocked","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"clearerr","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr_unlocked","","",null,null],[5,"feof_unlocked","","",null,null],[5,"ferror_unlocked","","",null,null],[5,"perror","","",null,null],[7,"sys_nerr","","",null,null],[7,"sys_errlist","","",null,null],[5,"fileno","","",null,null],[5,"fileno_unlocked","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"ctermid","","",null,null],[5,"flockfile","","",null,null],[5,"ftrylockfile","","",null,null],[5,"funlockfile","","",null,null],[5,"clock","","",null,null],[5,"time","","",null,null],[5,"difftime","","",null,null],[5,"mktime","","",null,null],[5,"strftime","","",null,null],[5,"strftime_l","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"asctime","","",null,null],[5,"ctime","","",null,null],[5,"asctime_r","","",null,null],[5,"ctime_r","","",null,null],[7,"__tzname","","",null,null],[7,"__daylight","","",null,null],[7,"__timezone","","",null,null],[7,"tzname","","",null,null],[5,"tzset","","",null,null],[7,"daylight","","",null,null],[7,"timezone","","",null,null],[5,"stime","","",null,null],[5,"timegm","","",null,null],[5,"timelocal","","",null,null],[5,"dysize","","",null,null],[5,"nanosleep","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"timer_create","","",null,null],[5,"timer_delete","","",null,null],[5,"timer_settime","","",null,null],[5,"timer_gettime","","",null,null],[5,"timer_getoverrun","","",null,null],[5,"timespec_get","","",null,null],[5,"tibrvStatus_GetText","","",null,null],[5,"tibrvEvent_CreateListener","","",null,null],[5,"tibrvEvent_CreateVectorListener","","",null,null],[5,"tibrvEvent_CreateGroupVectorListener","","",null,null],[5,"tibrvEvent_CreateTimer","","",null,null],[5,"tibrvEvent_CreateIO","","",null,null],[5,"tibrvEvent_DestroyEx","","",null,null],[5,"tibrvEvent_GetType","","",null,null],[5,"tibrvEvent_GetQueue","","",null,null],[5,"tibrvEvent_GetListenerSubject","","",null,null],[5,"tibrvEvent_GetListenerTransport","","",null,null],[5,"tibrvEvent_GetTimerInterval","","",null,null],[5,"tibrvEvent_ResetTimerInterval","","",null,null],[5,"tibrvEvent_GetIOSource","","",null,null],[5,"tibrvEvent_GetIOType","","",null,null],[5,"tibrvMsg_SetHandlers","","",null,null],[5,"tibrvMsgData_Malloc","","",null,null],[5,"tibrvMsgData_ByteSize","","",null,null],[5,"tibrvMsgData_CopyBytes","","",null,null],[5,"tibrvMsgData_GetBytes","","",null,null],[5,"tibrvMsgData_SetSize","","",null,null],[5,"tibrvMsgData_GetSize","","",null,null],[5,"tibrvMsg_AddMsgEx","","",null,null],[5,"tibrvMsg_AddIPAddr32Ex","","",null,null],[5,"tibrvMsg_AddIPPort16Ex","","",null,null],[5,"tibrvMsg_AddDateTimeEx","","",null,null],[5,"tibrvMsg_AddBoolEx","","",null,null],[5,"tibrvMsg_AddI8Ex","","",null,null],[5,"tibrvMsg_AddI8ArrayEx","","",null,null],[5,"tibrvMsg_AddU8Ex","","",null,null],[5,"tibrvMsg_AddU8ArrayEx","","",null,null],[5,"tibrvMsg_AddI16Ex","","",null,null],[5,"tibrvMsg_AddI16ArrayEx","","",null,null],[5,"tibrvMsg_AddU16Ex","","",null,null],[5,"tibrvMsg_AddU16ArrayEx","","",null,null],[5,"tibrvMsg_AddI32Ex","","",null,null],[5,"tibrvMsg_AddI32ArrayEx","","",null,null],[5,"tibrvMsg_AddU32Ex","","",null,null],[5,"tibrvMsg_AddU32ArrayEx","","",null,null],[5,"tibrvMsg_AddI64Ex","","",null,null],[5,"tibrvMsg_AddI64ArrayEx","","",null,null],[5,"tibrvMsg_AddU64Ex","","",null,null],[5,"tibrvMsg_AddU64ArrayEx","","",null,null],[5,"tibrvMsg_AddF32Ex","","",null,null],[5,"tibrvMsg_AddF32ArrayEx","","",null,null],[5,"tibrvMsg_AddF64Ex","","",null,null],[5,"tibrvMsg_AddF64ArrayEx","","",null,null],[5,"tibrvMsg_AddStringArrayEx","","",null,null],[5,"tibrvMsg_AddMsgArrayEx","","",null,null],[5,"tibrvMsg_AddStringEx","","",null,null],[5,"tibrvMsg_AddOpaqueEx","","",null,null],[5,"tibrvMsg_AddXmlEx","","",null,null],[5,"tibrvMsg_GetFieldEx","","",null,null],[5,"tibrvMsg_GetMsgEx","","",null,null],[5,"tibrvMsg_GetIPAddr32Ex","","",null,null],[5,"tibrvMsg_GetIPPort16Ex","","",null,null],[5,"tibrvMsg_GetDateTimeEx","","",null,null],[5,"tibrvMsg_GetBoolEx","","",null,null],[5,"tibrvMsg_GetI8Ex","","",null,null],[5,"tibrvMsg_GetI8ArrayEx","","",null,null],[5,"tibrvMsg_GetU8Ex","","",null,null],[5,"tibrvMsg_GetU8ArrayEx","","",null,null],[5,"tibrvMsg_GetI16Ex","","",null,null],[5,"tibrvMsg_GetI16ArrayEx","","",null,null],[5,"tibrvMsg_GetU16Ex","","",null,null],[5,"tibrvMsg_GetU16ArrayEx","","",null,null],[5,"tibrvMsg_GetI32Ex","","",null,null],[5,"tibrvMsg_GetI32ArrayEx","","",null,null],[5,"tibrvMsg_GetU32Ex","","",null,null],[5,"tibrvMsg_GetU32ArrayEx","","",null,null],[5,"tibrvMsg_GetI64Ex","","",null,null],[5,"tibrvMsg_GetI64ArrayEx","","",null,null],[5,"tibrvMsg_GetU64Ex","","",null,null],[5,"tibrvMsg_GetU64ArrayEx","","",null,null],[5,"tibrvMsg_GetF32Ex","","",null,null],[5,"tibrvMsg_GetF32ArrayEx","","",null,null],[5,"tibrvMsg_GetF64Ex","","",null,null],[5,"tibrvMsg_GetF64ArrayEx","","",null,null],[5,"tibrvMsg_GetStringArrayEx","","",null,null],[5,"tibrvMsg_GetMsgArrayEx","","",null,null],[5,"tibrvMsg_GetStringEx","","",null,null],[5,"tibrvMsg_GetOpaqueEx","","",null,null],[5,"tibrvMsg_GetXmlEx","","",null,null],[5,"tibrvMsg_RemoveFieldEx","","",null,null],[5,"tibrvMsg_UpdateMsgEx","","",null,null],[5,"tibrvMsg_UpdateIPAddr32Ex","","",null,null],[5,"tibrvMsg_UpdateIPPort16Ex","","",null,null],[5,"tibrvMsg_UpdateDateTimeEx","","",null,null],[5,"tibrvMsg_UpdateBoolEx","","",null,null],[5,"tibrvMsg_UpdateI8Ex","","",null,null],[5,"tibrvMsg_UpdateI8ArrayEx","","",null,null],[5,"tibrvMsg_UpdateU8Ex","","",null,null],[5,"tibrvMsg_UpdateU8ArrayEx","","",null,null],[5,"tibrvMsg_UpdateI16Ex","","",null,null],[5,"tibrvMsg_UpdateI16ArrayEx","","",null,null],[5,"tibrvMsg_UpdateU16Ex","","",null,null],[5,"tibrvMsg_UpdateU16ArrayEx","","",null,null],[5,"tibrvMsg_UpdateI32Ex","","",null,null],[5,"tibrvMsg_UpdateI32ArrayEx","","",null,null],[5,"tibrvMsg_UpdateU32Ex","","",null,null],[5,"tibrvMsg_UpdateU32ArrayEx","","",null,null],[5,"tibrvMsg_UpdateU64Ex","","",null,null],[5,"tibrvMsg_UpdateU64ArrayEx","","",null,null],[5,"tibrvMsg_UpdateI64Ex","","",null,null],[5,"tibrvMsg_UpdateI64ArrayEx","","",null,null],[5,"tibrvMsg_UpdateF32Ex","","",null,null],[5,"tibrvMsg_UpdateF32ArrayEx","","",null,null],[5,"tibrvMsg_UpdateF64Ex","","",null,null],[5,"tibrvMsg_UpdateF64ArrayEx","","",null,null],[5,"tibrvMsg_UpdateStringArrayEx","","",null,null],[5,"tibrvMsg_UpdateMsgArrayEx","","",null,null],[5,"tibrvMsg_UpdateStringEx","","",null,null],[5,"tibrvMsg_UpdateOpaqueEx","","",null,null],[5,"tibrvMsg_UpdateXmlEx","","",null,null],[5,"tibrvMsg_Create","","",null,null],[5,"tibrvMsg_CreateEx","","",null,null],[5,"tibrvMsg_Destroy","","",null,null],[5,"tibrvMsg_Detach","","",null,null],[5,"tibrvMsg_Reset","","",null,null],[5,"tibrvMsg_Expand","","",null,null],[5,"tibrvMsg_SetSendSubject","","",null,null],[5,"tibrvMsg_GetSendSubject","","",null,null],[5,"tibrvMsg_SetReplySubject","","",null,null],[5,"tibrvMsg_GetReplySubject","","",null,null],[5,"tibrvMsg_GetEvent","","",null,null],[5,"tibrvMsg_GetClosure","","",null,null],[5,"tibrvMsg_GetNumFields","","",null,null],[5,"tibrvMsg_GetByteSize","","",null,null],[5,"tibrvMsg_ConvertToString","","",null,null],[5,"tibrvMsg_AddField","","",null,null],[5,"tibrvMsg_GetFieldInstance","","",null,null],[5,"tibrvMsg_GetFieldByIndex","","",null,null],[5,"tibrvMsg_RemoveFieldInstance","","",null,null],[5,"tibrvMsg_UpdateField","","",null,null],[5,"tibrvMsg_CreateFromBytes","","",null,null],[5,"tibrvMsg_GetAsBytes","","",null,null],[5,"tibrvMsg_GetAsBytesCopy","","",null,null],[5,"tibrvMsg_CreateCopy","","",null,null],[5,"tibrvMsg_Write","","",null,null],[5,"tibrvMsg_WriteOpaque","","",null,null],[5,"tibrvMsg_MarkReferences","","",null,null],[5,"tibrvMsg_ClearReferences","","",null,null],[5,"tibrvMsg_GetCurrentTime","","",null,null],[5,"tibrvMsg_GetCurrentTimeString","","",null,null],[5,"_tibrvMsg_SetCommId","","",null,null],[5,"_tibrvMsg_GetCommId","","",null,null],[5,"tibrvQueue_Create","","",null,null],[5,"tibrvQueue_TimedDispatch","","",null,null],[5,"tibrvQueue_TimedDispatchOneEvent","","",null,null],[5,"tibrvQueue_DestroyEx","","",null,null],[5,"tibrvQueue_GetCount","","",null,null],[5,"tibrvQueue_GetPriority","","",null,null],[5,"tibrvQueue_SetPriority","","",null,null],[5,"tibrvQueue_GetLimitPolicy","","",null,null],[5,"tibrvQueue_SetLimitPolicy","","",null,null],[5,"tibrvQueue_SetName","","",null,null],[5,"tibrvQueue_GetName","","",null,null],[5,"tibrvQueue_SetHook","","",null,null],[5,"tibrvQueue_GetHook","","",null,null],[5,"tibrvQueueGroup_Create","","",null,null],[5,"tibrvQueueGroup_TimedDispatch","","",null,null],[5,"tibrvQueueGroup_Destroy","","",null,null],[5,"tibrvQueueGroup_Add","","",null,null],[5,"tibrvQueueGroup_Remove","","",null,null],[5,"tibrvTransport_Create","","",null,null],[5,"tibrvTransport_CreateAcceptVc","","",null,null],[5,"tibrvTransport_CreateConnectVc","","",null,null],[5,"tibrvTransport_WaitForVcConnection","","",null,null],[5,"tibrvTransport_Send","","",null,null],[5,"tibrvTransport_Sendv","","",null,null],[5,"tibrvTransport_SendRequest","","",null,null],[5,"tibrvTransport_SendReply","","",null,null],[5,"tibrvTransport_Destroy","","",null,null],[5,"tibrvTransport_CreateInbox","","",null,null],[5,"tibrvTransport_GetService","","",null,null],[5,"tibrvTransport_GetNetwork","","",null,null],[5,"tibrvTransport_GetDaemon","","",null,null],[5,"tibrvTransport_SetDescription","","",null,null],[5,"tibrvTransport_GetDescription","","",null,null],[5,"tibrvTransport_SetSendingWaitLimit","","",null,null],[5,"tibrvTransport_GetSendingWaitLimit","","",null,null],[5,"tibrvTransport_SetBatchMode","","",null,null],[5,"tibrvTransport_SetBatchSize","","",null,null],[5,"tibrvTransport_CreateLicensed","","",null,null],[5,"tibrvTransport_RequestReliability","","",null,null],[5,"tibrvDispatcher_CreateEx","","",null,null],[5,"tibrvDispatcher_Join","","",null,null],[5,"tibrvDispatcher_Destroy","","",null,null],[5,"tibrvDispatcher_SetName","","",null,null],[5,"tibrvDispatcher_GetName","","",null,null],[5,"tibrv_Version","","",null,null],[5,"tibrv_Open","","",null,null],[5,"tibrv_Close","","",null,null],[5,"tibrv_SetCodePages","","",null,null],[5,"tibrv_SetRVParameters","","",null,null],[5,"tibrv_OpenEx","","",null,null],[5,"tibrv_IsIPM","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__qaddr_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"FILE","","",null,null],[6,"__FILE","","",null,null],[6,"va_list","","",null,null],[6,"__gnuc_va_list","","",null,null],[6,"_IO_lock_t","","",null,null],[6,"__io_read_fn","","",null,null],[6,"__io_write_fn","","",null,null],[6,"__io_seek_fn","","",null,null],[6,"__io_close_fn","","",null,null],[6,"off_t","","",null,null],[6,"fpos_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"clockid_t","","",null,null],[6,"timer_t","","",null,null],[6,"pid_t","","",null,null],[6,"__locale_t","","",null,null],[6,"locale_t","","",null,null],[6,"tibrv_i8","","",null,null],[6,"tibrv_u8","","",null,null],[6,"tibrv_i16","","",null,null],[6,"tibrv_u16","","",null,null],[6,"tibrv_i32","","",null,null],[6,"tibrv_u32","","",null,null],[6,"tibrv_i64","","",null,null],[6,"tibrv_u64","","",null,null],[6,"tibrv_f32","","",null,null],[6,"tibrv_f64","","",null,null],[6,"tibrv_ipport16","","",null,null],[6,"tibrv_ipaddr32","","",null,null],[6,"tibrvMsg","","",null,null],[6,"tibrvSerializedBuffer","","",null,null],[6,"tibrvId","","",null,null],[6,"tibrvEvent","","",null,null],[6,"tibrvPollEvent","","",null,null],[6,"tibrvQueue","","",null,null],[6,"tibrvPollQueue","","",null,null],[6,"tibrvTransport","","",null,null],[6,"tibrvQueueGroup","","",null,null],[6,"tibrvDispatchable","","",null,null],[6,"tibrvDispatcher","","",null,null],[6,"tibrvContentDesc","","",null,null],[6,"tibrvEventType","","",null,null],[6,"tibrvEventCallback","","",null,null],[6,"tibrvEventVectorCallback","","",null,null],[6,"tibrvEventOnComplete","","",null,null],[6,"tibrvQueueOnComplete","","",null,null],[6,"tibrvMsgData_Encoder","","",null,null],[6,"tibrvMsgData_Decoder","","",null,null],[6,"tibrvMsgData_Converter","","",null,null],[6,"tibrvQueueHook","","",null,null],[6,"__builtin_va_list","","",null,null],[17,"_STDIO_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"_BSD_SOURCE","","",null,null],[17,"_SVID_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_BSD","","",null,null],[17,"__USE_SVID","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"__FILE_defined","","",null,null],[17,"____FILE_defined","","",null,null],[17,"_G_config_h","","",null,null],[17,"____mbstate_t_defined","","",null,null],[17,"_G_HAVE_MMAP","","",null,null],[17,"_G_HAVE_MREMAP","","",null,null],[17,"_G_IO_IO_FILE_VERSION","","",null,null],[17,"_G_BUFSIZ","","",null,null],[17,"_IO_BUFSIZ","","",null,null],[17,"__GNUC_VA_LIST","","",null,null],[17,"_IO_UNIFIED_JUMPTABLES","","",null,null],[17,"EOF","","",null,null],[17,"_IOS_INPUT","","",null,null],[17,"_IOS_OUTPUT","","",null,null],[17,"_IOS_ATEND","","",null,null],[17,"_IOS_APPEND","","",null,null],[17,"_IOS_TRUNC","","",null,null],[17,"_IOS_NOCREATE","","",null,null],[17,"_IOS_NOREPLACE","","",null,null],[17,"_IOS_BIN","","",null,null],[17,"_IO_MAGIC","","",null,null],[17,"_OLD_STDIO_MAGIC","","",null,null],[17,"_IO_MAGIC_MASK","","",null,null],[17,"_IO_USER_BUF","","",null,null],[17,"_IO_UNBUFFERED","","",null,null],[17,"_IO_NO_READS","","",null,null],[17,"_IO_NO_WRITES","","",null,null],[17,"_IO_EOF_SEEN","","",null,null],[17,"_IO_ERR_SEEN","","",null,null],[17,"_IO_DELETE_DONT_CLOSE","","",null,null],[17,"_IO_LINKED","","",null,null],[17,"_IO_IN_BACKUP","","",null,null],[17,"_IO_LINE_BUF","","",null,null],[17,"_IO_TIED_PUT_GET","","",null,null],[17,"_IO_CURRENTLY_PUTTING","","",null,null],[17,"_IO_IS_APPENDING","","",null,null],[17,"_IO_IS_FILEBUF","","",null,null],[17,"_IO_BAD_SEEN","","",null,null],[17,"_IO_USER_LOCK","","",null,null],[17,"_IO_FLAGS2_MMAP","","",null,null],[17,"_IO_FLAGS2_NOTCANCEL","","",null,null],[17,"_IO_FLAGS2_USER_WBUF","","",null,null],[17,"_IO_SKIPWS","","",null,null],[17,"_IO_LEFT","","",null,null],[17,"_IO_RIGHT","","",null,null],[17,"_IO_INTERNAL","","",null,null],[17,"_IO_DEC","","",null,null],[17,"_IO_OCT","","",null,null],[17,"_IO_HEX","","",null,null],[17,"_IO_SHOWBASE","","",null,null],[17,"_IO_SHOWPOINT","","",null,null],[17,"_IO_UPPERCASE","","",null,null],[17,"_IO_SHOWPOS","","",null,null],[17,"_IO_SCIENTIFIC","","",null,null],[17,"_IO_FIXED","","",null,null],[17,"_IO_UNITBUF","","",null,null],[17,"_IO_STDIO","","",null,null],[17,"_IO_DONT_CLOSE","","",null,null],[17,"_IO_BOOLALPHA","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"_IONBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"P_tmpdir","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_ctermid","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"_TIME_H","","",null,null],[17,"_BITS_TIME_H","","",null,null],[17,"CLOCKS_PER_SEC","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"__clock_t_defined","","",null,null],[17,"__time_t_defined","","",null,null],[17,"__clockid_t_defined","","",null,null],[17,"__timer_t_defined","","",null,null],[17,"__timespec_defined","","",null,null],[17,"TIME_UTC","","",null,null],[17,"_XLOCALE_H","","",null,null],[17,"TIBRV_SUBJECT_MAX","","",null,null],[17,"TIBRV_SUBJECT_TOKEN_MAX","","",null,null],[17,"TIBRV_INVALID_ID","","",null,null],[17,"TIBRV_TIMER_EVENT","","",null,null],[17,"TIBRV_IO_EVENT","","",null,null],[17,"TIBRV_LISTEN_EVENT","","",null,null],[17,"TIBRVQUEUE_DEFAULT_PRIORITY","","",null,null],[17,"TIBRVMSG_DATETIME_STRING_SIZE","","",null,null],[17,"TIBRVMSG_FIELDNAME_MAX","","",null,null],[17,"TIBRVMSG_MSG","","",null,null],[17,"TIBRVMSG_DATETIME","","",null,null],[17,"TIBRVMSG_OPAQUE","","",null,null],[17,"TIBRVMSG_STRING","","",null,null],[17,"TIBRVMSG_BOOL","","",null,null],[17,"TIBRVMSG_I8","","",null,null],[17,"TIBRVMSG_U8","","",null,null],[17,"TIBRVMSG_I16","","",null,null],[17,"TIBRVMSG_U16","","",null,null],[17,"TIBRVMSG_I32","","",null,null],[17,"TIBRVMSG_U32","","",null,null],[17,"TIBRVMSG_I64","","",null,null],[17,"TIBRVMSG_U64","","",null,null],[17,"TIBRVMSG_F32","","",null,null],[17,"TIBRVMSG_F64","","",null,null],[17,"TIBRVMSG_IPPORT16","","",null,null],[17,"TIBRVMSG_IPADDR32","","",null,null],[17,"TIBRVMSG_ENCRYPTED","","",null,null],[17,"TIBRVMSG_NONE","","",null,null],[17,"TIBRVMSG_I8ARRAY","","",null,null],[17,"TIBRVMSG_U8ARRAY","","",null,null],[17,"TIBRVMSG_I16ARRAY","","",null,null],[17,"TIBRVMSG_U16ARRAY","","",null,null],[17,"TIBRVMSG_I32ARRAY","","",null,null],[17,"TIBRVMSG_U32ARRAY","","",null,null],[17,"TIBRVMSG_I64ARRAY","","",null,null],[17,"TIBRVMSG_U64ARRAY","","",null,null],[17,"TIBRVMSG_F32ARRAY","","",null,null],[17,"TIBRVMSG_F64ARRAY","","",null,null],[17,"TIBRVMSG_XML","","",null,null],[17,"TIBRVMSG_STRINGARRAY","","",null,null],[17,"TIBRVMSG_MSGARRAY","","",null,null],[17,"TIBRVMSG_USER_FIRST","","",null,null],[17,"TIBRVMSG_USER_LAST","","",null,null],[17,"TIBRVMSG_NO_TAG","","",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"_io_jump_t"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"__codecvt_result"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"__codecvt_result"}],"o":{"n":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"_io_file_plus"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"sigevent"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"tibrv_bool"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"tibrv_bool"}],"o":{"n":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"__tibrvmsg"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"__tibrvserializedbuffer"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"tibrvqueuelimitpolicy"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"tibrvqueuelimitpolicy"}],"o":{"n":"bool"}}],[11,"hash","","",18,null],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"tibrviotype"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"tibrviotype"}],"o":{"n":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"tibrvtransportbatchmode"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"tibrvtransportbatchmode"}],"o":{"n":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"tibrv_status"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"tibrv_status"}],"o":{"n":"bool"}}],[11,"hash","","",21,null],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"tibrvmsgdatatype"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"tibrvmsgdatatype"}],"o":{"n":"bool"}}],[11,"hash","","",22,null],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"from","","",17,{"i":[{"n":"bool"}],"o":{"n":"self"}}],[11,"from","","",10,{"i":[{"n":"naivedatetime"}],"o":{"n":"self"}}],[11,"into","","",10,{"i":[{"n":"self"}],"o":{"n":"naivedatetime"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"__fsid_t"],[3,"_IO_FILE"],[3,"__mbstate_t"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"_IO_marker"],[3,"timespec"],[3,"tm"],[3,"itimerspec"],[3,"__locale_struct"],[3,"tibrvMsgDateTime"],[3,"tibrvMsgField"],[3,"__va_list_tag"],[3,"__locale_data"],[19,"__mbstate_t__bindgen_ty_1"],[19,"tibrvLocalData"],[4,"__codecvt_result"],[4,"tibrv_bool"],[4,"tibrvQueueLimitPolicy"],[4,"tibrvIOType"],[4,"tibrvTransportBatchMode"],[4,"tibrv_status"],[4,"tibrvMsgDataType"],[3,"_IO_jump_t"],[3,"_IO_FILE_plus"],[3,"sigevent"],[3,"__tibrvMsg"],[3,"__tibrvSerializedBuffer"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library implementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where nanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is `-7*60*60 = -25200`.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"i":[{"n":"str"},{"n":"str"}],"o":{"g":["tm","parseerror"],"n":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and nanoseconds since 1970-01-01T00:00:00Z.",null,{"o":{"n":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter in nanoseconds since an unspecified epoch.",null,{"o":{"n":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter in seconds since an unspecified epoch.",null,{"o":{"n":"f64"}}],[5,"tzset","","",null,{}],[5,"empty_tm","","",null,{"o":{"n":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"i":[{"n":"timespec"}],"o":{"n":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"o":{"n":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"i":[{"n":"timespec"}],"o":{"n":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"o":{"n":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"i":[{"n":"str"},{"n":"tm"}],"o":{"g":["string","parseerror"],"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"ordering"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks. Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days. Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours. Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes. Equivalent to `Duration::seconds(minutes * 60)` with overflow checks. Panics when the duration is out of bounds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds. Panics when the duration is more than `i64::MAX` milliseconds or less than `i64::MIN` milliseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"i":[{"n":"i64"}],"o":{"n":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the closure.",4,{"i":[{"n":"f"}],"o":{"n":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration, or `None` on overflow (exceeding 263 microseconds in either direction).",4,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration, or `None` on overflow (exceeding 263 nanoseconds in either direction).",4,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["duration"],"n":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"o":{"n":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"o":{"n":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"o":{"n":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"i":[{"n":"stdduration"}],"o":{"g":["duration","outofrangeerror"],"n":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"i":[{"n":"self"}],"o":{"g":["stdduration","outofrangeerror"],"n":"result"}}],[11,"neg","","",4,{"i":[{"n":"self"}],"o":{"n":"duration"}}],[11,"add","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"sub","","",4,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"duration"}}],[11,"mul","","",4,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"div","","",4,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"duration"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"outofrangeerror"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"outofrangeerror"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"outofrangeerror"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"ordering"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,null],[11,"new","","",0,{"i":[{"n":"i64"},{"n":"i32"}],"o":{"n":"timespec"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"timespec"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"timespec"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"timespec"}],"o":{"n":"duration"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"o":{"n":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of `self` to the value of `later`.",6,{"i":[{"n":"self"},{"n":"precisetime"}],"o":{"n":"duration"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"steadytime"}}],[11,"partial_cmp","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"le","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"gt","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"ge","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"cmp","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"ordering"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"o":{"n":"steadytime"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"sub","","",7,{"i":[{"n":"self"},{"n":"steadytime"}],"o":{"n":"duration"}}],[11,"sub","","",7,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"steadytime"}}],[11,"add","","",7,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"steadytime"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"tm"}}],[11,"sub","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"duration"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"tm"}],"o":{"n":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C, in the local timezone.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO C.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["tmfmt","parseerror"],"n":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is compatible with ISO 8601.",1,{"i":[{"n":"self"}],"o":{"n":"tmfmt"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["tokio"] = {"doc":"A runtime for writing reliable, asynchronous, and slim applications.","items":[[0,"clock","tokio","A configurable source of time.",null,null],[5,"now","tokio::clock","Returns an `Instant` corresponding to \"now\".",null,{"o":{"n":"instant"}}],[0,"executor","tokio","Task execution utilities.",null,null],[8,"Executor","tokio::executor","A value that executes futures.",null,null],[10,"spawn","","Spawns a future object to run on this executor.",0,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"status","","Provides a best effort hint to whether or not `spawn` will succeed.",0,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[3,"DefaultExecutor","","Executes futures on the default executor for the current execution context.",null,null],[3,"SpawnError","","Errors returned by `Executor::spawn`.",null,null],[3,"Spawn","","Return value from the `spawn` function.",null,null],[5,"spawn","","Spawns a future on the default executor.",null,{"i":[{"n":"f"}],"o":{"n":"spawn"}}],[0,"current_thread","","Execute many tasks concurrently on the current thread.",null,null],[3,"CurrentThread","tokio::executor::current_thread","Executes tasks on the current thread",null,null],[3,"TaskExecutor","","Executes futures on the current thread.",null,null],[3,"Turn","","Returned by the `turn` function.",null,null],[3,"Entered","","A `CurrentThread` instance bound to a supplied execution context.",null,null],[3,"RunError","","Error returned by the `run` function.",null,null],[3,"RunTimeoutError","","Error returned by the `run_timeout` function.",null,null],[3,"TurnError","","Error returned by the `turn` function.",null,null],[3,"BlockError","","Error returned by the `block_on` function.",null,null],[3,"Handle","","Handle to spawn a future on the corresponding `CurrentThread` instance",null,null],[5,"block_on_all","","Run the executor bootstrapping the execution with the provided future.",null,{"i":[{"n":"f"}],"o":{"n":"result"}}],[5,"spawn","","Executes a future on the current thread.",null,{"i":[{"n":"f"}]}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"taskexecutor"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"has_polled","","`true` if any futures were polled at all and `false` otherwise.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new instance of `CurrentThread`.",7,{"o":{"n":"self"}}],[11,"new_with_park","","Create a new instance of `CurrentThread` backed by the given park handle.",7,{"i":[{"n":"p"}],"o":{"n":"self"}}],[11,"is_idle","","Returns `true` if the executor is currently idle.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"spawn","","Spawn the future on the executor.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"block_on","","Synchronously waits for the provided `future` to complete.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["blockerror"],"n":"result"}}],[11,"run","","Run the executor to completion, blocking the thread until all spawned futures have completed.",7,{"i":[{"n":"self"}],"o":{"g":["runerror"],"n":"result"}}],[11,"run_timeout","","Run the executor to completion, blocking the thread until all spawned futures have completed or `duration` time has elapsed.",7,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["runtimeouterror"],"n":"result"}}],[11,"turn","","Perform a single iteration of the event loop.",7,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["turn","turnerror"],"n":"result"}}],[11,"enter","","Bind `CurrentThread` instance with an execution context.",7,{"i":[{"n":"self"},{"n":"enter"}],"o":{"n":"entered"}}],[11,"get_park","","Returns a reference to the underlying `Park` instance.",7,{"i":[{"n":"self"}],"o":{"n":"p"}}],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park` instance.",7,{"i":[{"n":"self"}],"o":{"n":"p"}}],[11,"handle","","Get a new handle to spawn futures on the executor",7,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"spawn","","",7,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"spawn","","Spawn the future on the executor.",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"block_on","","Synchronously waits for the provided `future` to complete.",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["blockerror"],"n":"result"}}],[11,"run","","Run the executor to completion, blocking the thread until all spawned futures have completed.",8,{"i":[{"n":"self"}],"o":{"g":["runerror"],"n":"result"}}],[11,"run_timeout","","Run the executor to completion, blocking the thread until all spawned futures have completed or `duration` time has elapsed.",8,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["runtimeouterror"],"n":"result"}}],[11,"turn","","Perform a single iteration of the event loop.",8,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["turn","turnerror"],"n":"result"}}],[11,"get_park","","Returns a reference to the underlying `Park` instance.",8,{"i":[{"n":"self"}],"o":{"n":"p"}}],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park` instance.",8,{"i":[{"n":"self"}],"o":{"n":"p"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"spawn","","Spawn a future onto the `CurrentThread` instance corresponding to this handle",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"current","","Returns an executor that executes futures on the current thread.",1,{"o":{"n":"taskexecutor"}}],[11,"spawn_local","","Spawn a future onto the current `CurrentThread` instance.",1,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"spawn","","",1,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"status","","",1,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"execute","","",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["executeerror"],"n":"result"}}],[11,"is_timeout","","Returns `true` if the error was caused by the operation timing out.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",4,{"i":[{"n":"entererror"}],"o":{"n":"self"}}],[11,"into_inner","","Returns the error yielded by the future being blocked on",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"from","","",6,{"i":[{"n":"entererror"}],"o":{"n":"self"}}],[0,"thread_pool","tokio::executor","Maintains a pool of threads across which the set of spawned tasks are executed.",null,null],[3,"Builder","tokio::executor::thread_pool","Builds a thread pool with custom configuration values.",null,null],[3,"Sender","","Submit futures to the associated thread pool for execution.",null,null],[3,"Shutdown","","Future that resolves when the thread pool is shutdown.",null,null],[3,"ThreadPool","","Work-stealing based thread pool for executing futures.",null,null],[11,"fmt","tokio::executor","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_future","","",10,null],[0,"fs","tokio","Asynchronous filesystem manipulation operations.",null,null],[0,"file","tokio::fs","Types for working with [`File`].",null,null],[3,"File","tokio::fs::file","A reference to an open file on the filesystem.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a file is opened.",null,null],[3,"MetadataFuture","","Future returned by `File::metadata` and resolves to a `(Metadata, File)` instance.",null,null],[3,"CreateFuture","","Future returned by `File::create` and resolves to a `File` instance.",null,null],[3,"SeekFuture","","Future returned by `File::seek`.",null,null],[3,"OpenFuture","","Future returned by `File::open` and resolves to a `File` instance.",null,null],[3,"File","tokio::fs","A reference to an open file on the filesystem.",null,null],[0,"net","tokio","TCP/UDP bindings for `tokio`.",null,null],[3,"TcpStream","tokio::net","An I/O object representing a TCP stream connected to a remote endpoint.",null,null],[3,"ConnectFuture","","Future returned by `TcpStream::connect` which will resolve to a `TcpStream` when the stream is connected.",null,null],[3,"TcpListener","","An I/O object representing a TCP socket listening for incoming connections.",null,null],[3,"Incoming","","Stream returned by the `TcpListener::incoming` function representing the stream of sockets received from a listener.",null,null],[3,"UdpSocket","","An I/O object representing a UDP socket.",null,null],[3,"UdpFramed","","A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using the `Encoder` and `Decoder` traits to encode and decode frames.",null,null],[3,"SendDgram","","A future used to write the entire contents of some data to a UDP socket.",null,null],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",null,null],[0,"reactor","tokio","Event loop that drives Tokio I/O resources.",null,null],[3,"Reactor","tokio::reactor","The core reactor, or event loop.",null,null],[3,"Handle","","A reference to a reactor.",null,null],[3,"Background","","Handle to the reactor running on a background thread.",null,null],[3,"Turn","","Return value from the `turn` method on `Reactor`.",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that drives it.",null,null],[3,"PollEvented2","","Associates an I/O resource that implements the [`std::Read`] and / or [`std::Write`] traits with the reactor that drives it.",null,null],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"Shutdown","","A future that resolves when the Tokio `Runtime` is shut down.",null,null],[3,"TaskExecutor","","Executes futures on the runtime",null,null],[3,"Runtime","","Handle to the Tokio runtime.",null,null],[5,"run","","Start the Tokio runtime using the supplied future to bootstrap execution.",null,{"i":[{"n":"f"}]}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns a new runtime builder initialized with default configuration values.",11,{"o":{"n":"builder"}}],[11,"clock","","Set the `Clock` instance that will be used by the runtime.",11,{"i":[{"n":"self"},{"n":"clock"}],"o":{"n":"self"}}],[11,"threadpool_builder","","Set builder to set up the thread pool instance.",11,{"i":[{"n":"self"},{"n":"threadpoolbuilder"}],"o":{"n":"self"}}],[11,"build","","Create the configured `Runtime`.",11,{"i":[{"n":"self"}],"o":{"g":["runtime"],"n":"result"}}],[0,"current_thread","","A runtime implementation that runs everything on the current thread.",null,null],[3,"Builder","tokio::runtime::current_thread","Builds a Single-threaded runtime with custom configuration values.",null,null],[3,"Runtime","","Single-threaded runtime provides a way to start reactor and executor on the current thread.",null,null],[3,"Handle","","Handle to spawn a future on the corresponding `CurrentThread` runtime instance",null,null],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns a new runtime builder initialized with default configuration values.",12,{"o":{"n":"builder"}}],[11,"clock","","Set the `Clock` instance that will be used by the runtime.",12,{"i":[{"n":"self"},{"n":"clock"}],"o":{"n":"self"}}],[11,"build","","Create the configured `Runtime`.",12,{"i":[{"n":"self"}],"o":{"g":["runtime"],"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"spawn","","Spawn a future onto the `CurrentThread` runtime instance corresponding to this handle",14,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"new","","Returns a new runtime initialized with default configuration values.",13,{"o":{"g":["runtime"],"n":"result"}}],[11,"handle","","Get a new handle to spawn futures on the single-threaded Tokio runtime",13,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"spawn","","Spawn a future onto the single-threaded Tokio runtime.",13,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"block_on","","Runs the provided future, blocking the current thread until the future completes.",13,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"run","","Run the executor to completion, blocking the thread until all spawned futures have completed.",13,{"i":[{"n":"self"}],"o":{"g":["runerror"],"n":"result"}}],[11,"poll","tokio::runtime","",15,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"taskexecutor"}}],[11,"spawn","","Spawn a future onto the Tokio runtime.",16,{"i":[{"n":"self"},{"n":"f"}]}],[11,"execute","","",16,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["executeerror"],"n":"result"}}],[11,"spawn","","",16,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new runtime instance with default configuration values.",17,{"o":{"n":"result"}}],[11,"reactor","","Return a reference to the reactor handle for this runtime instance.",17,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"executor","","Return a handle to the runtime's executor.",17,{"i":[{"n":"self"}],"o":{"n":"taskexecutor"}}],[11,"spawn","","Spawn a future onto the Tokio runtime.",17,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"block_on","","Run a future to completion on the Tokio runtime.",17,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"shutdown_on_idle","","Signals the runtime to shutdown once it becomes idle.",17,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown_now","","Signals the runtime to shutdown immediately.",17,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"drop","","",17,{"i":[{"n":"self"}]}],[0,"timer","tokio","Utilities for tracking time.",null,null],[3,"Deadline","tokio::timer","Allows a given `Future` to execute until the specified deadline.",null,null],[3,"DeadlineError","","Error returned by `Deadline` future.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Interval","","A stream representing notifications at fixed interval",null,null],[3,"Delay","","A future that completes at a specified instant in time.",null,null],[0,"util","tokio","Utilities for working with Tokio.",null,null],[8,"FutureExt","tokio::util","An extension trait for `Future` that provides a variety of convenient combinator functions.",null,null],[11,"deadline","","Creates a new future which allows `self` until `deadline`.",18,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"deadline"}}],[0,"io","tokio","Asynchronous I/O.",null,null],[8,"AsyncRead","tokio::io","Read bytes asynchronously.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to `read`. Returns `true` if the supplied buffer was zeroed out.",19,null],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",19,null],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`, returning how many bytes were read.",19,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",19,null],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",20,null],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",20,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[10,"shutdown","","Initiates or attempts to shut down this writer, returning success when the I/O connection has completely shut down.",20,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes were written.",20,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[5,"stdin","","Constructs a new handle to the standard input of the current process.",null,{"o":{"n":"stdin"}}],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[5,"stdout","","Constructs a new handle to the standard output of the current process.",null,{"o":{"n":"stdout"}}],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[5,"stderr","","Constructs a new handle to the standard error of the current process.",null,{"o":{"n":"stderr"}}],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[5,"copy","","Creates a future which represents copying all the bytes from one object to another.",null,{"i":[{"n":"r"},{"n":"w"}],"o":{"n":"copy"}}],[3,"Copy","","A future which will copy all data from a reader into a writer.",null,null],[5,"flush","","Creates a future which will entirely flush an I/O object and then yield the object itself.",null,{"i":[{"n":"a"}],"o":{"n":"flush"}}],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[5,"lines","","Creates a new stream from the I/O object given representing the lines of input that are found on `A`.",null,{"i":[{"n":"a"}],"o":{"n":"lines"}}],[3,"Lines","","Combinator created by the top-level `lines` method which is a stream over the lines of text on an I/O object.",null,null],[5,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",null,{"i":[{"n":"a"},{"n":"t"}],"o":{"n":"readexact"}}],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[5,"read_to_end","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided.",null,{"i":[{"n":"a"},{"g":["u8"],"n":"vec"}],"o":{"n":"readtoend"}}],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[5,"read_until","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided until the delimiter `byte` is reached. This method is the async equivalent to [`BufRead::read_until`].",null,{"i":[{"n":"a"},{"n":"u8"},{"g":["u8"],"n":"vec"}],"o":{"n":"readuntil"}}],[3,"ReadUntil","","A future which can be used to easily read the contents of a stream into a vector until the delimiter is reached.",null,null],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",null,null],[5,"shutdown","","Creates a future which will entirely shutdown an I/O object and then yield the object itself.",null,{"i":[{"n":"a"}],"o":{"n":"shutdown"}}],[3,"Shutdown","","A future used to fully shutdown an I/O object.",null,null],[5,"write_all","","Creates a future that will write the entire contents of the buffer `buf` to the stream `a` provided.",null,{"i":[{"n":"a"},{"n":"t"}],"o":{"n":"writeall"}}],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",null,null],[3,"Error","","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits.",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",21,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",21,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",21,null],[13,"ConnectionReset","","The connection was reset by the remote server.",21,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",21,null],[13,"NotConnected","","The network operation failed because it was not connected yet.",21,null],[13,"AddrInUse","","A socket address could not be bound because the address is already in use elsewhere.",21,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not local.",21,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",21,null],[13,"AlreadyExists","","An entity already exists, often a file.",21,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was requested to not occur.",21,null],[13,"InvalidInput","","A parameter was incorrect.",21,null],[13,"InvalidData","","Data not valid for the operation were encountered.",21,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be canceled.",21,null],[13,"WriteZero","","An error returned when an operation could not be completed because a call to [`write`] returned [`Ok(0)`].",21,null],[13,"Interrupted","","This operation was interrupted.",21,null],[13,"Other","","Any I/O error not part of this list.",21,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely.",21,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning how many bytes were read.",22,null],[11,"initializer","","Determines if this `Read`er can work with buffers of uninitialized memory.",22,{"i":[{"n":"self"}],"o":{"n":"initializer"}}],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",22,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["usize","error"],"n":"result"}}],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to `buf`.",22,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["usize","error"],"n":"result"}}],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",22,null],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Read`.",22,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over its bytes.",22,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"chars","","Transforms this `Read` instance to an [`Iterator`] over [`char`]s.",22,{"i":[{"n":"self"}],"o":{"n":"chars"}}],[11,"chain","","Creates an adaptor which will chain this stream with another.",22,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"chain"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",22,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"take"}}],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",23,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered contents reach their destination.",23,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"write_all","","Attempts to write an entire buffer into this write.",23,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error encountered.",23,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"g":["error"],"n":"result"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Write`.",23,{"i":[{"n":"self"}],"o":{"n":"self"}}],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",null,null],[8,"AsyncRead","tokio::prelude","Read bytes asynchronously.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to `read`. Returns `true` if the supplied buffer was zeroed out.",19,null],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",19,null],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`, returning how many bytes were read.",19,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",19,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",19,null],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",20,null],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",20,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[10,"shutdown","","Initiates or attempts to shut down this writer, returning success when the I/O connection has completely shut down.",20,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes were written.",20,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning how many bytes were read.",22,null],[11,"initializer","","Determines if this `Read`er can work with buffers of uninitialized memory.",22,{"i":[{"n":"self"}],"o":{"n":"initializer"}}],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",22,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["usize","error"],"n":"result"}}],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to `buf`.",22,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["usize","error"],"n":"result"}}],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",22,null],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Read`.",22,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over its bytes.",22,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"chars","","Transforms this `Read` instance to an [`Iterator`] over [`char`]s.",22,{"i":[{"n":"self"}],"o":{"n":"chars"}}],[11,"chain","","Creates an adaptor which will chain this stream with another.",22,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"chain"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",22,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"take"}}],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",23,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered contents reach their destination.",23,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"write_all","","Attempts to write an entire buffer into this write.",23,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error encountered.",23,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"g":["error"],"n":"result"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Write`.",23,{"i":[{"n":"self"}],"o":{"n":"self"}}],[8,"Future","","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",24,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",24,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",24,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"wait","","Block the current thread until this future is resolved.",24,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",24,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",24,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",24,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",24,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"join"}}],[11,"join3","","Same as `join`, but with more futures.",24,{"i":[{"n":"self"},{"n":"b"},{"n":"c"}],"o":{"n":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",24,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"}],"o":{"n":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",24,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"},{"n":"e"}],"o":{"n":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",24,{"i":[{"n":"self"}],"o":{"n":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",24,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",24,{"i":[{"n":"self"}],"o":{"n":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",24,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",24,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",24,{"i":[{"n":"self"}],"o":{"n":"shared"}}],[0,"future","","Futures",null,null],[8,"Future","tokio::prelude::future","Trait for types which are a placeholder of a value that may become available at some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is successful.",24,null],[16,"Error","","The type of error that this future will resolve with if it fails in a normal fashion.",24,null],[10,"poll","","Query this future to see if its value has become available, registering interest if it is not.",24,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"wait","","Block the current thread until this future is resolved.",24,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"from_err","","Map this future's error to any error implementing `From` for this future's `Error`, returning a new future.",24,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"select","","Waits for either one of two futures to complete.",24,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select"}}],[11,"select2","","Waits for either one of two differently-typed futures to complete.",24,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"select2"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",24,{"i":[{"n":"self"},{"n":"b"}],"o":{"n":"join"}}],[11,"join3","","Same as `join`, but with more futures.",24,{"i":[{"n":"self"},{"n":"b"},{"n":"c"}],"o":{"n":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",24,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"}],"o":{"n":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",24,{"i":[{"n":"self"},{"n":"b"},{"n":"c"},{"n":"d"},{"n":"e"}],"o":{"n":"join5"}}],[11,"into_stream","","Convert this future into a single element stream.",24,{"i":[{"n":"self"}],"o":{"n":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",24,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",24,{"i":[{"n":"self"}],"o":{"n":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",24,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",24,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",24,{"i":[{"n":"self"}],"o":{"n":"shared"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",25,null],[16,"Item","","The item that the future may resolve with.",25,null],[16,"Error","","The error that the future may resolve with.",25,null],[10,"into_future","","Consumes this object and produces a future.",25,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",26,null],[16,"Error","","Possible errors during conversion.",26,null],[10,"future_from","","Consume the given value, beginning the conversion.",26,null],[8,"Executor","","A trait for types which can spawn fresh futures.",null,null],[10,"execute","","Spawns a future to run on this `Executor`, typically in the \"background\".",27,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["executeerror"],"n":"result"}}],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",null,null],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the `Execute::spawn` function.",null,null],[13,"Shutdown","","This executor has shut down and will no longer accept new futures to spawn.",28,null],[13,"NoCapacity","","This executor has no more capacity to run more futures. Other futures need to finish before this executor can accept another.",28,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"i":[{"n":"f"}],"o":{"n":"pollfn"}}],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Err","","A future representing a value that is immediately ready.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"i":[{"n":"i"}],"o":{"n":"joinall"}}],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[4,"Loop","","The status of a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",29,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",29,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"i":[{"n":"s"},{"n":"f"}],"o":{"n":"loopfn"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"i":[{"n":"i"}],"o":{"n":"selectall"}}],[3,"Empty","","A future which is never resolved.",null,null],[5,"failed","","Creates a \"leaf future\" from an immediate value of a failed computation.",null,{"i":[{"n":"e"}],"o":{"n":"futureresult"}}],[3,"Collect","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"o":{"n":"empty"}}],[5,"done","","Creates a new \"leaf future\" which will resolve with the given result.",null,{"i":[{"n":"result"}],"o":{"n":"futureresult"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"i":[{"n":"f"}],"o":{"n":"lazy"}}],[3,"Lazy","","A future which defers creation of the actual future until a callback is scheduled.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[4,"Either","","Combines two different futures yielding the same item and error types into a single type.",null,null],[13,"A","","First branch of the type",30,null],[13,"B","","Second branch of the type",30,null],[5,"ok","","Creates a \"leaf future\" from an immediate value of a finished and successful computation.",null,{"i":[{"n":"t"}],"o":{"n":"futureresult"}}],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just the result of the final future.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"i":[{"n":"i"}],"o":{"n":"selectok"}}],[3,"Select2","","Future for the `select2` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future (whether it is success of error) and emits EOF after that.",null,null],[8,"Stream","tokio::prelude","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",31,null],[16,"Error","","The type of error this stream may generate.",31,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",31,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",31,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",31,{"i":[{"n":"self"}],"o":{"n":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",31,{"i":[{"n":"self"}],"o":{"n":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",31,{"i":[{"n":"self"}],"o":{"n":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",31,{"i":[{"n":"self"}],"o":{"n":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",31,{"i":[{"n":"self"},{"n":"t"},{"n":"f"}],"o":{"n":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",31,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",31,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",31,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",31,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",31,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",31,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",31,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",31,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",31,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",31,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",31,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"zip"}}],[11,"chain","","Adapter for chaining two stream.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",31,{"i":[{"n":"self"}],"o":{"n":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",31,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",31,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspecterr"}}],[0,"stream","","Asynchronous streams",null,null],[0,"futures_unordered","tokio::prelude::stream","An unbounded set of futures.",null,null],[3,"FuturesUnordered","tokio::prelude::stream::futures_unordered","An unbounded set of futures.",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[8,"Stream","tokio::prelude::stream","A stream of values, not all of which may have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",31,null],[16,"Error","","The type of error this stream may generate.",31,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if the stream is finished.",31,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"wait","","Creates an iterator which blocks the current thread until each item of this stream is resolved.",31,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"into_future","","Converts this stream into a `Future`.",31,{"i":[{"n":"self"}],"o":{"n":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",31,{"i":[{"n":"self"}],"o":{"n":"collect"}}],[11,"concat2","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",31,{"i":[{"n":"self"}],"o":{"n":"concat2"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",31,{"i":[{"n":"self"}],"o":{"n":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",31,{"i":[{"n":"self"},{"n":"t"},{"n":"f"}],"o":{"n":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",31,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",31,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",31,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"foreach"}}],[11,"from_err","","Map this stream's error to any error implementing `From` for this stream's `Error`, returning a new stream.",31,{"i":[{"n":"self"}],"o":{"n":"fromerr"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",31,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",31,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",31,{"i":[{"n":"self"}],"o":{"n":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",31,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",31,{"i":[{"n":"self"}],"o":{"n":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",31,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",31,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bufferunordered"}}],[11,"merge","","An adapter for merging the output of two streams.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"merge"}}],[11,"zip","","An adapter for zipping two streams together.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"zip"}}],[11,"chain","","Adapter for chaining two stream.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",31,{"i":[{"n":"self"}],"o":{"n":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",31,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",31,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",31,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"inspecterr"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"i":[{"n":"i"}],"o":{"n":"futuresunordered"}}],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"i":[{"n":"i"}],"o":{"n":"futuresordered"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"i":[{"n":"f"}],"o":{"n":"pollfn"}}],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a blocking iterator.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",null,null],[12,"0","","",32,null],[12,"1","","",32,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Concat2","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"i":[{"n":"t"},{"n":"f"}],"o":{"n":"unfold"}}],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"i"}],"o":{"n":"iterok"}}],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"Iter","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"j"}],"o":{"n":"iter"}}],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[5,"empty","","Creates a stream which contains no elements.",null,{"o":{"n":"empty"}}],[5,"once","","Creates a stream of single element",null,{"i":[{"n":"result"}],"o":{"n":"once"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"i":[{"n":"t"}],"o":{"n":"repeat"}}],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"i":[{"n":"j"}],"o":{"n":"iterresult"}}],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of the channel is dropped",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Sender","","The transmission end of a channel which is used to send values.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or both of the underlying streams.",null,null],[13,"First","","An item from the first stream",33,null],[13,"Second","","An item from the second stream",33,null],[13,"Both","","Items from both streams",33,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"FutureSender","","Future returned by `Sender::send`.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"FromErr","","A stream combinator to change the error type of a stream.",null,null],[8,"Sink","tokio::prelude","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",34,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",34,null],[10,"start_send","","Begin the process of sending a value to the sink.",34,null],[10,"poll_complete","","Flush all output from this sink, if necessary.",34,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","A method to indicate that no more values will ever be pushed into this sink.",34,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"wait","","Creates a new object which will produce a synchronous sink.",34,{"i":[{"n":"self"}],"o":{"n":"wait"}}],[11,"with","","Composes a function in front of the sink.",34,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",34,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",34,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"sinkmaperr"}}],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for this sink's `Error`, returning a new sink.",34,{"i":[{"n":"self"}],"o":{"n":"sinkfromerr"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",34,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",34,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"fanout"}}],[11,"flush","","A future that completes when the sink has finished processing all pending requests.",34,{"i":[{"n":"self"}],"o":{"n":"flush"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",34,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",34,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"sendall"}}],[8,"IntoFuture","","Class of types which can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",25,null],[16,"Item","","The item that the future may resolve with.",25,null],[16,"Error","","The error that the future may resolve with.",25,null],[10,"into_future","","Consumes this object and produces a future.",25,null],[4,"Async","","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",35,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",35,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has started; you must use `Sink::poll_complete` to drive the send to completion.",36,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value being sent is returned, and the current `Task` will be automatically notified again once the sink has room.",36,null],[6,"Poll","","Return type of the `Future::poll` method, indicates whether a future's value is ready or not.",null,null],[0,"task","","Tasks used to drive a future computation",null,null],[5,"spawn","tokio::prelude::task","Spawns a future or stream, returning it and the new task responsible for running it to completion.",null,{"i":[{"n":"t"}],"o":{"n":"spawn"}}],[3,"Spawn","","Representation of a spawned future/stream.",null,null],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",37,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",38,null],[3,"AtomicTask","","A synchronization primitive for task notification.",null,null],[3,"TaskRc","","A reference to a piece of data that's accessible only within a specific `Task`.",null,null],[3,"Run","","Units of work submitted to an `Executor`, currently only created internally.",null,null],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark event\" to be triggered when the task handle is used to unpark the task.",null,{"i":[{"n":"unparkevent"},{"n":"f"}],"o":{"n":"r"}}],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"Task","","A handle to a \"task\", which represents a single lightweight \"thread\" of execution driving a future to completion.",null,null],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to make progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make progress.",39,null],[5,"current","","Returns a handle to the current task to call `notify` at a later date.",null,{"o":{"n":"task"}}],[5,"init","","Initialize the `futures` task system.",null,null],[8,"FutureExt","tokio::prelude","An extension trait for `Future` that provides a variety of convenient combinator functions.",null,null],[11,"deadline","tokio::util","Creates a new future which allows `self` until `deadline`.",18,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"deadline"}}],[11,"eq","tokio::io","",21,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"bool"}}],[11,"hash","","",21,null],[11,"cmp","","",21,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"n":"ordering"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"from","","",40,{"i":[{"n":"intoinnererror"}],"o":{"n":"error"}}],[11,"from","","",40,{"i":[{"n":"errorkind"}],"o":{"n":"error"}}],[11,"from","","",40,{"i":[{"n":"nulerror"}],"o":{"n":"error"}}],[11,"description","","",40,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",40,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"partial_cmp","","",21,{"i":[{"n":"self"},{"n":"errorkind"}],"o":{"g":["ordering"],"n":"option"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"from_iter","tokio::prelude::stream","",41,{"i":[{"n":"t"}],"o":{"n":"futuresordered"}}],[11,"from_iter","tokio::prelude::stream::futures_unordered","",42,{"i":[{"n":"t"}],"o":{"n":"futuresunordered"}}],[11,"clone","tokio::prelude::future","",43,{"i":[{"n":"self"}],"o":{"n":"shared"}}],[11,"clone","tokio::prelude::task","",44,{"i":[{"n":"self"}],"o":{"n":"unparkevent"}}],[11,"clone","tokio::prelude::future","",45,{"i":[{"n":"self"}],"o":{"n":"futureresult"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"executeerrorkind"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"shareditem"}}],[11,"clone","tokio::prelude::task","",47,{"i":[{"n":"self"}],"o":{"n":"taskrc"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"task"}}],[11,"clone","tokio::prelude","",35,{"i":[{"n":"self"}],"o":{"n":"async"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"asyncsink"}}],[11,"clone","tokio::prelude::future","",49,{"i":[{"n":"self"}],"o":{"n":"sharederror"}}],[11,"eq","tokio::prelude","",35,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"async"}],"o":{"n":"bool"}}],[11,"eq","tokio::prelude::future","",28,{"i":[{"n":"self"},{"n":"executeerrorkind"}],"o":{"n":"bool"}}],[11,"eq","tokio::prelude","",36,{"i":[{"n":"self"},{"n":"asyncsink"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"asyncsink"}],"o":{"n":"bool"}}],[11,"poll","tokio::prelude::future","",50,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",51,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",52,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",53,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",54,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",55,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",56,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",57,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",58,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",59,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",43,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",60,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",61,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",62,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",63,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",64,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",65,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",66,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",67,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",30,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",68,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",69,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",70,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",71,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",72,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",73,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",74,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",75,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",76,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",77,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",78,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",79,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",45,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",80,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",81,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"start_send","","",83,null],[11,"poll_complete","","",83,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",83,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",84,null],[11,"poll_complete","","",84,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",84,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",85,null],[11,"poll_complete","","",85,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",85,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",86,null],[11,"poll_complete","","",86,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",86,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",87,null],[11,"poll_complete","","",87,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",87,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",88,null],[11,"poll_complete","","",88,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",88,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",89,null],[11,"poll_complete","","",89,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",89,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",90,null],[11,"poll_complete","","",90,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",90,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",91,null],[11,"poll_complete","","",91,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",91,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",92,null],[11,"poll_complete","","",92,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",92,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",93,null],[11,"poll_complete","","",93,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",93,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",94,null],[11,"poll_complete","","",94,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",94,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",95,null],[11,"poll_complete","","",95,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",95,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",96,null],[11,"poll_complete","","",96,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",96,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",97,null],[11,"poll_complete","","",97,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",97,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",98,null],[11,"poll_complete","","",98,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",98,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",99,null],[11,"poll_complete","","",99,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",99,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",100,null],[11,"poll_complete","","",100,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",100,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",101,null],[11,"poll_complete","","",101,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",101,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",102,null],[11,"poll_complete","","",102,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",102,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",103,null],[11,"poll_complete","","",103,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",103,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"from","tokio::prelude::future","",45,{"i":[{"n":"result"}],"o":{"n":"futureresult"}}],[11,"from","tokio::prelude","",35,{"i":[{"n":"t"}],"o":{"n":"async"}}],[11,"poll","tokio::prelude::stream","",84,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",104,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",90,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",105,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",106,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",98,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",100,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",107,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",108,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",109,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",110,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",88,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",87,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",111,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",112,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",113,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",94,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",114,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",115,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",41,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",99,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",103,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",116,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",86,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",83,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",91,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",93,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",117,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",97,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",95,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::future","",118,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",85,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",101,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",102,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",119,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",120,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream::futures_unordered","",42,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","tokio::prelude::stream","",92,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",96,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"drop","tokio::prelude::stream::futures_unordered","",42,null],[11,"drop","tokio::prelude::future","",43,null],[11,"description","tokio::prelude::stream","",82,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","tokio::prelude::future","",49,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",49,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"description","tokio::prelude::stream","",32,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"next","tokio::prelude::stream::futures_unordered","",121,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",121,null],[11,"next","tokio::prelude::stream","",122,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"deref","tokio::prelude::future","",46,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref","","",49,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"fmt","tokio::prelude::stream","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream::futures_unordered","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::task","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::task","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::task","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::task","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",103,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream::futures_unordered","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::task","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",102,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::task","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::future","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::prelude::stream","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",104,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"default","tokio::prelude::task","",128,{"o":{"n":"atomictask"}}],[11,"write","tokio::io","",129,null],[11,"flush","","",129,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"read","","",130,null],[11,"shutdown","","",129,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"write_buf","","",129,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[11,"read_buf","","",130,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",131,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",132,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",133,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",134,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",135,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",136,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",137,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",138,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"fmt","","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"spawn","tokio::executor","",139,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"status","","",139,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"defaultexecutor"}}],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",140,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"drop","tokio::fs","",141,null],[11,"from","tokio::fs::file","",142,{"i":[{"n":"openoptions"}],"o":{"n":"openoptions"}}],[11,"write","tokio::io","",143,null],[11,"flush","","",143,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"write","tokio::fs","",141,null],[11,"flush","","",141,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"write","tokio::io","",144,null],[11,"flush","","",144,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"read","tokio::fs","",141,null],[11,"read","tokio::io","",145,null],[11,"poll","tokio::fs::file","",146,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",147,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",148,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",149,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"openoptions"}}],[11,"shutdown","tokio::fs","",141,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"shutdown","tokio::io","",143,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"shutdown","","",144,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"fmt","tokio::fs::file","",147,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",148,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::io","",144,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",145,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::fs","",141,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::fs::file","",149,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",142,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::io","",143,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","tokio::fs::file","",146,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"prepare_uninitialized_buffer","tokio::fs","",141,null],[11,"prepare_uninitialized_buffer","tokio::io","",145,null],[11,"drop","tokio::executor::thread_pool","",150,null],[11,"execute","","",151,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["executeerror"],"n":"result"}}],[11,"status","","",151,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"spawn","","",151,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"clone","","",151,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"poll","","",152,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"fmt","","",151,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",152,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",150,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",153,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"drop","tokio::reactor","",154,null],[11,"drop","","",155,null],[11,"shutdown","","",155,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"write","","",155,null],[11,"flush","","",155,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"read","","",155,null],[11,"clone","","",156,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"unpark","","",156,null],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily binds to a reactor.",156,{"o":{"n":"handle"}}],[11,"unpark","","",157,null],[11,"park","","",157,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"park_timeout","","",157,{"i":[{"n":"self"},{"n":"duration"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",157,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",158,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",155,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",159,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",156,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",154,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"poll","tokio::timer","",160,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"fmt","","",161,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",162,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",162,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"description","","",161,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"poll","","",163,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",164,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"fmt","","",161,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",162,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",164,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",163,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",160,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"write","tokio::net","",165,null],[11,"flush","","",165,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"read","","",165,null],[11,"as_raw_fd","","",165,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"as_raw_fd","","",166,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"poll","","",167,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",168,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"shutdown","","",165,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"write_buf","","",165,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[11,"fmt","","",165,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",167,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",168,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",166,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"prepare_uninitialized_buffer","","",165,null],[11,"read_buf","","",165,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["async","error"],"n":"result"}}],[11,"as_raw_fd","","",169,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"poll","","",170,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",171,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll","","",172,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"start_send","","",170,null],[11,"poll_complete","","",170,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",170,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"fmt","","",171,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",170,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",169,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",172,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"current","tokio::executor","Returns a handle to the default executor for the current context.",139,{"o":{"n":"defaultexecutor"}}],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor failure.",140,{"o":{"n":"spawnerror"}}],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at capacity failure.",140,{"o":{"n":"spawnerror"}}],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor failure.",140,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at capacity failure.",140,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","tokio::executor::thread_pool","Returns a new thread pool builder initialized with default configuration values.",153,{"o":{"n":"builder"}}],[11,"pool_size","","Set the maximum number of worker threads for the thread pool instance.",153,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"builder"}}],[11,"max_blocking","","Set the maximum number of concurrent blocking sections.",153,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"builder"}}],[11,"keep_alive","","Set the worker thread keep alive duration",153,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"builder"}}],[11,"name_prefix","","Set name prefix of threads spawned by the scheduler",153,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"builder"}}],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",153,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"builder"}}],[11,"around_worker","","Execute function `f` on each worker thread.",153,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"builder"}}],[11,"after_start","","Execute function `f` after each thread is started but before it starts doing work.",153,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"builder"}}],[11,"before_stop","","Execute function `f` before each thread stops.",153,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"builder"}}],[11,"custom_park","","Customize the `park` instance used by each worker thread.",153,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"builder"}}],[11,"build","","Create the configured `ThreadPool`.",153,{"i":[{"n":"self"}],"o":{"n":"threadpool"}}],[11,"spawn","","Spawn a future onto the thread pool",151,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"new","","Create a new `ThreadPool` with default values.",150,{"o":{"n":"threadpool"}}],[11,"spawn","","Spawn a future onto the thread pool.",150,null],[11,"sender","","Return a reference to the sender handle",150,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"sender_mut","","Return a mutable reference to the sender handle",150,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"shutdown_on_idle","","Shutdown the pool once it becomes idle.",150,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown","","Shutdown the pool",150,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown_now","","Shutdown the pool immediately",150,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"open","tokio::fs","Attempts to open a file in read-only mode.",141,{"i":[{"n":"p"}],"o":{"n":"openfuture"}}],[11,"create","","Opens a file in write-only mode.",141,{"i":[{"n":"p"}],"o":{"n":"createfuture"}}],[11,"poll_seek","","Seek to an offset, in bytes, in a stream.",141,{"i":[{"n":"self"},{"n":"seekfrom"}],"o":{"g":["async","error"],"n":"result"}}],[11,"seek","","Seek to an offset, in bytes, in a stream.",141,{"i":[{"n":"self"},{"n":"seekfrom"}],"o":{"n":"seekfuture"}}],[11,"poll_sync_all","","Attempts to sync all OS-internal metadata to disk.",141,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll_sync_data","","This function is similar to `poll_sync_all`, except that it may not synchronize file metadata to the filesystem.",141,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll_set_len","","Truncates or extends the underlying file, updating the size of this file to become size.",141,{"i":[{"n":"self"},{"n":"u64"}],"o":{"g":["async","error"],"n":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",141,{"i":[{"n":"self"}],"o":{"n":"metadatafuture"}}],[11,"poll_metadata","","Queries metadata about the underlying file.",141,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll_try_clone","","Create a new `File` instance that shares the same underlying file handle as the existing `File` instance. Reads, writes, and seeks will affect both File instances simultaneously.",141,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll_set_permissions","","Changes the permissions on the underlying file.",141,{"i":[{"n":"self"},{"n":"permissions"}],"o":{"g":["async","error"],"n":"result"}}],[11,"into_std","","Destructures the `tokio_fs::File` into a [`std::fs::File`][std].",141,{"i":[{"n":"self"}],"o":{"n":"file"}}],[11,"new","tokio::fs::file","Creates a blank new set of options ready for configuration.",142,{"o":{"n":"openoptions"}}],[11,"read","","See the underlying [`read`] call for details.",142,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"write","","See the underlying [`write`] call for details.",142,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"append","","See the underlying [`append`] call for details.",142,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"truncate","","See the underlying [`truncate`] call for details.",142,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"create","","See the underlying [`create`] call for details.",142,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"create_new","","See the underlying [`create_new`] call for details.",142,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",142,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"openfuture"}}],[11,"connect","tokio::net","Create a new TCP stream connected to the specified address.",165,{"i":[{"n":"socketaddr"}],"o":{"n":"connectfuture"}}],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",165,{"i":[{"n":"tcpstream"},{"n":"handle"}],"o":{"g":["tcpstream","error"],"n":"result"}}],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpStream`, connecting it to the address specified.",165,{"i":[{"n":"tcpstream"},{"n":"socketaddr"},{"n":"handle"}],"o":{"n":"connectfuture"}}],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",165,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",165,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"local_addr","","Returns the local address that this stream is bound to.",165,{"i":[{"n":"self"}],"o":{"g":["socketaddr","error"],"n":"result"}}],[11,"peer_addr","","Returns the remote address that this stream is connected to.",165,{"i":[{"n":"self"}],"o":{"g":["socketaddr","error"],"n":"result"}}],[11,"poll_peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",165,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",165,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"g":["error"],"n":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",165,{"i":[{"n":"self"}],"o":{"g":["bool","error"],"n":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",165,{"i":[{"n":"self"},{"n":"bool"}],"o":{"g":["error"],"n":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",165,{"i":[{"n":"self"}],"o":{"g":["usize","error"],"n":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",165,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["error"],"n":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",165,{"i":[{"n":"self"}],"o":{"g":["usize","error"],"n":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",165,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["error"],"n":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",165,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",165,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["error"],"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",165,{"i":[{"n":"self"}],"o":{"g":["u32","error"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",165,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"linger","","Reads the linger duration for this socket by getting the `SO_LINGER` option.",165,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[11,"set_linger","","Sets the linger duration of this socket by setting the `SO_LINGER` option.",165,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["error"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",165,{"i":[{"n":"self"}],"o":{"g":["tcpstream","error"],"n":"result"}}],[11,"bind","","Create a new TCP listener associated with this event loop.",166,{"i":[{"n":"socketaddr"}],"o":{"g":["tcplistener","error"],"n":"result"}}],[11,"poll_accept","","Attempt to accept a connection and create a new connected `TcpStream` if successful.",166,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected `TcpStream` if successful.",166,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"from_std","","Create a new TCP listener from the standard library's TCP listener.",166,{"i":[{"n":"tcplistener"},{"n":"handle"}],"o":{"g":["tcplistener","error"],"n":"result"}}],[11,"local_addr","","Returns the local address that this listener is bound to.",166,{"i":[{"n":"self"}],"o":{"g":["socketaddr","error"],"n":"result"}}],[11,"incoming","","Consumes this listener, returning a stream of the sockets this listener accepts.",166,{"i":[{"n":"self"}],"o":{"n":"incoming"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",166,{"i":[{"n":"self"}],"o":{"g":["u32","error"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",166,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"bind","","This function will create a new UDP socket and attempt to bind it to the `addr` provided.",169,{"i":[{"n":"socketaddr"}],"o":{"g":["udpsocket","error"],"n":"result"}}],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket provided.",169,{"i":[{"n":"udpsocket"},{"n":"handle"}],"o":{"g":["udpsocket","error"],"n":"result"}}],[11,"local_addr","","Returns the local address that this socket is bound to.",169,{"i":[{"n":"self"}],"o":{"g":["socketaddr","error"],"n":"result"}}],[11,"connect","","Connects the UDP socket setting the default destination for send() and limiting packets that are read via recv from the address specified in `addr`.",169,{"i":[{"n":"self"},{"n":"socketaddr"}],"o":{"g":["error"],"n":"result"}}],[11,"poll_send","","Sends data on the socket to the remote address to which it is connected.",169,null],[11,"poll_recv","","Receives a single datagram message on the socket from the remote address to which it is connected. On success, returns the number of bytes read.",169,null],[11,"poll_send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",169,null],[11,"send_dgram","","Creates a future that will write the entire contents of the buffer `buf` provided as a datagram to this socket.",169,{"i":[{"n":"self"},{"n":"t"},{"n":"socketaddr"}],"o":{"n":"senddgram"}}],[11,"poll_recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",169,null],[11,"recv_dgram","","Creates a future that receive a datagram to be written to the buffer provided.",169,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"recvdgram"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",169,{"i":[{"n":"self"}],"o":{"g":["bool","error"],"n":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",169,{"i":[{"n":"self"},{"n":"bool"}],"o":{"g":["error"],"n":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",169,{"i":[{"n":"self"}],"o":{"g":["bool","error"],"n":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",169,{"i":[{"n":"self"},{"n":"bool"}],"o":{"g":["error"],"n":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",169,{"i":[{"n":"self"}],"o":{"g":["u32","error"],"n":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",169,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",169,{"i":[{"n":"self"}],"o":{"g":["bool","error"],"n":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",169,{"i":[{"n":"self"},{"n":"bool"}],"o":{"g":["error"],"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",169,{"i":[{"n":"self"}],"o":{"g":["u32","error"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",169,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",169,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"g":["error"],"n":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",169,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",169,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"g":["error"],"n":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",169,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"new","","Create a new `UdpFramed` backed by the given socket and codec.",170,{"i":[{"n":"udpsocket"},{"n":"c"}],"o":{"n":"udpframed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",170,{"i":[{"n":"self"}],"o":{"n":"udpsocket"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",170,{"i":[{"n":"self"}],"o":{"n":"udpsocket"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",170,{"i":[{"n":"self"}],"o":{"n":"udpsocket"}}],[11,"new","tokio::reactor","Creates a new event loop, returning any error that happened during the creation.",157,{"o":{"g":["reactor","error"],"n":"result"}}],[11,"handle","","Returns a handle to this event loop which can be sent across threads and can be used as a proxy to the event loop itself.",157,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"set_fallback","","Configures the fallback handle to be returned from `Handle::default`.",157,{"i":[{"n":"self"}],"o":{"g":["setfallbackerror"],"n":"result"}}],[11,"turn","","Performs one iteration of the event loop, blocking on waiting for events for at most `max_wait` (forever if `None`).",157,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["turn","error"],"n":"result"}}],[11,"is_idle","","Returns true if the reactor is currently idle.",157,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"background","","Run this reactor on a background thread.",157,{"i":[{"n":"self"}],"o":{"g":["background","error"],"n":"result"}}],[11,"current","","Returns a handle to the current reactor.",156,{"o":{"n":"handle"}}],[11,"handle","","Returns a reference to the reactor handle.",154,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",154,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown_now","","Shutdown the reactor immediately",154,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"forget","","Run the reactor on its thread until the process terminates.",154,null],[11,"new","","Create a new `Registration`.",158,{"o":{"n":"registration"}}],[11,"register","","Register the I/O resource with the default reactor.",158,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["bool","error"],"n":"result"}}],[11,"deregister","","Deregister the I/O resource from the reactor it is associated with.",158,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["error"],"n":"result"}}],[11,"register_with","","Register the I/O resource with the specified reactor.",158,{"i":[{"n":"self"},{"n":"t"},{"n":"handle"}],"o":{"g":["bool","error"],"n":"result"}}],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",158,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"take_read_ready","","Consume any pending read readiness event.",158,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness stream.",158,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"take_write_ready","","Consume any pending write readiness event.",158,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"result"}}],[11,"new","","Creates a new `PollEvented` associated with the default reactor.",155,{"i":[{"n":"e"}],"o":{"n":"pollevented"}}],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified reactor.",155,{"i":[{"n":"e"},{"n":"handle"}],"o":{"g":["pollevented","error"],"n":"result"}}],[11,"get_ref","","Returns a shared reference to the underlying I/O object this readiness stream is wrapping.",155,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O object this readiness stream is wrapping.",155,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"into_inner","","Consumes self, returning the inner I/O object",155,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",155,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["async","error"],"n":"result"}}],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and registers the current task to be notified once a read readiness event is received.",155,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["error"],"n":"result"}}],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",155,{"i":[{"n":"self"}],"o":{"g":["async","error"],"n":"result"}}],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and registers the current task to be notified once a write readiness event is received.",155,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"new","tokio::timer","Create a new `Deadline` that completes when `future` completes or when `deadline` is reached.",163,{"i":[{"n":"t"},{"n":"instant"}],"o":{"n":"deadline"}}],[11,"get_ref","","Gets a reference to the underlying future in this deadline.",163,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying future in this deadline.",163,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes this deadline, returning the underlying future.",163,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"inner","","Create a new `DeadlineError` representing the inner future completing with `Err`.",161,{"i":[{"n":"t"}],"o":{"n":"deadlineerror"}}],[11,"is_inner","","Returns `true` if the error was caused by the inner future completing with `Err`.",161,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_inner","","Consumes `self`, returning the inner future error.",161,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"elapsed","","Create a new `DeadlineError` representing the inner future not completing before the deadline is reached.",161,{"o":{"n":"deadlineerror"}}],[11,"is_elapsed","","Returns `true` if the error was caused by the inner future not completing before the deadline is reached.",161,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"timer","","Creates a new `DeadlineError` representing an error encountered by the timer implementation",161,{"i":[{"n":"error"}],"o":{"n":"deadlineerror"}}],[11,"is_timer","","Returns `true` if the error was caused by the timer.",161,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_timer","","Consumes `self`, returning the error raised by the timer implementation.",161,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"shutdown","","Create an error representing a shutdown timer.",162,{"o":{"n":"error"}}],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being shutdown.",162,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"at_capacity","","Create an error representing a timer at capacity.",162,{"o":{"n":"error"}}],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being at capacity.",162,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Create a new `Interval` that starts at `at` and yields every `duration` interval after that.",160,{"i":[{"n":"instant"},{"n":"duration"}],"o":{"n":"interval"}}],[11,"new_interval","","Creates new `Interval` that yields with interval of `duration`.",160,{"i":[{"n":"duration"}],"o":{"n":"interval"}}],[11,"new","","Create a new `Delay` instance that elapses at `deadline`.",164,{"i":[{"n":"instant"}],"o":{"n":"delay"}}],[11,"deadline","","Returns the instant at which the future will complete.",164,{"i":[{"n":"self"}],"o":{"n":"instant"}}],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",164,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"reset","","Reset the `Delay` instance to a new deadline.",164,null],[11,"deadline","tokio::util","Creates a new future which allows `self` until `deadline`.",18,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"deadline"}}],[11,"into_inner","tokio::io","Returns the underlying I/O object.",131,{"i":[{"n":"self"}],"o":{"n":"a"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an arbitrary error payload.",40,{"i":[{"n":"errorkind"},{"n":"e"}],"o":{"n":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",40,{"o":{"n":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",40,{"i":[{"n":"i32"}],"o":{"n":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",40,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",40,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error (if any).",40,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",40,{"i":[{"n":"self"}],"o":{"g":["box"],"n":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",40,{"i":[{"n":"self"}],"o":{"n":"errorkind"}}],[11,"new","tokio::prelude::future","Create a new `ExecuteError`",126,{"i":[{"n":"executeerrorkind"},{"n":"f"}],"o":{"n":"executeerror"}}],[11,"kind","","Returns the associated reason for the error",126,{"i":[{"n":"self"}],"o":{"n":"executeerrorkind"}}],[11,"into_future","","Consumes self and returns the original future that was spawned.",126,{"i":[{"n":"self"}],"o":{"n":"f"}}],[11,"is_done","","Returns whether the underlying future has finished or not.",63,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",43,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"split","","Splits out the homogeneous type from an either of tuples.",30,null],[11,"new","tokio::prelude::stream::futures_unordered","Constructs a new, empty `FuturesUnordered`",42,{"o":{"n":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",42,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",42,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push a future into the set.",42,null],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",42,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"get_ref","tokio::prelude::stream","Acquires a reference to the underlying stream that this combinator is pulling from.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",90,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",91,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",103,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",103,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",103,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"new","","Constructs a new, empty `FuturesOrdered`",41,{"o":{"n":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",41,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",41,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"push","","Push a future into the queue.",41,null],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",97,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",122,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",122,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",122,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",87,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",87,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",87,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",100,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",100,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",100,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",83,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",83,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",83,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",84,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",84,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",84,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",96,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",96,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",96,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",106,{"i":[{"n":"self"},{"n":"splitsink"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",92,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",101,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",69,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",69,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",69,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",69,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",57,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",57,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",57,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",99,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",99,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",99,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",95,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"send","","Sends a new value along this channel to the receiver.",127,{"i":[{"n":"self"},{"n":"result"}],"o":{"n":"futuresender"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",102,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",102,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",102,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",88,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",88,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",88,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",98,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",98,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",98,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",89,{"i":[{"n":"self"},{"n":"splitstream"}],"o":{"g":["reuniteerror"],"n":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",85,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",85,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",85,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",94,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",94,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",94,{"i":[{"n":"self"}],"o":{"n":"s"}}],[11,"map","tokio::prelude","Change the success value of this `Async` with the closure provided",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",35,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",35,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"map","","Change the NotReady value of this `AsyncSink` with the closure provided",36,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"asyncsink"}}],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",36,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",36,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"poll_future","tokio::prelude::task","Polls the internal future, scheduling notifications to be sent to the `unpark` argument.",124,{"i":[{"n":"self"},{"g":["unpark"],"n":"arc"}],"o":{"g":["async"],"n":"result"}}],[11,"wait_future","","Waits for the internal future to complete, blocking this thread's execution until it does.",124,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"execute","","A specialized function to request running a future to completion on the specified executor.",124,null],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",124,{"i":[{"n":"self"},{"g":["unpark"],"n":"arc"}],"o":{"g":["async"],"n":"result"}}],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on the underlying stream.",124,{"i":[{"n":"self"}],"o":{"g":["result"],"n":"option"}}],[11,"start_send","","Invokes the underlying `start_send` method with this task in place.",124,null],[11,"poll_flush","","Invokes the underlying `poll_complete` method with this task in place.",124,{"i":[{"n":"self"},{"n":"arc"}],"o":{"g":["async"],"n":"result"}}],[11,"wait_send","","Blocks the current thread until it's able to send `value` on this sink.",124,null],[11,"wait_flush","","Blocks the current thread until it's able to flush this sink.",124,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"wait_close","","Blocks the current thread until it's able to close this sink.",124,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"get_ref","","Get a shared reference to the object the Spawn is wrapping.",124,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",124,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consume the Spawn, returning its inner object",124,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be sent to the `notify` argument.",124,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["async"],"n":"result"}}],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying stream.",124,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task in place.",124,null],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this task in place.",124,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["async"],"n":"result"}}],[11,"close_notify","","Invokes the underlying `close` method with this task in place.",124,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["async"],"n":"result"}}],[11,"new","","Construct an unpark event that will insert `id` into `set` when triggered.",44,{"i":[{"g":["eventset"],"n":"arc"},{"n":"usize"}],"o":{"n":"unparkevent"}}],[11,"new","","Create an `AtomicTask` initialized with the given `Task`",128,{"o":{"n":"atomictask"}}],[11,"register","","Registers the current task to be notified on calls to `notify`.",128,null],[11,"register_task","","Registers the provided task to be notified on calls to `notify`.",128,null],[11,"notify","","Notifies the task that last called `register`.",128,null],[11,"new","","Inserts a new piece of task-local data into this task, returning a reference to it.",47,{"i":[{"n":"a"}],"o":{"n":"taskrc"}}],[11,"with","","Operate with a reference to the underlying data.",47,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"run","","Actually run the task (invoking `poll` on its future) on the current thread.",123,null],[11,"with","","Access this task-local key, running the provided closure with a reference to the value.",125,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"notify","","Indicate that the task should attempt to poll its future in a timely fashion.",48,null],[11,"is_current","","Returns `true` when called from within the context of the task.",48,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"will_notify_current","","This function is intended as a performance optimization for structures which store a `Task` internally.",48,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[8,"Executor"],[3,"TaskExecutor"],[3,"Turn"],[3,"RunError"],[3,"RunTimeoutError"],[3,"TurnError"],[3,"BlockError"],[3,"CurrentThread"],[3,"Entered"],[3,"Handle"],[3,"Spawn"],[3,"Builder"],[3,"Builder"],[3,"Runtime"],[3,"Handle"],[3,"Shutdown"],[3,"TaskExecutor"],[3,"Runtime"],[8,"FutureExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[4,"ErrorKind"],[8,"Read"],[8,"Write"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[4,"ExecuteErrorKind"],[4,"Loop"],[4,"Either"],[8,"Stream"],[3,"ReuniteError"],[4,"MergedItem"],[8,"Sink"],[4,"Async"],[4,"AsyncSink"],[8,"Executor"],[8,"EventSet"],[8,"Unpark"],[3,"Error"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"Shared"],[3,"UnparkEvent"],[3,"Err"],[3,"SharedItem"],[3,"TaskRc"],[3,"Task"],[3,"SharedError"],[3,"Join4"],[3,"Inspect"],[3,"Join5"],[3,"Then"],[3,"OrElse"],[3,"Map"],[3,"SelectNext"],[3,"StreamFuture"],[3,"Concat2"],[3,"AndThen"],[3,"CatchUnwind"],[3,"LoopFn"],[3,"FutureSender"],[3,"Fuse"],[3,"SelectAll"],[3,"Select"],[3,"Flatten"],[3,"Collect"],[3,"Select2"],[3,"Forward"],[3,"FromErr"],[3,"SelectOk"],[3,"Lazy"],[3,"Collect"],[3,"Join"],[3,"ForEach"],[3,"MapErr"],[3,"Fold"],[3,"PollFn"],[3,"Join3"],[3,"Empty"],[3,"Concat"],[3,"SendError"],[3,"Filter"],[3,"MapErr"],[3,"Buffered"],[3,"Then"],[3,"Fuse"],[3,"Flatten"],[3,"SplitSink"],[3,"Skip"],[3,"AndThen"],[3,"InspectErr"],[3,"OrElse"],[3,"FromErr"],[3,"Chunks"],[3,"BufferUnordered"],[3,"Inspect"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Peekable"],[3,"Map"],[3,"FilterMap"],[3,"Zip"],[3,"Iter"],[3,"SplitStream"],[3,"Select"],[3,"FlattenStream"],[3,"Receiver"],[3,"Empty"],[3,"Repeat"],[3,"Unfold"],[3,"PollFn"],[3,"Merge"],[3,"IterResult"],[3,"Once"],[3,"Chain"],[3,"IntoStream"],[3,"CatchUnwind"],[3,"IterOk"],[3,"IterMut"],[3,"Wait"],[3,"Run"],[3,"Spawn"],[3,"LocalKey"],[3,"ExecuteError"],[3,"Sender"],[3,"AtomicTask"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"Lines"],[3,"ReadUntil"],[3,"Flush"],[3,"Copy"],[3,"ReadToEnd"],[3,"Shutdown"],[3,"ReadExact"],[3,"WriteAll"],[3,"DefaultExecutor"],[3,"SpawnError"],[3,"File"],[3,"OpenOptions"],[3,"Stderr"],[3,"Stdout"],[3,"Stdin"],[3,"CreateFuture"],[3,"MetadataFuture"],[3,"OpenFuture"],[3,"SeekFuture"],[3,"ThreadPool"],[3,"Sender"],[3,"Shutdown"],[3,"Builder"],[3,"Background"],[3,"PollEvented2"],[3,"Handle"],[3,"Reactor"],[3,"Registration"],[3,"Turn"],[3,"Interval"],[3,"DeadlineError"],[3,"Error"],[3,"Deadline"],[3,"Delay"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"ConnectFuture"],[3,"UdpSocket"],[3,"UdpFramed"],[3,"RecvDgram"],[3,"SendDgram"]]};
searchIndex["tokio_codec"] = {"doc":"Utilities for encoding and decoding frames.","items":[[8,"Decoder","tokio_codec","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",0,null],[16,"Error","","The type of unrecoverable frame decoding errors.",0,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",0,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["option"],"n":"result"}}],[11,"decode_eof","","A default method available to be called when there are no more bytes available to be read from the underlying I/O.",0,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["option"],"n":"result"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"framed"}}],[8,"Encoder","","Trait of helper objects to write out messages as bytes, for use with `FramedWrite`.",null,null],[16,"Item","","The type of items consumed by the `Encoder`",1,null],[16,"Error","","The type of encoding errors.",1,null],[10,"encode","","Encodes a frame into the buffer provided.",1,null],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying I/O object, using the `Encoder` and `Decoder` traits to encode and decode frames.",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed transport. It can be used to construct a new `Framed` with a different codec. It contains all current buffers and the inner transport.",null,null],[12,"io","","The inner transport used to read bytes to and write bytes to",2,null],[12,"codec","","The codec",2,null],[12,"read_buf","","The buffer with read but unprocessed data.",2,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",2,null],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",null,null],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",null,null],[3,"BytesCodec","","A simple `Codec` implementation that just ships bytes around.",null,null],[3,"LinesCodec","","A simple `Codec` implementation that splits up data into lines.",null,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bytescodec"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"bool"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"bool"}}],[11,"le","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"bool"}}],[11,"gt","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"bool"}}],[11,"ge","","",3,{"i":[{"n":"self"},{"n":"bytescodec"}],"o":{"n":"bool"}}],[11,"hash","","",3,null],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",3,{"o":{"n":"bytescodec"}}],[11,"decode","","",3,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["option","error"],"n":"result"}}],[11,"encode","","",3,{"i":[{"n":"self"},{"n":"bytes"},{"n":"bytesmut"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"linescodec"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"linescodec"}],"o":{"n":"bool"}}],[11,"hash","","",4,null],[11,"new","","Returns a `LinesCodec` for splitting up data into lines.",4,{"o":{"n":"linescodec"}}],[11,"decode","","",4,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["option","error"],"n":"result"}}],[11,"decode_eof","","",4,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["option","error"],"n":"result"}}],[11,"encode","","",4,{"i":[{"n":"self"},{"n":"string"},{"n":"bytesmut"}],"o":{"g":["error"],"n":"result"}}],[11,"start_send","","",5,null],[11,"poll_complete","","",5,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",5,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",6,null],[11,"poll_complete","","",6,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",6,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"start_send","","",7,null],[11,"poll_complete","","",7,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"close","","",7,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",7,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",5,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"poll","","",6,{"i":[{"n":"self"}],"o":{"g":["async"],"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"new","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",5,{"i":[{"n":"t"},{"n":"u"}],"o":{"n":"framed"}}],[11,"from_parts","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",5,{"i":[{"n":"framedparts"}],"o":{"n":"framed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Frame`.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Frame`.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream, the buffer with unprocessed data, and the codec.",5,{"i":[{"n":"self"}],"o":{"n":"framedparts"}}],[11,"new","","Create a new, default, `FramedParts`",2,{"i":[{"n":"t"},{"n":"u"}],"o":{"n":"framedparts"}}],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",7,{"i":[{"n":"t"},{"n":"d"}],"o":{"n":"framedread"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedRead`.",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedRead`.",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O stream.",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"decoder","","Returns a reference to the underlying decoder.",7,{"i":[{"n":"self"}],"o":{"n":"d"}}],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",7,{"i":[{"n":"self"}],"o":{"n":"d"}}],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",6,{"i":[{"n":"t"},{"n":"e"}],"o":{"n":"framedwrite"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `FramedWrite`.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `FramedWrite`.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O stream.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"encoder","","Returns a reference to the underlying decoder.",6,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",6,{"i":[{"n":"self"}],"o":{"n":"e"}}]],"paths":[[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[3,"BytesCodec"],[3,"LinesCodec"],[3,"Framed"],[3,"FramedWrite"],[3,"FramedRead"]]};
searchIndex["tokio_executor"] = {"doc":"Task execution related traits and utilities.","items":[[3,"Enter","tokio_executor","Represents an executor context.",null,null],[3,"EnterError","","An error returned by `enter` if an execution scope has already been entered.",null,null],[3,"DefaultExecutor","","Executes futures on the default executor for the current execution context.",null,null],[3,"SpawnError","","Errors returned by `Executor::spawn`.",null,null],[5,"enter","","Marks the current thread as being within the dynamic extent of an executor.",null,{"o":{"g":["enter","entererror"],"n":"result"}}],[5,"spawn","","Submits a future for execution on the default executor -- usually a threadpool.",null,{"i":[{"n":"t"}]}],[5,"with_default","","Set the default executor for the duration of the closure",null,{"i":[{"n":"t"},{"n":"enter"},{"n":"f"}],"o":{"n":"r"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"on_exit","","Register a callback to be invoked if and when the thread ceased to act as an executor.",1,{"i":[{"n":"self"},{"n":"f"}]}],[11,"make_permanent","","Treat the remainder of execution on this thread as part of an executor; used mostly for thread pool worker threads.",1,{"i":[{"n":"self"}]}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",1,{"i":[{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"defaultexecutor"}}],[11,"current","","Returns a handle to the default executor for the current context.",2,{"o":{"n":"defaultexecutor"}}],[11,"spawn","","",2,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"status","","",2,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[0,"park","","Abstraction over blocking and unblocking the current thread.",null,null],[3,"ParkThread","tokio_executor::park","Blocks the current thread using a condition variable.",null,null],[3,"ParkError","","Error returned by [`ParkThread`]",null,null],[3,"UnparkThread","","Unblocks a thread that was blocked by `ParkThread`.",null,null],[8,"Park","","Block the current thread.",null,null],[16,"Unpark","","Unpark handle type for the `Park` implementation.",3,null],[16,"Error","","Error returned by `park`",3,null],[10,"unpark","","Get a new `Unpark` handle associated with this `Park` instance.",3,null],[10,"park","","Block the current thread unless or until the token is available.",3,{"i":[{"n":"self"}],"o":{"n":"result"}}],[10,"park_timeout","","Park the current thread for at most `duration`.",3,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"result"}}],[8,"Unpark","","Unblock a thread blocked by the associated [`Park`] instance.",null,null],[10,"unpark","","Unblock a thread that is blocked by the associated `Park` handle.",4,{"i":[{"n":"self"}]}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"unparkthread"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ParkThread` handle for the current thread.",5,{"o":{"n":"parkthread"}}],[11,"unpark","","",5,null],[11,"park","","",5,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"park_timeout","","",5,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"result"}}],[11,"unpark","","",7,{"i":[{"n":"self"}]}],[8,"Executor","tokio_executor","A value that executes futures.",null,null],[10,"spawn","","Spawns a future object to run on this executor.",8,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"status","","Provides a best effort hint to whether or not `spawn` will succeed.",8,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor failure.",9,{"o":{"n":"self"}}],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at capacity failure.",9,{"o":{"n":"self"}}],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor failure.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at capacity failure.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[3,"EnterError"],[3,"Enter"],[3,"DefaultExecutor"],[8,"Park"],[8,"Unpark"],[3,"ParkThread"],[3,"ParkError"],[3,"UnparkThread"],[8,"Executor"],[3,"SpawnError"]]};
searchIndex["tokio_fs"] = {"doc":"Asynchronous file and standard stream adaptation.","items":[[3,"CreateDirFuture","tokio_fs","Future returned by `create_dir`.",null,null],[3,"CreateDirAllFuture","","Future returned by `create_dir_all`.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a file is opened.",null,null],[3,"HardLinkFuture","","Future returned by `hard_link`.",null,null],[3,"MetadataFuture","","Future returned by `metadata`.",null,null],[3,"ReadDirFuture","","Future returned by `read_dir`.",null,null],[3,"ReadDir","","Stream of the entries in a directory.",null,null],[3,"DirEntry","","Entries returned by the [`ReadDir`] stream.",null,null],[3,"ReadLinkFuture","","Future returned by `read_link`.",null,null],[3,"RemoveDirFuture","","Future returned by `remove_dir`.",null,null],[3,"RemoveFileFuture","","Future returned by `remove_file`.",null,null],[3,"RenameFuture","","Future returned by `rename`.",null,null],[3,"SetPermissionsFuture","","Future returned by `set_permissions`.",null,null],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"SymlinkMetadataFuture","","Future returned by `symlink_metadata`.",null,null],[5,"create_dir","","Creates a new, empty directory at the provided path",null,{"i":[{"n":"p"}],"o":{"n":"createdirfuture"}}],[5,"create_dir_all","","Recursively create a directory and all of its parent components if they are missing.",null,{"i":[{"n":"p"}],"o":{"n":"createdirallfuture"}}],[5,"hard_link","","Creates a new hard link on the filesystem.",null,{"i":[{"n":"p"},{"n":"q"}],"o":{"n":"hardlinkfuture"}}],[5,"metadata","","Queries the file system metadata for a path.",null,{"i":[{"n":"p"}],"o":{"n":"metadatafuture"}}],[5,"read_dir","","Returns a stream over the entries within a directory.",null,{"i":[{"n":"p"}],"o":{"n":"readdirfuture"}}],[5,"read_link","","Reads a symbolic link, returning the file that the link points to.",null,{"i":[{"n":"p"}],"o":{"n":"readlinkfuture"}}],[5,"remove_dir","","Removes an existing, empty directory.",null,{"i":[{"n":"p"}],"o":{"n":"removedirfuture"}}],[5,"remove_file","","Removes a file from the filesystem.",null,{"i":[{"n":"p"}],"o":{"n":"removefilefuture"}}],[5,"rename","","Rename a file or directory to a new name, replacing the original file if `to` already exists.",null,{"i":[{"n":"p"},{"n":"q"}],"o":{"n":"renamefuture"}}],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,{"i":[{"n":"p"},{"n":"permissions"}],"o":{"n":"setpermissionsfuture"}}],[5,"stdin","","Constructs a new handle to the standard input of the current process.",null,{"o":{"n":"stdin"}}],[5,"stdout","","Constructs a new handle to the standard output of the current process.",null,{"o":{"n":"stdout"}}],[5,"stderr","","Constructs a new handle to the standard error of the current process.",null,{"o":{"n":"stderr"}}],[5,"symlink_metadata","","Queries the file system metadata for a path.",null,{"i":[{"n":"p"}],"o":{"n":"symlinkmetadatafuture"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",0,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",1,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[0,"file","","Types for working with [`File`].",null,null],[3,"CreateFuture","tokio_fs::file","Future returned by `File::create` and resolves to a `File` instance.",null,null],[3,"MetadataFuture","","Future returned by `File::metadata` and resolves to a `(Metadata, File)` instance.",null,null],[3,"OpenFuture","","Future returned by `File::open` and resolves to a `File` instance.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a file is opened.",null,null],[3,"SeekFuture","","Future returned by `File::seek`.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",2,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",3,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",4,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"clone","tokio_fs","",5,{"i":[{"n":"self"}],"o":{"n":"openoptions"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",5,{"o":{"n":"openoptions"}}],[11,"read","","See the underlying [`read`] call for details.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"write","","See the underlying [`write`] call for details.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"append","","See the underlying [`append`] call for details.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"truncate","","See the underlying [`truncate`] call for details.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"create","","See the underlying [`create`] call for details.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"create_new","","See the underlying [`create_new`] call for details.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",5,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"openfuture"}}],[11,"from","","",5,{"i":[{"n":"stdopenoptions"}],"o":{"n":"openoptions"}}],[11,"fmt","tokio_fs::file","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",6,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"open","","Attempts to open a file in read-only mode.",7,{"i":[{"n":"p"}],"o":{"n":"openfuture"}}],[11,"create","","Opens a file in write-only mode.",7,{"i":[{"n":"p"}],"o":{"n":"createfuture"}}],[11,"poll_seek","","Seek to an offset, in bytes, in a stream.",7,{"i":[{"n":"self"},{"n":"seekfrom"}],"o":{"g":["u64","error"],"n":"poll"}}],[11,"seek","","Seek to an offset, in bytes, in a stream.",7,{"i":[{"n":"self"},{"n":"seekfrom"}],"o":{"n":"seekfuture"}}],[11,"poll_sync_all","","Attempts to sync all OS-internal metadata to disk.",7,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"poll_sync_data","","This function is similar to `poll_sync_all`, except that it may not synchronize file metadata to the filesystem.",7,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"poll_set_len","","Truncates or extends the underlying file, updating the size of this file to become size.",7,{"i":[{"n":"self"},{"n":"u64"}],"o":{"g":["error"],"n":"poll"}}],[11,"metadata","","Queries metadata about the underlying file.",7,{"i":[{"n":"self"}],"o":{"n":"metadatafuture"}}],[11,"poll_metadata","","Queries metadata about the underlying file.",7,{"i":[{"n":"self"}],"o":{"g":["metadata","error"],"n":"poll"}}],[11,"poll_try_clone","","Create a new `File` instance that shares the same underlying file handle as the existing `File` instance. Reads, writes, and seeks will affect both File instances simultaneously.",7,{"i":[{"n":"self"}],"o":{"g":["file","error"],"n":"poll"}}],[11,"poll_set_permissions","","Changes the permissions on the underlying file.",7,{"i":[{"n":"self"},{"n":"permissions"}],"o":{"g":["error"],"n":"poll"}}],[11,"into_std","","Destructures the `tokio_fs::File` into a [`std::fs::File`][std].",7,{"i":[{"n":"self"}],"o":{"n":"stdfile"}}],[11,"read","","",7,null],[11,"prepare_uninitialized_buffer","","",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",7,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"drop","","",7,{"i":[{"n":"self"}]}],[11,"fmt","tokio_fs","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",8,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",9,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[0,"os","","OS-specific functionality.",null,null],[0,"unix","tokio_fs::os","Unix-specific extensions to primitives in the `tokio_fs` module.",null,null],[3,"SymlinkFuture","tokio_fs::os::unix","Future returned by `symlink`.",null,null],[5,"symlink","","Creates a new symbolic link on the filesystem.",null,{"i":[{"n":"p"},{"n":"q"}],"o":{"n":"symlinkfuture"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",10,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","tokio_fs","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",11,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",12,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_std","","Destructures the `tokio_fs::DirEntry` into a [`std::fs::DirEntry`][std].",13,{"i":[{"n":"self"}],"o":{"n":"stddirentry"}}],[11,"path","","Returns the full path to the file that this entry represents.",13,{"i":[{"n":"self"}],"o":{"n":"pathbuf"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other leading path component.",13,{"i":[{"n":"self"}],"o":{"n":"osstring"}}],[11,"poll_metadata","","Return the metadata for the file that this entry points at.",13,{"i":[{"n":"self"}],"o":{"g":["metadata","error"],"n":"poll"}}],[11,"poll_file_type","","Return the file type for the file that this entry points at.",13,{"i":[{"n":"self"}],"o":{"g":["filetype","error"],"n":"poll"}}],[11,"ino","","",13,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",14,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",15,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",16,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",17,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",18,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"read","","",19,null],[11,"prepare_uninitialized_buffer","","",19,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write","","",20,null],[11,"flush","","",20,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",20,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"write","","",21,null],[11,"flush","","",21,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",21,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",22,{"i":[{"n":"self"}],"o":{"n":"poll"}}]],"paths":[[3,"CreateDirFuture"],[3,"CreateDirAllFuture"],[3,"CreateFuture"],[3,"MetadataFuture"],[3,"OpenFuture"],[3,"OpenOptions"],[3,"SeekFuture"],[3,"File"],[3,"HardLinkFuture"],[3,"MetadataFuture"],[3,"SymlinkFuture"],[3,"ReadDirFuture"],[3,"ReadDir"],[3,"DirEntry"],[3,"ReadLinkFuture"],[3,"RemoveDirFuture"],[3,"RemoveFileFuture"],[3,"RenameFuture"],[3,"SetPermissionsFuture"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"SymlinkMetadataFuture"]]};
searchIndex["tokio_io"] = {"doc":"Core I/O traits and combinators when working with Tokio.","items":[[0,"io","tokio_io","I/O conveniences when working with primitives in `tokio-core`",null,null],[3,"AllowStdIo","tokio_io::io","A simple wrapper type which allows types that only implement `std::io::Read` or `std::io::Write` to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.",null,null],[3,"Copy","","A future which will copy all data from a reader into a writer.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"Lines","","Combinator created by the top-level `lines` method which is a stream over the lines of text on an I/O object.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[3,"ReadUntil","","A future which can be used to easily read the contents of a stream into a vector until the delimiter is reached.",null,null],[3,"Shutdown","","A future used to fully shutdown an I/O object.",null,null],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",null,null],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[5,"copy","","Creates a future which represents copying all the bytes from one object to another.",null,{"i":[{"n":"r"},{"n":"w"}],"o":{"n":"copy"}}],[5,"flush","","Creates a future which will entirely flush an I/O object and then yield the object itself.",null,{"i":[{"n":"a"}],"o":{"n":"flush"}}],[5,"lines","","Creates a new stream from the I/O object given representing the lines of input that are found on `A`.",null,{"i":[{"n":"a"}],"o":{"n":"lines"}}],[5,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",null,{"i":[{"n":"r"},{"n":"t"}],"o":{"n":"read"}}],[5,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",null,{"i":[{"n":"a"},{"n":"t"}],"o":{"n":"readexact"}}],[5,"read_to_end","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided.",null,{"i":[{"n":"a"},{"g":["u8"],"n":"vec"}],"o":{"n":"readtoend"}}],[5,"read_until","","Creates a future which will read all the bytes associated with the I/O object `A` into the buffer provided until the delimiter `byte` is reached. This method is the async equivalent to [`BufRead::read_until`].",null,{"i":[{"n":"a"},{"n":"u8"},{"g":["u8"],"n":"vec"}],"o":{"n":"readuntil"}}],[5,"shutdown","","Creates a future which will entirely shutdown an I/O object and then yield the object itself.",null,{"i":[{"n":"a"}],"o":{"n":"shutdown"}}],[5,"write_all","","Creates a future that will write the entire contents of the buffer `buf` to the stream `a` provided.",null,{"i":[{"n":"a"},{"n":"t"}],"o":{"n":"writeall"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",0,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",3,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",4,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",5,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",6,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",7,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"allowstdio"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"bool"}}],[11,"cmp","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"bool"}}],[11,"le","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"bool"}}],[11,"gt","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"bool"}}],[11,"ge","","",8,{"i":[{"n":"self"},{"n":"allowstdio"}],"o":{"n":"bool"}}],[11,"hash","","",8,null],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",8,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"get_ref","","Returns a reference to the contained IO object.",8,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained IO object.",8,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes self and returns the contained IO object.",8,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"write","","",8,null],[11,"flush","","",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"write_all","","",8,null],[11,"write_fmt","","",8,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"n":"result"}}],[11,"shutdown","","",8,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"read","","",8,null],[11,"read_to_end","","",8,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["usize"],"n":"result"}}],[11,"read_to_string","","",8,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["usize"],"n":"result"}}],[11,"read_exact","","",8,null],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Returns the underlying I/O object.",9,{"i":[{"n":"self"}],"o":{"n":"a"}}],[11,"poll","","",9,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"poll"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"read","","",10,null],[11,"read_buf","","",10,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[11,"write","","",11,null],[11,"flush","","",11,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",11,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"write_buf","","",11,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",12,{"i":[{"n":"t"}],"o":{"n":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",12,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",12,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",12,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",12,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",12,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"set_start","","Changes the starting index of this window to the index specified.",12,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"window"}}],[11,"set_end","","Changes the end index of this window to the index specified.",12,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"window"}}],[11,"as_ref","","",12,null],[11,"as_mut","","",12,null],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error component is `io::Error`",null,null],[6,"IoStream","","A convenience typedef around a `Stream` whose error component is `io::Error`",null,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to `read`. Returns `true` if the supplied buffer was zeroed out.",13,null],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",13,null],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`, returning how many bytes were read.",13,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",13,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",13,null],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",14,null],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",14,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[10,"shutdown","","Initiates or attempts to shut down this writer, returning success when the I/O connection has completely shut down.",14,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes were written.",14,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from the `Read` and `Write` traits.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to `read`. Returns `true` if the supplied buffer was zeroed out.",13,null],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",13,null],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`, returning how many bytes were read.",13,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this `Io` object, using `Decode` and `Encode` to read and write the raw data.",13,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"framed"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",13,null],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",14,null],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",14,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes were written.",14,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}]],"paths":[[3,"Copy"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"WriteAll"],[3,"AllowStdIo"],[3,"Lines"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[8,"AsyncRead"],[8,"AsyncWrite"]]};
searchIndex["tokio_reactor"] = {"doc":"Event loop that drives Tokio I/O resources.","items":[[3,"Background","tokio_reactor","Handle to the reactor running on a background thread.",null,null],[3,"Shutdown","","Future that resolves when the reactor thread has shutdown.",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that drives it.",null,null],[3,"PollEvented","","Associates an I/O resource that implements the [`std::Read`] and / or [`std::Write`] traits with the reactor that drives it.",null,null],[3,"Reactor","","The core reactor, or event loop.",null,null],[3,"Handle","","A reference to a reactor.",null,null],[3,"Turn","","Return value from the `turn` method on `Reactor`.",null,null],[3,"SetFallbackError","","Error returned from `Handle::set_fallback`.",null,null],[5,"with_default","","Set the default reactor for the duration of the closure",null,{"i":[{"n":"handle"},{"n":"enter"},{"n":"f"}],"o":{"n":"r"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"handle","","Returns a reference to the reactor handle.",0,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",0,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown_now","","Shutdown the reactor immediately",0,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"forget","","Run the reactor on its thread until the process terminates.",0,{"i":[{"n":"self"}]}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"poll","","",1,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"new","","Creates a new `PollEvented` associated with the default reactor.",2,{"i":[{"n":"e"}],"o":{"n":"pollevented"}}],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified reactor.",2,{"i":[{"n":"e"},{"n":"handle"}],"o":{"n":"result"}}],[11,"get_ref","","Returns a shared reference to the underlying I/O object this readiness stream is wrapping.",2,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O object this readiness stream is wrapping.",2,{"i":[{"n":"self"}],"o":{"n":"e"}}],[11,"into_inner","","Consumes self, returning the inner I/O object",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["ready","error"],"n":"poll"}}],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and registers the current task to be notified once a read readiness event is received.",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"result"}}],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",2,{"i":[{"n":"self"}],"o":{"g":["ready","error"],"n":"poll"}}],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and registers the current task to be notified once a write readiness event is received.",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"read","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"shutdown","","",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",2,{"i":[{"n":"self"}]}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Registration`.",3,{"o":{"n":"registration"}}],[11,"register","","Register the I/O resource with the default reactor.",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["bool"],"n":"result"}}],[11,"deregister","","Deregister the I/O resource from the reactor it is associated with.",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"register_with","","Register the I/O resource with the specified reactor.",3,{"i":[{"n":"self"},{"n":"t"},{"n":"handle"}],"o":{"g":["bool"],"n":"result"}}],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",3,{"i":[{"n":"self"}],"o":{"g":["ready","error"],"n":"poll"}}],[11,"take_read_ready","","Consume any pending read readiness event.",3,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness stream.",3,{"i":[{"n":"self"}],"o":{"g":["ready","error"],"n":"poll"}}],[11,"take_write_ready","","Consume any pending write readiness event.",3,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"setfallbackerror"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new event loop, returning any error that happened during the creation.",7,{"o":{"g":["reactor"],"n":"result"}}],[11,"handle","","Returns a handle to this event loop which can be sent across threads and can be used as a proxy to the event loop itself.",7,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"set_fallback","","Configures the fallback handle to be returned from `Handle::default`.",7,{"i":[{"n":"self"}],"o":{"g":["setfallbackerror"],"n":"result"}}],[11,"turn","","Performs one iteration of the event loop, blocking on waiting for events for at most `max_wait` (forever if `None`).",7,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["turn"],"n":"result"}}],[11,"is_idle","","Returns true if the reactor is currently idle.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"background","","Run this reactor on a background thread.",7,{"i":[{"n":"self"}],"o":{"g":["background"],"n":"result"}}],[11,"unpark","","",7,null],[11,"park","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"park_timeout","","",7,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"current","","Returns a handle to the current reactor.",4,{"o":{"n":"handle"}}],[11,"unpark","","",4,{"i":[{"n":"self"}]}],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily binds to a reactor.",4,{"o":{"n":"handle"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Background"],[3,"Shutdown"],[3,"PollEvented"],[3,"Registration"],[3,"Handle"],[3,"Turn"],[3,"SetFallbackError"],[3,"Reactor"]]};
searchIndex["tokio_tcp"] = {"doc":"TCP bindings for `tokio`.","items":[[3,"Incoming","tokio_tcp","Stream returned by the `TcpListener::incoming` function representing the stream of sockets received from a listener.",null,null],[3,"TcpListener","","An I/O object representing a TCP socket listening for incoming connections.",null,null],[3,"TcpStream","","An I/O object representing a TCP stream connected to a remote endpoint.",null,null],[3,"ConnectFuture","","Future returned by `TcpStream::connect` which will resolve to a `TcpStream` when the stream is connected.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",0,{"i":[{"n":"self"}],"o":{"g":["option","error"],"n":"poll"}}],[11,"as_raw_fd","","",1,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"bind","","Create a new TCP listener associated with this event loop.",1,{"i":[{"n":"socketaddr"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"poll_accept","","Attempt to accept a connection and create a new connected `TcpStream` if successful.",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected `TcpStream` if successful.",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"from_std","","Create a new TCP listener from the standard library's TCP listener.",1,{"i":[{"n":"tcplistener"},{"n":"handle"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"local_addr","","Returns the local address that this listener is bound to.",1,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"incoming","","Consumes this listener, returning a stream of the sockets this listener accepts.",1,{"i":[{"n":"self"}],"o":{"n":"incoming"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_raw_fd","","",2,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"connect","","Create a new TCP stream connected to the specified address.",2,{"i":[{"n":"socketaddr"}],"o":{"n":"connectfuture"}}],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",2,{"i":[{"n":"tcpstream"},{"n":"handle"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpStream`, connecting it to the address specified.",2,{"i":[{"n":"tcpstream"},{"n":"socketaddr"},{"n":"handle"}],"o":{"n":"connectfuture"}}],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["ready","error"],"n":"poll"}}],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",2,{"i":[{"n":"self"}],"o":{"g":["ready","error"],"n":"poll"}}],[11,"local_addr","","Returns the local address that this stream is bound to.",2,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"peer_addr","","Returns the remote address that this stream is connected to.",2,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"poll_peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",2,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",2,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",2,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",2,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",2,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",2,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",2,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",2,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",2,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",2,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"linger","","Reads the linger duration for this socket by getting the `SO_LINGER` option.",2,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"set_linger","","Sets the linger duration of this socket by setting the `SO_LINGER` option.",2,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",2,{"i":[{"n":"self"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"read","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"prepare_uninitialized_buffer","","",2,null],[11,"read_buf","","",2,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[11,"shutdown","","",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"write_buf","","",2,{"i":[{"n":"self"},{"n":"b"}],"o":{"g":["usize","error"],"n":"poll"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",3,{"i":[{"n":"self"}],"o":{"g":["tcpstream","error"],"n":"poll"}}]],"paths":[[3,"Incoming"],[3,"TcpListener"],[3,"TcpStream"],[3,"ConnectFuture"]]};
searchIndex["tokio_threadpool"] = {"doc":"A work-stealing based thread pool for executing futures.","items":[[3,"BlockingError","tokio_threadpool","Error raised by `blocking`.",null,null],[3,"Builder","","Builds a thread pool with custom configuration values.",null,null],[3,"Sender","","Submit futures to the associated thread pool for execution.",null,null],[3,"Shutdown","","Future that resolves when the thread pool is shutdown.",null,null],[3,"ThreadPool","","Work-stealing based thread pool for executing futures.",null,null],[3,"Worker","","Thread worker",null,null],[3,"WorkerId","","Identifies a thread pool worker.",null,null],[5,"blocking","","Enter a blocking section of code.",null,{"i":[{"n":"f"}],"o":{"g":["blockingerror"],"n":"poll"}}],[0,"park","","Thread parking utilities.",null,null],[3,"DefaultPark","tokio_threadpool::park","Parks the thread.",null,null],[3,"DefaultUnpark","","Unparks threads that were parked by `DefaultPark`.",null,null],[3,"ParkError","","Error returned by [`ParkThread`]",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `DefaultPark` instance.",0,{"o":{"n":"defaultpark"}}],[11,"unpark","","",0,null],[11,"park","","",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"park_timeout","","",0,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"result"}}],[11,"unpark","","",1,{"i":[{"n":"self"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","tokio_threadpool","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"new","","Returns a new thread pool builder initialized with default configuration values.",4,{"o":{"n":"builder"}}],[11,"pool_size","","Set the maximum number of worker threads for the thread pool instance.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"max_blocking","","Set the maximum number of concurrent blocking sections.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"keep_alive","","Set the worker thread keep alive duration",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"self"}}],[11,"name_prefix","","Set name prefix of threads spawned by the scheduler",4,{"i":[{"n":"self"},{"n":"s"}],"o":{"n":"self"}}],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"around_worker","","Execute function `f` on each worker thread.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"after_start","","Execute function `f` after each thread is started but before it starts doing work.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"before_stop","","Execute function `f` before each thread stops.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"custom_park","","Customize the `park` instance used by each worker thread.",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"build","","Create the configured `ThreadPool`.",4,{"i":[{"n":"self"}],"o":{"n":"threadpool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"spawn","","Spawn a future onto the thread pool",5,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"status","","",5,{"i":[{"n":"self"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"spawn","","",5,{"i":[{"n":"self"},{"g":["future"],"n":"box"}],"o":{"g":["spawnerror"],"n":"result"}}],[11,"execute","","",5,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["executeerror"],"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",6,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ThreadPool` with default values.",7,{"o":{"n":"threadpool"}}],[11,"spawn","","Spawn a future onto the thread pool.",7,{"i":[{"n":"self"},{"n":"f"}]}],[11,"sender","","Return a reference to the sender handle",7,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"sender_mut","","Return a mutable reference to the sender handle",7,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"shutdown_on_idle","","Shutdown the pool once it becomes idle.",7,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown","","Shutdown the pool",7,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"shutdown_now","","Shutdown the pool immediately",7,{"i":[{"n":"self"}],"o":{"n":"shutdown"}}],[11,"drop","","",7,{"i":[{"n":"self"}]}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"workerid"}}],[11,"hash","","",9,null],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"workerid"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"workerid"}],"o":{"n":"bool"}}],[11,"id","","Returns a reference to the worker's identifier.",8,{"i":[{"n":"self"}],"o":{"n":"workerid"}}],[11,"run","","Run the worker",8,{"i":[{"n":"self"}]}],[11,"drop","","",8,{"i":[{"n":"self"}]}]],"paths":[[3,"DefaultPark"],[3,"DefaultUnpark"],[3,"ParkError"],[3,"BlockingError"],[3,"Builder"],[3,"Sender"],[3,"Shutdown"],[3,"ThreadPool"],[3,"Worker"],[3,"WorkerId"]]};
searchIndex["tokio_timer"] = {"doc":"Utilities for scheduling work to happen after a period of time.","items":[[3,"Deadline","tokio_timer","Allows a given `Future` to execute until the specified deadline.",null,null],[3,"DeadlineError","","Error returned by `Deadline` future.",null,null],[3,"Delay","","A future that completes at a specified instant in time.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Interval","","A stream representing notifications at fixed interval",null,null],[5,"with_default","","Set the default timer for the duration of the closure.",null,{"i":[{"n":"handle"},{"n":"enter"},{"n":"f"}],"o":{"n":"r"}}],[5,"sleep","","Create a Future that completes in `duration` from now.",null,{"i":[{"n":"duration"}],"o":{"n":"delay"}}],[0,"clock","","A configurable source of time.",null,null],[3,"Clock","tokio_timer::clock","A handle to a source of time.",null,null],[5,"now","","Returns an `Instant` corresponding to \"now\".",null,{"o":{"n":"instant"}}],[5,"with_default","","Set the default clock for the duration of the closure.",null,{"i":[{"n":"clock"},{"n":"enter"},{"n":"f"}],"o":{"n":"r"}}],[11,"default","","",0,{"o":{"n":"clock"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"clock"}}],[11,"new","","Return a new `Clock` instance that uses the current execution context's source of time.",0,{"o":{"n":"clock"}}],[11,"new_with_now","","Return a new `Clock` instance that uses `now` as the source of time.",0,{"i":[{"n":"t"}],"o":{"n":"clock"}}],[11,"system","","Return a new `Clock` instance that uses `Instant::now()` as the source of time.",0,{"o":{"n":"clock"}}],[11,"now","","Returns an instant corresponding to \"now\" by using the instance's source of time.",0,{"i":[{"n":"self"}],"o":{"n":"instant"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[8,"Now","","Returns `Instant` values representing the current instant in time.",null,null],[10,"now","","Returns an instant corresponding to \"now\".",1,{"i":[{"n":"self"}],"o":{"n":"instant"}}],[0,"timer","tokio_timer","Timer implementation.",null,null],[3,"Handle","tokio_timer::timer","Handle to timer instance.",null,null],[3,"SystemNow","","A handle to a source of time.",null,null],[3,"Timer","","Timer implementation that drives [`Delay`], [`Interval`], and [`Deadline`].",null,null],[3,"Turn","","Return value from the `turn` method on `Timer`.",null,null],[5,"with_default","","Set the default timer for the duration of the closure.",null,{"i":[{"n":"handle"},{"n":"enter"},{"n":"f"}],"o":{"n":"r"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"current","","Returns a handle to the current timer.",2,{"o":{"n":"handle"}}],[11,"delay","","Create a `Delay` driven by this handle's associated `Timer`.",2,{"i":[{"n":"self"},{"n":"instant"}],"o":{"n":"delay"}}],[11,"deadline","","Create a `Deadline` driven by this handle's associated `Timer`.",2,{"i":[{"n":"self"},{"n":"t"},{"n":"instant"}],"o":{"n":"deadline"}}],[11,"interval","","Create a new `Interval` that starts at `at` and yields every `duration` interval after that.",2,{"i":[{"n":"self"},{"n":"instant"},{"n":"duration"}],"o":{"n":"interval"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Timer` instance that uses `park` to block the current thread.",3,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"get_park","","Returns a reference to the underlying `Park` instance.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park` instance.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"new_with_now","","Create a new `Timer` instance that uses `park` to block the current thread and `now` to get the current `Instant`.",3,{"i":[{"n":"t"},{"n":"n"}],"o":{"n":"self"}}],[11,"handle","","Returns a handle to the timer.",3,{"i":[{"n":"self"}],"o":{"n":"handle"}}],[11,"turn","","Performs one iteration of the timer loop.",3,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"g":["turn"],"n":"result"}}],[11,"default","","",3,{"o":{"n":"self"}}],[11,"unpark","","",3,null],[11,"park","","",3,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"park_timeout","","",3,{"i":[{"n":"self"},{"n":"duration"}],"o":{"n":"result"}}],[11,"drop","","",3,{"i":[{"n":"self"}]}],[11,"fmt","tokio_timer","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Deadline` that completes when `future` completes or when `deadline` is reached.",5,{"i":[{"n":"t"},{"n":"instant"}],"o":{"n":"deadline"}}],[11,"get_ref","","Gets a reference to the underlying future in this deadline.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying future in this deadline.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_inner","","Consumes this deadline, returning the underlying future.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"poll","","",5,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"inner","","Create a new `DeadlineError` representing the inner future completing with `Err`.",6,{"i":[{"n":"t"}],"o":{"n":"deadlineerror"}}],[11,"is_inner","","Returns `true` if the error was caused by the inner future completing with `Err`.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_inner","","Consumes `self`, returning the inner future error.",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"elapsed","","Create a new `DeadlineError` representing the inner future not completing before the deadline is reached.",6,{"o":{"n":"deadlineerror"}}],[11,"is_elapsed","","Returns `true` if the error was caused by the inner future not completing before the deadline is reached.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"timer","","Creates a new `DeadlineError` representing an error encountered by the timer implementation",6,{"i":[{"n":"error"}],"o":{"n":"deadlineerror"}}],[11,"is_timer","","Returns `true` if the error was caused by the timer.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_timer","","Consumes `self`, returning the error raised by the timer implementation.",6,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}],[11,"description","","",6,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Delay` instance that elapses at `deadline`.",7,{"i":[{"n":"instant"}],"o":{"n":"delay"}}],[11,"deadline","","Returns the instant at which the future will complete.",7,{"i":[{"n":"self"}],"o":{"n":"instant"}}],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"reset","","Reset the `Delay` instance to a new deadline.",7,{"i":[{"n":"self"},{"n":"instant"}]}],[11,"poll","","",7,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"shutdown","","Create an error representing a shutdown timer.",8,{"o":{"n":"error"}}],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being shutdown.",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"at_capacity","","Create an error representing a timer at capacity.",8,{"o":{"n":"error"}}],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being at capacity.",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"description","","",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Interval` that starts at `at` and yields every `duration` interval after that.",9,{"i":[{"n":"instant"},{"n":"duration"}],"o":{"n":"interval"}}],[11,"new_interval","","Creates new `Interval` that yields with interval of `duration`.",9,{"i":[{"n":"duration"}],"o":{"n":"interval"}}],[11,"poll","","",9,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}]],"paths":[[3,"Clock"],[8,"Now"],[3,"Handle"],[3,"Timer"],[3,"Turn"],[3,"Deadline"],[3,"DeadlineError"],[3,"Delay"],[3,"Error"],[3,"Interval"]]};
searchIndex["tokio_udp"] = {"doc":"UDP bindings for `tokio`.","items":[[3,"UdpFramed","tokio_udp","A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using the `Encoder` and `Decoder` traits to encode and decode frames.",null,null],[3,"UdpSocket","","An I/O object representing a UDP socket.",null,null],[3,"SendDgram","","A future used to write the entire contents of some data to a UDP socket.",null,null],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",0,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"poll"}}],[11,"start_send","","",0,null],[11,"poll_complete","","",0,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"close","","",0,{"i":[{"n":"self"}],"o":{"n":"poll"}}],[11,"new","","Create a new `UdpFramed` backed by the given socket and codec.",0,{"i":[{"n":"udpsocket"},{"n":"c"}],"o":{"n":"udpframed"}}],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",0,{"i":[{"n":"self"}],"o":{"n":"udpsocket"}}],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.",0,{"i":[{"n":"self"}],"o":{"n":"udpsocket"}}],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",0,{"i":[{"n":"self"}],"o":{"n":"udpsocket"}}],[11,"as_raw_fd","","",1,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"bind","","This function will create a new UDP socket and attempt to bind it to the `addr` provided.",1,{"i":[{"n":"socketaddr"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket provided.",1,{"i":[{"n":"udpsocket"},{"n":"handle"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"local_addr","","Returns the local address that this socket is bound to.",1,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"connect","","Connects the UDP socket setting the default destination for send() and limiting packets that are read via recv from the address specified in `addr`.",1,{"i":[{"n":"self"},{"n":"socketaddr"}],"o":{"n":"result"}}],[11,"poll_send","","Sends data on the socket to the remote address to which it is connected.",1,null],[11,"poll_recv","","Receives a single datagram message on the socket from the remote address to which it is connected. On success, returns the number of bytes read.",1,null],[11,"poll_send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",1,null],[11,"send_dgram","","Creates a future that will write the entire contents of the buffer `buf` provided as a datagram to this socket.",1,{"i":[{"n":"self"},{"n":"t"},{"n":"socketaddr"}],"o":{"n":"senddgram"}}],[11,"poll_recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",1,null],[11,"recv_dgram","","Creates a future that receive a datagram to be written to the buffer provided.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"recvdgram"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",1,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",1,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",1,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",1,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",1,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"poll","","",3,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"poll"}}]],"paths":[[3,"UdpFramed"],[3,"UdpSocket"],[3,"SendDgram"],[3,"RecvDgram"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
